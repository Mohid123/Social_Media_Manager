{"version":3,"sources":["webpack:///node_modules/@angular/cdk/fesm2015/overlay.js","webpack:///src/app/modules/auth/auth.module.ts","webpack:///src/app/modules/auth/registration/registration.component.ts","webpack:///src/app/modules/auth/registration/registration.component.html","webpack:///src/app/modules/auth/login/login.component.ts","webpack:///src/app/modules/auth/login/login.component.html","webpack:///src/app/modules/auth/logout/logout.component.ts","webpack:///src/app/modules/auth/logout/logout.component.html","webpack:///src/app/modules/auth/auth.component.ts","webpack:///src/app/modules/auth/auth.component.html","webpack:///src/app/modules/auth/registration/confirm-password.validator.ts","webpack:///src/app/modules/auth/forgot-password/forgot-password.component.ts","webpack:///src/app/modules/auth/forgot-password/forgot-password.component.html","webpack:///node_modules/@angular/material/fesm2015/select.js","webpack:///src/app/modules/auth/auth-routing.module.ts","webpack:///src/app/modules/auth/_models/user.model.ts"],"names":["scrollBehaviorSupported","BlockScrollStrategy","_viewportRuler","document","_previousHTMLStyles","top","left","_isEnabled","_document","_canBeEnabled","root","documentElement","_previousScrollPosition","getViewportScrollPosition","style","classList","add","html","body","htmlStyle","bodyStyle","previousHtmlScrollBehavior","scrollBehavior","previousBodyScrollBehavior","remove","window","scroll","contains","viewport","getViewportSize","scrollHeight","height","scrollWidth","width","getMatScrollStrategyAlreadyAttachedError","Error","CloseScrollStrategy","_scrollDispatcher","_ngZone","_config","_scrollSubscription","_detach","disable","_overlayRef","hasAttached","run","detach","overlayRef","ngDevMode","stream","scrolled","threshold","_initialScrollPosition","subscribe","scrollPosition","Math","abs","updatePosition","unsubscribe","NoopScrollStrategy","isElementScrolledOutsideView","element","scrollContainers","some","containerBounds","outsideAbove","bottom","outsideBelow","outsideLeft","right","outsideRight","isElementClippedByScrolling","scrollContainerRect","clippedAbove","clippedBelow","clippedLeft","clippedRight","RepositionScrollStrategy","throttle","scrollThrottle","autoClose","overlayRect","overlayElement","getBoundingClientRect","parentRects","ScrollStrategyOptions","noop","close","config","block","reposition","ɵfac","ScrollStrategyOptions_Factory","t","ɵprov","factory","token","providedIn","ctorParameters","type","undefined","decorators","args","OverlayConfig","scrollStrategy","panelClass","hasBackdrop","backdropClass","disposeOnNavigation","configKeys","Object","keys","key","ConnectionPositionPair","origin","overlay","offsetX","offsetY","originX","originY","overlayX","overlayY","ScrollingVisibility","ConnectedOverlayPositionChange","connectionPair","scrollableViewProperties","validateVerticalPosition","property","value","validateHorizontalPosition","BaseOverlayDispatcher","_attachedOverlays","push","index","indexOf","splice","length","BaseOverlayDispatcher_Factory","OverlayKeyboardDispatcher","_keydownListener","event","overlays","i","_keydownEvents","observers","next","_isAttached","addEventListener","removeEventListener","OverlayKeyboardDispatcher_Factory","OverlayOutsideClickDispatcher","_platform","_cursorStyleIsSet","_clickListener","target","composedPath","slice","_outsidePointerEvents","IOS","_cursorOriginalValue","cursor","OverlayOutsideClickDispatcher_Factory","isTestEnvironment","__karma__","jasmine","OverlayContainer","container","_containerElement","parentNode","removeChild","_createContainer","containerClass","isBrowser","oppositePlatformContainers","querySelectorAll","createElement","setAttribute","appendChild","OverlayContainer_Factory","OverlayRef","_portalOutlet","_host","_pane","_keyboardDispatcher","_location","_outsideClickDispatcher","_backdropElement","_backdropClick","_attachments","_detachments","_locationChanges","EMPTY","_backdropClickHandler","_scrollStrategy","attach","_positionStrategy","positionStrategy","portal","attachResult","parentElement","_previousHostParent","_updateStackingOrder","_updateElementSize","_updateElementDirection","enable","onStable","pipe","_togglePointerEvents","_attachBackdrop","_toggleClasses","dispose","detachBackdrop","detachmentResult","_detachContentWhenStable","isAttached","_disposeScrollStrategy","complete","apply","strategy","sizeConfig","assign","dir","direction","classes","getDirection","minWidth","minHeight","maxWidth","maxHeight","enablePointer","pointerEvents","showingClass","insertBefore","requestAnimationFrame","runOutsideAngular","nextSibling","backdropToDetach","timeoutId","finishDetach","clearTimeout","setTimeout","cssClasses","isAdd","forEach","cssClass","subscription","children","boundingBoxClass","cssUnitPattern","FlexibleConnectedPositionStrategy","connectedTo","_overlayContainer","_lastBoundingBoxSize","_isPushed","_canPush","_growAfterOpen","_hasFlexibleDimensions","_positionLocked","_viewportMargin","_scrollables","_preferredPositions","_positionChanges","_resizeSubscription","_offsetX","_offsetY","_appliedPanelClasses","positionChanges","setOrigin","_validatePositions","hostElement","_boundingBox","_isDisposed","_isInitialRender","_lastPosition","change","reapplyLastPosition","_clearPanelClasses","_resetOverlayElementStyles","_resetBoundingBoxStyles","_viewportRect","_getNarrowedViewportRect","_originRect","_getOriginRect","_overlayRect","originRect","viewportRect","flexibleFits","fallback","pos","originPoint","_getOriginPoint","overlayPoint","_getOverlayPoint","overlayFit","_getOverlayFit","isCompletelyWithinViewport","_applyPosition","_canFitWithFlexibleDimensions","position","boundingBoxRect","_calculateBoundingBoxRect","visibleArea","bestFit","bestScore","fit","score","weight","_previousPushAmount","extendStyles","alignItems","justifyContent","lastPosition","scrollables","positions","margin","flexibleDimensions","growAfterOpen","canPush","isLocked","_origin","offset","selector","_transformOriginSelector","x","startX","_isRtl","endX","y","overlayStartX","overlayStartY","point","rawOverlayRect","getRoundedBoundingClientRect","_getOffset","leftOverflow","rightOverflow","topOverflow","bottomOverflow","visibleWidth","_subtractOverflows","visibleHeight","fitsInViewportVertically","fitsInViewportHorizontally","availableHeight","availableWidth","getPixelValue","getConfig","verticalFit","horizontalFit","start","overflowRight","max","overflowBottom","overflowTop","overflowLeft","pushX","pushY","_setTransformOrigin","_setOverlayElementStyles","_setBoundingBoxStyles","_addPanelClasses","_getScrollVisibility","changeEvent","elements","xOrigin","yOrigin","transformOrigin","isRtl","smallestDistanceToViewportEdge","min","previousHeight","isBoundedByRightViewportEdge","isBoundedByLeftViewportEdge","previousWidth","styles","_hasExactPosition","transform","hasExactPosition","hasFlexibleDimensions","_getExactOverlayY","_getExactOverlayX","transformString","trim","_pushOverlayOnScreen","virtualKeyboardOffset","getContainerElement","documentHeight","clientHeight","horizontalStyleProperty","documentWidth","clientWidth","originBounds","overlayBounds","scrollContainerBounds","map","scrollable","getElementRef","nativeElement","isOriginClipped","isOriginOutsideView","isOverlayClipped","isOverlayOutsideView","overflows","reduce","currentValue","currentOverflow","axis","pair","Element","destination","source","hasOwnProperty","input","split","units","parseFloat","clientRect","floor","ConnectedPositionStrategy","originPos","overlayPos","viewportRuler","platform","overlayContainer","withFlexibleDimensions","withPush","withViewportMargin","withFallbackPosition","onPositionChange","_direction","setDirection","withScrollableContainers","withPositions","withDefaultOffsetX","withDefaultOffsetY","withLockedPosition","wrapperClass","GlobalPositionStrategy","_cssPosition","_topOffset","_bottomOffset","_leftOffset","_rightOffset","_alignItems","_justifyContent","_width","_height","updateSize","parentStyles","shouldBeFlushHorizontally","shouldBeFlushVertically","marginLeft","marginTop","marginBottom","marginRight","parent","OverlayPositionBuilder","elementRef","OverlayPositionBuilder_Factory","nextUniqueId","Overlay","scrollStrategies","_componentFactoryResolver","_positionBuilder","_injector","_directionality","host","_createHostElement","pane","_createPaneElement","portalOutlet","_createPortalOutlet","overlayConfig","id","_appRef","get","Overlay_Factory","defaultPositionList","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY","CdkOverlayOrigin","CdkOverlayOrigin_Factory","ɵdir","selectors","exportAs","CdkConnectedOverlay","_overlay","templateRef","viewContainerRef","scrollStrategyFactory","_dir","_hasBackdrop","_lockPosition","_flexibleDimensions","_push","_backdropSubscription","_attachSubscription","_detachSubscription","_positionSubscription","viewportMargin","open","disableClose","backdropClick","positionChange","overlayKeydown","overlayOutsideClick","_templatePortal","_scrollStrategyFactory","_position","_updatePositionStrategy","changes","_attachOverlay","_detachOverlay","create","_buildConfig","attachments","emit","detachments","keydownEvents","keyCode","preventDefault","outsidePointerEvents","_createPositionStrategy","currentPosition","withGrowAfterOpen","lockPosition","withTransformOriginOn","transformOriginSelector","flexibleConnectedTo","_createOverlay","CdkConnectedOverlay_Factory","inputs","outputs","features","propDecorators","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER","provide","deps","useFactory","OverlayModule","ɵmod","ɵinj","OverlayModule_Factory","providers","imports","ngJitMode","declarations","exports","FullscreenOverlayContainer","_fullScreenEventName","_fullScreenListener","_adjustParentForFullscreenChange","_addFullscreenChangeListener","fullscreenElement","getFullscreenElement","fn","eventName","_getEventName","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","FullscreenOverlayContainer_Factory","PERFECT_SCROLLBAR_CONFIG","suppressScrollX","AuthModule","forRoot","RegistrationComponent","fb","authService","router","isLoading$","currentUserValue","navigate","initForm","registrationForm","controls","group","fullname","compose","required","minLength","maxLength","email","password","cPassword","agree","validator","MatchPassword","hasError","result","f","newUser","setUser","registrationSubscr","registration","user","sb","submit","templateUrl","styleUrls","LoginComponent","_clubService","_authService","modalService","toastr","spinner","cf","activeModal","joyrideService","selectedClub$","SelectedClub$","defaultAuth","searchString","searchStarted","noClubFound","showBackBtn","isPickerClub","limit","searchControl","destroy$","backdrop","keyboard","page","isLoading","valueChanges","newValue","getDividisClubs","getAllClubs","searchClub","hide","initLoginForm","startTour","steps","loginForm","club","updateClub","data","previous","self","selectedClub","error","payload","clubID","pickerClub","pickerModelId","pickerClubID","clubName","show","loginByEmail","res","hasErrors","localStorage","setItem","admin","success","fullName","navigateByUrl","then","hjh","errors","warning","message","allClubs","tempClubs","console","log","find","onClubSelected","content","centered","size","detectChanges","searchClubByNameForPicker","item","baseURL","searchClubByName","isPicker","dismissAll","clubApiUrl","openVerticallyCentered","LogoutComponent","logout","AuthComponent","today","Date","setDefaultClub","localClub","ConfirmPasswordValidator","control","confirmPassword","setErrors","ConfirmPassword","ErrorStates","ForgotPasswordComponent","errorState","NotSubmitted","errorStates","forgotPasswordForm","forgotPasswordSubscr","forgotPassword","NoError","HasError","_c0","_c1","MatSelect_span_4_Template","rf","ctx","ctx_r2","placeholder","MatSelect_span_5_span_1_Template","ctx_r5","triggerValue","MatSelect_span_5_ng_content_2_Template","MatSelect_span_5_Template","ctx_r3","customTrigger","MatSelect_ng_template_8_Template","_r9","MatSelect_ng_template_8_Template_div_animation_transformPanel_done_1_listener","$event","ctx_r8","_panelDoneAnimatingStream","toState","MatSelect_ng_template_8_Template_div_keydown_1_listener","ctx_r10","_handleKeydown","ctx_r4","_getPanelTheme","_transformOrigin","_triggerFontSize","multiple","ariaLabel","_getPanelAriaLabelledby","_c2","_c3","matSelectAnimations","transformPanelWrap","optional","transformPanel","opacity","getMatSelectDynamicMultipleError","getMatSelectNonArrayValueError","getMatSelectNonFunctionValueError","SELECT_PANEL_MAX_HEIGHT","SELECT_PANEL_PADDING_X","SELECT_PANEL_INDENT_PADDING_X","SELECT_ITEM_HEIGHT_EM","SELECT_MULTIPLE_PANEL_PADDING_X","SELECT_PANEL_VIEWPORT_PADDING","MAT_SELECT_SCROLL_STRATEGY","MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","MAT_SELECT_CONFIG","MAT_SELECT_SCROLL_STRATEGY_PROVIDER","MatSelectChange","MatSelectBase","_elementRef","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","_MatSelectMixinBase","MAT_SELECT_TRIGGER","MatSelectTrigger","MatSelectTrigger_Factory","useExisting","_MatSelectBase","_changeDetectorRef","_parentFormField","tabIndex","_liveAnnouncer","_defaultOptions","_a","_b","_c","_panelOpen","_compareWith","o1","o2","_uid","_triggerAriaLabelledBy","_destroy","_onChange","_onTouched","_valueId","_overlayPanelClass","overlayPanelClass","_focused","controlType","_required","_multiple","_disableOptionCentering","disableOptionCentering","optionSelectionChanges","options","option","onSelectionChange","openedChange","_openedStream","o","_closedStream","selectionChange","valueChange","valueAccessor","typeaheadDebounceInterval","_typeaheadDebounceInterval","parseInt","_placeholder","stateChanges","_selectionModel","_initializeSelection","_value","Array","isArray","_setSelectionByValue","_id","_panelDoneAnimating","panelOpen","_initKeyManager","changed","added","select","removed","deselect","_resetOptions","newAriaLabelledby","_getTriggerAriaLabelledby","removeAttribute","updateErrorState","_keyManager","withTypeAhead","_canOpen","withHorizontalOrientation","_highlightCorrectOption","markForCheck","isDisabled","disabled","selected","empty","selectedOptions","viewValue","reverse","join","_handleOpenKeydown","_handleClosedKeydown","isArrowKey","isOpenKey","manager","isTyping","altKey","previouslySelectedOption","onKeydown","selectedOption","announce","activeItem","_selectViaInteraction","ctrlKey","hasDeselectedOptions","opt","previouslyFocusedIndex","activeItemIndex","shiftKey","overlayDir","_positioningSettled","color","isEmpty","Promise","resolve","setInactiveStyles","clear","_selectValue","_sortValues","correspondingOption","updateActiveItem","isSelected","warn","withVerticalOrientation","withHomeAndEnd","withAllowedModifierKeys","tabOut","focus","panel","_scrollOptionIntoView","changedOrDestroyed","_onSelect","isUserInput","_stateChanges","wasSelected","_propagateChanges","setActiveItem","toArray","sort","a","b","sortComparator","fallbackValue","valueToEmit","_getChangeEvent","setFirstItemActive","labelId","getLabelId","labelExpression","ariaLabelledby","isOpen","ids","_ariaDescribedby","_MatSelectBase_Factory","viewQuery","_MatSelectBase_Query","_t","trigger","first","compareWith","errorStateMatcher","String","MatSelect","arguments","_scrollTop","_positions","selectedIndex","scrollBuffer","maxScroll","itemHeight","_getItemHeight","optionOffsetFromScrollTop","halfOptionHeight","optimalScrollPosition","_triggerRect","getComputedStyle","fontSize","_calculateOverlayPosition","labelCount","optionGroups","scrollTop","_calculateOverlayOffsetX","viewportSize","paddingWidth","round","optionHeightAdjustment","maxOptionsDisplayed","optionOffsetFromPanelTop","firstDisplayedIndex","_getItemCount","selectedDisplayIndex","partialItemHeight","topSpaceAvailable","bottomSpaceAvailable","panelHeightTop","totalPanelHeight","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","items","panelHeight","scrollContainerHeight","selectedOptionOffset","_calculateOverlayScroll","_calculateOverlayOffsetY","_checkOverlayWithinViewport","MatSelect_Factory","ɵMatSelect_BaseFactory","ɵcmp","contentQueries","MatSelect_ContentQueries","dirIndex","hostAttrs","hostVars","hostBindings","MatSelect_HostBindings","MatSelect_keydown_HostBindingHandler","MatSelect_focus_HostBindingHandler","_onFocus","MatSelect_blur_HostBindingHandler","_onBlur","toString","_getAriaActiveDescendant","disableRipple","ngContentSelectors","decls","vars","consts","template","MatSelect_Template","MatSelect_Template_div_click_0_listener","toggle","MatSelect_Template_ng_template_backdropClick_8_listener","MatSelect_Template_ng_template_attach_8_listener","_onAttached","MatSelect_Template_ng_template_detach_8_listener","_r0","directives","encapsulation","animation","changeDetection","descendants","None","OnPush","animations","MatSelectModule","MatSelectModule_Factory","routes","path","component","redirectTo","pathMatch","returnUrl","location","pathname","AuthRoutingModule","forChild","UserModel","username","pic","roles","occupation","companyName","phone","address","socialNetworks"],"mappingsiBA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,UAAMA,uBAAuB,GAAG,sFAAhC;AACA;AACA;AACA;;UACMC,mB;AACF,qCAAYC,cAAZ,EAA4BC,QAA5B,EAAsC;AAAA;;AAClC,eAAKD,cAAL,GAAsBA,cAAtB;AACA,eAAKE,mBAAL,GAA2B;AAAEC,eAAG,EAAE,EAAP;AAAWC,gBAAI,EAAE;AAAjB,WAA3B;AACA,eAAKC,UAAL,GAAkB,KAAlB;AACA,eAAKC,SAAL,GAAiBL,QAAjB;AACH;AACD;;;;;iBACA,kBAAS,CAAG;AACZ;;;;iBACA,kBAAS;AACL,gBAAI,KAAKM,aAAL,EAAJ,EAA0B;AACtB,kBAAMC,IAAI,GAAG,KAAKF,SAAL,CAAeG,eAA5B;AACA,mBAAKC,uBAAL,GAA+B,KAAKV,cAAL,CAAoBW,yBAApB,EAA/B,CAFsB,CAGtB;;AACA,mBAAKT,mBAAL,CAAyBE,IAAzB,GAAgCI,IAAI,CAACI,KAAL,CAAWR,IAAX,IAAmB,EAAnD;AACA,mBAAKF,mBAAL,CAAyBC,GAAzB,GAA+BK,IAAI,CAACI,KAAL,CAAWT,GAAX,IAAkB,EAAjD,CALsB,CAMtB;AACA;;AACAK,kBAAI,CAACI,KAAL,CAAWR,IAAX,GAAkB,kFAAoB,CAAC,KAAKM,uBAAL,CAA6BN,IAAlD,CAAlB;AACAI,kBAAI,CAACI,KAAL,CAAWT,GAAX,GAAiB,kFAAoB,CAAC,KAAKO,uBAAL,CAA6BP,GAAlD,CAAjB;AACAK,kBAAI,CAACK,SAAL,CAAeC,GAAf,CAAmB,wBAAnB;AACA,mBAAKT,UAAL,GAAkB,IAAlB;AACH;AACJ;AACD;;;;iBACA,mBAAU;AACN,gBAAI,KAAKA,UAAT,EAAqB;AACjB,kBAAMU,IAAI,GAAG,KAAKT,SAAL,CAAeG,eAA5B;AACA,kBAAMO,IAAI,GAAG,KAAKV,SAAL,CAAeU,IAA5B;AACA,kBAAMC,SAAS,GAAGF,IAAI,CAACH,KAAvB;AACA,kBAAMM,SAAS,GAAGF,IAAI,CAACJ,KAAvB;AACA,kBAAMO,0BAA0B,GAAGF,SAAS,CAACG,cAAV,IAA4B,EAA/D;AACA,kBAAMC,0BAA0B,GAAGH,SAAS,CAACE,cAAV,IAA4B,EAA/D;AACA,mBAAKf,UAAL,GAAkB,KAAlB;AACAY,uBAAS,CAACb,IAAV,GAAiB,KAAKF,mBAAL,CAAyBE,IAA1C;AACAa,uBAAS,CAACd,GAAV,GAAgB,KAAKD,mBAAL,CAAyBC,GAAzC;AACAY,kBAAI,CAACF,SAAL,CAAeS,MAAf,CAAsB,wBAAtB,EAViB,CAWjB;AACA;AACA;AACA;AACA;;AACA,kBAAIxB,uBAAJ,EAA6B;AACzBmB,yBAAS,CAACG,cAAV,GAA2BF,SAAS,CAACE,cAAV,GAA2B,MAAtD;AACH;;AACDG,oBAAM,CAACC,MAAP,CAAc,KAAKd,uBAAL,CAA6BN,IAA3C,EAAiD,KAAKM,uBAAL,CAA6BP,GAA9E;;AACA,kBAAIL,uBAAJ,EAA6B;AACzBmB,yBAAS,CAACG,cAAV,GAA2BD,0BAA3B;AACAD,yBAAS,CAACE,cAAV,GAA2BC,0BAA3B;AACH;AACJ;AACJ;;;iBACD,yBAAgB;AACZ;AACA;AACA;AACA,gBAAMN,IAAI,GAAG,KAAKT,SAAL,CAAeG,eAA5B;;AACA,gBAAIM,IAAI,CAACF,SAAL,CAAeY,QAAf,CAAwB,wBAAxB,KAAqD,KAAKpB,UAA9D,EAA0E;AACtE,qBAAO,KAAP;AACH;;AACD,gBAAMW,IAAI,GAAG,KAAKV,SAAL,CAAeU,IAA5B;;AACA,gBAAMU,QAAQ,GAAG,KAAK1B,cAAL,CAAoB2B,eAApB,EAAjB;;AACA,mBAAOX,IAAI,CAACY,YAAL,GAAoBF,QAAQ,CAACG,MAA7B,IAAuCb,IAAI,CAACc,WAAL,GAAmBJ,QAAQ,CAACK,KAA1E;AACH;;;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;;AACA,eAASC,wCAAT,GAAoD;AAChD,eAAOC,KAAK,8CAAZ;AACH;AAED;AACA;AACA;;;UACMC,mB;AACF,qCAAYC,iBAAZ,EAA+BC,OAA/B,EAAwCpC,cAAxC,EAAwDqC,OAAxD,EAAiE;AAAA;;AAAA;;AAC7D,eAAKF,iBAAL,GAAyBA,iBAAzB;AACA,eAAKC,OAAL,GAAeA,OAAf;AACA,eAAKpC,cAAL,GAAsBA,cAAtB;AACA,eAAKqC,OAAL,GAAeA,OAAf;AACA,eAAKC,mBAAL,GAA2B,IAA3B;AACA;;AACA,eAAKC,OAAL,GAAe,YAAM;AACjB,iBAAI,CAACC,OAAL;;AACA,gBAAI,KAAI,CAACC,WAAL,CAAiBC,WAAjB,EAAJ,EAAoC;AAChC,mBAAI,CAACN,OAAL,CAAaO,GAAb,CAAiB;AAAA,uBAAM,KAAI,CAACF,WAAL,CAAiBG,MAAjB,EAAN;AAAA,eAAjB;AACH;AACJ,WALD;AAMH;AACD;;;;;iBACA,gBAAOC,UAAP,EAAmB;AACf,gBAAI,KAAKJ,WAAL,KAAqB,OAAOK,SAAP,KAAqB,WAArB,IAAoCA,SAAzD,CAAJ,EAAyE;AACrE,oBAAMd,wCAAwC,EAA9C;AACH;;AACD,iBAAKS,WAAL,GAAmBI,UAAnB;AACH;AACD;;;;iBACA,kBAAS;AAAA;;AACL,gBAAI,KAAKP,mBAAT,EAA8B;AAC1B;AACH;;AACD,gBAAMS,MAAM,GAAG,KAAKZ,iBAAL,CAAuBa,QAAvB,CAAgC,CAAhC,CAAf;;AACA,gBAAI,KAAKX,OAAL,IAAgB,KAAKA,OAAL,CAAaY,SAA7B,IAA0C,KAAKZ,OAAL,CAAaY,SAAb,GAAyB,CAAvE,EAA0E;AACtE,mBAAKC,sBAAL,GAA8B,KAAKlD,cAAL,CAAoBW,yBAApB,GAAgDR,GAA9E;AACA,mBAAKmC,mBAAL,GAA2BS,MAAM,CAACI,SAAP,CAAiB,YAAM;AAC9C,oBAAMC,cAAc,GAAG,MAAI,CAACpD,cAAL,CAAoBW,yBAApB,GAAgDR,GAAvE;;AACA,oBAAIkD,IAAI,CAACC,GAAL,CAASF,cAAc,GAAG,MAAI,CAACF,sBAA/B,IAAyD,MAAI,CAACb,OAAL,CAAaY,SAA1E,EAAqF;AACjF,wBAAI,CAACV,OAAL;AACH,iBAFD,MAGK;AACD,wBAAI,CAACE,WAAL,CAAiBc,cAAjB;AACH;AACJ,eAR0B,CAA3B;AASH,aAXD,MAYK;AACD,mBAAKjB,mBAAL,GAA2BS,MAAM,CAACI,SAAP,CAAiB,KAAKZ,OAAtB,CAA3B;AACH;AACJ;AACD;;;;iBACA,mBAAU;AACN,gBAAI,KAAKD,mBAAT,EAA8B;AAC1B,mBAAKA,mBAAL,CAAyBkB,WAAzB;;AACA,mBAAKlB,mBAAL,GAA2B,IAA3B;AACH;AACJ;;;iBACD,kBAAS;AACL,iBAAKE,OAAL;AACA,iBAAKC,WAAL,GAAmB,IAAnB;AACH;;;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;UACMgB,kB;;;;;;;;AACF;AACA,4BAAS,CAAG;AACZ;;;;iBACA,mBAAU,CAAG;AACb;;;;iBACA,kBAAS,CAAG;;;;;AAGhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAASC,4BAAT,CAAsCC,OAAtC,EAA+CC,gBAA/C,EAAiE;AAC7D,eAAOA,gBAAgB,CAACC,IAAjB,CAAsB,UAAAC,eAAe,EAAI;AAC5C,cAAMC,YAAY,GAAGJ,OAAO,CAACK,MAAR,GAAiBF,eAAe,CAAC3D,GAAtD;AACA,cAAM8D,YAAY,GAAGN,OAAO,CAACxD,GAAR,GAAc2D,eAAe,CAACE,MAAnD;AACA,cAAME,WAAW,GAAGP,OAAO,CAACQ,KAAR,GAAgBL,eAAe,CAAC1D,IAApD;AACA,cAAMgE,YAAY,GAAGT,OAAO,CAACvD,IAAR,GAAe0D,eAAe,CAACK,KAApD;AACA,iBAAOJ,YAAY,IAAIE,YAAhB,IAAgCC,WAAhC,IAA+CE,YAAtD;AACH,SANM,CAAP;AAOH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAASC,2BAAT,CAAqCV,OAArC,EAA8CC,gBAA9C,EAAgE;AAC5D,eAAOA,gBAAgB,CAACC,IAAjB,CAAsB,UAAAS,mBAAmB,EAAI;AAChD,cAAMC,YAAY,GAAGZ,OAAO,CAACxD,GAAR,GAAcmE,mBAAmB,CAACnE,GAAvD;AACA,cAAMqE,YAAY,GAAGb,OAAO,CAACK,MAAR,GAAiBM,mBAAmB,CAACN,MAA1D;AACA,cAAMS,WAAW,GAAGd,OAAO,CAACvD,IAAR,GAAekE,mBAAmB,CAAClE,IAAvD;AACA,cAAMsE,YAAY,GAAGf,OAAO,CAACQ,KAAR,GAAgBG,mBAAmB,CAACH,KAAzD;AACA,iBAAOI,YAAY,IAAIC,YAAhB,IAAgCC,WAAhC,IAA+CC,YAAtD;AACH,SANM,CAAP;AAOH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;;UACMC,wB;AACF,0CAAYxC,iBAAZ,EAA+BnC,cAA/B,EAA+CoC,OAA/C,EAAwDC,OAAxD,EAAiE;AAAA;;AAC7D,eAAKF,iBAAL,GAAyBA,iBAAzB;AACA,eAAKnC,cAAL,GAAsBA,cAAtB;AACA,eAAKoC,OAAL,GAAeA,OAAf;AACA,eAAKC,OAAL,GAAeA,OAAf;AACA,eAAKC,mBAAL,GAA2B,IAA3B;AACH;AACD;;;;;iBACA,gBAAOO,UAAP,EAAmB;AACf,gBAAI,KAAKJ,WAAL,KAAqB,OAAOK,SAAP,KAAqB,WAArB,IAAoCA,SAAzD,CAAJ,EAAyE;AACrE,oBAAMd,wCAAwC,EAA9C;AACH;;AACD,iBAAKS,WAAL,GAAmBI,UAAnB;AACH;AACD;;;;iBACA,kBAAS;AAAA;;AACL,gBAAI,CAAC,KAAKP,mBAAV,EAA+B;AAC3B,kBAAMsC,QAAQ,GAAG,KAAKvC,OAAL,GAAe,KAAKA,OAAL,CAAawC,cAA5B,GAA6C,CAA9D;AACA,mBAAKvC,mBAAL,GAA2B,KAAKH,iBAAL,CAAuBa,QAAvB,CAAgC4B,QAAhC,EAA0CzB,SAA1C,CAAoD,YAAM;AACjF,sBAAI,CAACV,WAAL,CAAiBc,cAAjB,GADiF,CAEjF;;;AACA,oBAAI,MAAI,CAAClB,OAAL,IAAgB,MAAI,CAACA,OAAL,CAAayC,SAAjC,EAA4C;AACxC,sBAAMC,WAAW,GAAG,MAAI,CAACtC,WAAL,CAAiBuC,cAAjB,CAAgCC,qBAAhC,EAApB;;AACA,8CAA0B,MAAI,CAACjF,cAAL,CAAoB2B,eAApB,EAA1B;AAAA,sBAAQI,KAAR,yBAAQA,KAAR;AAAA,sBAAeF,MAAf,yBAAeA,MAAf,CAFwC,CAGxC;AACA;;;AACA,sBAAMqD,WAAW,GAAG,CAAC;AAAEnD,yBAAK,EAALA,KAAF;AAASF,0BAAM,EAANA,MAAT;AAAiBmC,0BAAM,EAAEnC,MAAzB;AAAiCsC,yBAAK,EAAEpC,KAAxC;AAA+C5B,uBAAG,EAAE,CAApD;AAAuDC,wBAAI,EAAE;AAA7D,mBAAD,CAApB;;AACA,sBAAIsD,4BAA4B,CAACqB,WAAD,EAAcG,WAAd,CAAhC,EAA4D;AACxD,0BAAI,CAAC1C,OAAL;;AACA,0BAAI,CAACJ,OAAL,CAAaO,GAAb,CAAiB;AAAA,6BAAM,MAAI,CAACF,WAAL,CAAiBG,MAAjB,EAAN;AAAA,qBAAjB;AACH;AACJ;AACJ,eAd0B,CAA3B;AAeH;AACJ;AACD;;;;iBACA,mBAAU;AACN,gBAAI,KAAKN,mBAAT,EAA8B;AAC1B,mBAAKA,mBAAL,CAAyBkB,WAAzB;;AACA,mBAAKlB,mBAAL,GAA2B,IAA3B;AACH;AACJ;;;iBACD,kBAAS;AACL,iBAAKE,OAAL;AACA,iBAAKC,WAAL,GAAmB,IAAnB;AACH;;;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;;UACM0C,qB,GACF,+BAAYhD,iBAAZ,EAA+BnC,cAA/B,EAA+CoC,OAA/C,EAAwDnC,QAAxD,EAAkE;AAAA;;AAAA;;AAC9D,aAAKkC,iBAAL,GAAyBA,iBAAzB;AACA,aAAKnC,cAAL,GAAsBA,cAAtB;AACA,aAAKoC,OAAL,GAAeA,OAAf;AACA;;AACA,aAAKgD,IAAL,GAAY;AAAA,iBAAM,IAAI3B,kBAAJ,EAAN;AAAA,SAAZ;AACA;AACR;AACA;AACA;;;AACQ,aAAK4B,KAAL,GAAa,UAACC,MAAD;AAAA,iBAAY,IAAIpD,mBAAJ,CAAwB,MAAI,CAACC,iBAA7B,EAAgD,MAAI,CAACC,OAArD,EAA8D,MAAI,CAACpC,cAAnE,EAAmFsF,MAAnF,CAAZ;AAAA,SAAb;AACA;;;AACA,aAAKC,KAAL,GAAa;AAAA,iBAAM,IAAIxF,mBAAJ,CAAwB,MAAI,CAACC,cAA7B,EAA6C,MAAI,CAACM,SAAlD,CAAN;AAAA,SAAb;AACA;AACR;AACA;AACA;AACA;;;AACQ,aAAKkF,UAAL,GAAkB,UAACF,MAAD;AAAA,iBAAY,IAAIX,wBAAJ,CAA6B,MAAI,CAACxC,iBAAlC,EAAqD,MAAI,CAACnC,cAA1D,EAA0E,MAAI,CAACoC,OAA/E,EAAwFkD,MAAxF,CAAZ;AAAA,SAAlB;;AACA,aAAKhF,SAAL,GAAiBL,QAAjB;AACH,O;;AAELkF,2BAAqB,CAACM,IAAtB,GAA6B,SAASC,6BAAT,CAAuCC,CAAvC,EAA0C;AAAE,eAAO,KAAKA,CAAC,IAAIR,qBAAV,EAAiC,uDAAgB,uEAAhB,CAAjC,EAA2E,uDAAgB,oEAAhB,CAA3E,EAAkH,uDAAgB,oDAAhB,CAAlH,EAAkJ,uDAAgB,wDAAhB,CAAlJ,CAAP;AAAsL,OAA/P;;AACAA,2BAAqB,CAACS,KAAtB,GAA8B,yEAAmB;AAAEC,eAAO,EAAE,SAASH,6BAAT,GAAyC;AAAE,iBAAO,IAAIP,qBAAJ,CAA0B,+DAAS,uEAAT,CAA1B,EAAsD,+DAAS,oEAAT,CAAtD,EAA+E,+DAAS,oDAAT,CAA/E,EAAiG,+DAAS,wDAAT,CAAjG,CAAP;AAA8H,SAApL;AAAsLW,aAAK,EAAEX,qBAA7L;AAAoNY,kBAAU,EAAE;AAAhO,OAAnB,CAA9B;;AACAZ,2BAAqB,CAACa,cAAtB,GAAuC;AAAA,eAAM,CACzC;AAAEC,cAAI,EAAE;AAAR,SADyC,EAEzC;AAAEA,cAAI,EAAE;AAAR,SAFyC,EAGzC;AAAEA,cAAI,EAAE;AAAR,SAHyC,EAIzC;AAAEA,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAAEF,gBAAI,EAAE,oDAAR;AAAgBG,gBAAI,EAAE,CAAC,wDAAD;AAAtB,WAAD;AAA/B,SAJyC,CAAN;AAAA,OAAvC;AAMA;;;AAAc,OAAC,YAAY;AAAE,wEAAyBjB,qBAAzB,EAAgD,CAAC;AACtEc,cAAI,EAAE,wDADgE;AAEtEG,cAAI,EAAE,CAAC;AAAEL,sBAAU,EAAE;AAAd,WAAD;AAFgE,SAAD,CAAhD,EAGrB,YAAY;AAAE,iBAAO,CAAC;AAAEE,gBAAI,EAAE;AAAR,WAAD,EAAoC;AAAEA,gBAAI,EAAE;AAAR,WAApC,EAAoE;AAAEA,gBAAI,EAAE;AAAR,WAApE,EAA6F;AAAEA,gBAAI,EAAEC,SAAR;AAAmBC,sBAAU,EAAE,CAAC;AAC1IF,kBAAI,EAAE,oDADoI;AAE1IG,kBAAI,EAAE,CAAC,wDAAD;AAFoI,aAAD;AAA/B,WAA7F,CAAP;AAGF,SANS,EAMP,IANO;AAMC,OANhB;AAQd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;UACMC,a,GACF,uBAAYf,MAAZ,EAAoB;AAAA;;AAChB;AACA,aAAKgB,cAAL,GAAsB,IAAI7C,kBAAJ,EAAtB;AACA;;AACA,aAAK8C,UAAL,GAAkB,EAAlB;AACA;;AACA,aAAKC,WAAL,GAAmB,KAAnB;AACA;;AACA,aAAKC,aAAL,GAAqB,2BAArB;AACA;AACR;AACA;AACA;AACA;;AACQ,aAAKC,mBAAL,GAA2B,KAA3B;;AACA,YAAIpB,MAAJ,EAAY;AACR;AACA;AACA;AACA,cAAMqB,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAYvB,MAAZ,CAAnB;;AACA,yCAAkBqB,UAAlB,iCAA8B;AAAzB,gBAAMG,GAAG,kBAAT;;AACD,gBAAIxB,MAAM,CAACwB,GAAD,CAAN,KAAgBZ,SAApB,EAA+B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,mBAAKY,GAAL,IAAYxB,MAAM,CAACwB,GAAD,CAAlB;AACH;AACJ;AACJ;AACJ,O;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;UACMC,sB,GACF,gCAAYC,MAAZ,EAAoBC,OAApB;AACA;AACAC,aAFA;AAGA;AACAC,aAJA;AAKA;AACAZ,gBANA,EAMY;AAAA;;AACR,aAAKW,OAAL,GAAeA,OAAf;AACA,aAAKC,OAAL,GAAeA,OAAf;AACA,aAAKZ,UAAL,GAAkBA,UAAlB;AACA,aAAKa,OAAL,GAAeJ,MAAM,CAACI,OAAtB;AACA,aAAKC,OAAL,GAAeL,MAAM,CAACK,OAAtB;AACA,aAAKC,QAAL,GAAgBL,OAAO,CAACK,QAAxB;AACA,aAAKC,QAAL,GAAgBN,OAAO,CAACM,QAAxB;AACH,O;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;UACMC,mB;;;AAEN;;;UACMC,8B,GACF;AACA;AACAC,oBAFA;AAGA;AACAC,8BAJA,EAI0B;AAAA;;AACtB,aAAKD,cAAL,GAAsBA,cAAtB;AACA,aAAKC,wBAAL,GAAgCA,wBAAhC;AACH,O;;AAELF,oCAA8B,CAACzB,cAA/B,GAAgD;AAAA,eAAM,CAClD;AAAEC,cAAI,EAAEc;AAAR,SADkD,EAElD;AAAEd,cAAI,EAAEuB,mBAAR;AAA6BrB,oBAAU,EAAE,CAAC;AAAEF,gBAAI,EAAE;AAAR,WAAD;AAAzC,SAFkD,CAAN;AAAA,OAAhD;AAIA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAS2B,wBAAT,CAAkCC,QAAlC,EAA4CC,KAA5C,EAAmD;AAC/C,YAAIA,KAAK,KAAK,KAAV,IAAmBA,KAAK,KAAK,QAA7B,IAAyCA,KAAK,KAAK,QAAvD,EAAiE;AAC7D,gBAAM7F,KAAK,CAAC,qCAA8B4F,QAA9B,gBAA2CC,KAA3C,yDAAD,CAAX;AAEH;AACJ;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,eAASC,0BAAT,CAAoCF,QAApC,EAA8CC,KAA9C,EAAqD;AACjD,YAAIA,KAAK,KAAK,OAAV,IAAqBA,KAAK,KAAK,KAA/B,IAAwCA,KAAK,KAAK,QAAtD,EAAgE;AAC5D,gBAAM7F,KAAK,CAAC,qCAA8B4F,QAA9B,gBAA2CC,KAA3C,wDAAD,CAAX;AAEH;AACJ;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;UACME,qB;AACF,uCAAY/H,QAAZ,EAAsB;AAAA;;AAClB;AACA,eAAKgI,iBAAL,GAAyB,EAAzB;AACA,eAAK3H,SAAL,GAAiBL,QAAjB;AACH;;;;iBACD,uBAAc;AACV,iBAAK2C,MAAL;AACH;AACD;;;;iBACA,aAAIC,UAAJ,EAAgB;AACZ;AACA,iBAAKvB,MAAL,CAAYuB,UAAZ;;AACA,iBAAKoF,iBAAL,CAAuBC,IAAvB,CAA4BrF,UAA5B;AACH;AACD;;;;iBACA,gBAAOA,UAAP,EAAmB;AACf,gBAAMsF,KAAK,GAAG,KAAKF,iBAAL,CAAuBG,OAAvB,CAA+BvF,UAA/B,CAAd;;AACA,gBAAIsF,KAAK,GAAG,CAAC,CAAb,EAAgB;AACZ,mBAAKF,iBAAL,CAAuBI,MAAvB,CAA8BF,KAA9B,EAAqC,CAArC;AACH,aAJc,CAKf;;;AACA,gBAAI,KAAKF,iBAAL,CAAuBK,MAAvB,KAAkC,CAAtC,EAAyC;AACrC,mBAAK1F,MAAL;AACH;AACJ;;;;;;AAELoF,2BAAqB,CAACvC,IAAtB,GAA6B,SAAS8C,6BAAT,CAAuC5C,CAAvC,EAA0C;AAAE,eAAO,KAAKA,CAAC,IAAIqC,qBAAV,EAAiC,uDAAgB,wDAAhB,CAAjC,CAAP;AAAqE,OAA9I;;AACAA,2BAAqB,CAACpC,KAAtB,GAA8B,yEAAmB;AAAEC,eAAO,EAAE,SAAS0C,6BAAT,GAAyC;AAAE,iBAAO,IAAIP,qBAAJ,CAA0B,+DAAS,wDAAT,CAA1B,CAAP;AAAuD,SAA7G;AAA+GlC,aAAK,EAAEkC,qBAAtH;AAA6IjC,kBAAU,EAAE;AAAzJ,OAAnB,CAA9B;;AACAiC,2BAAqB,CAAChC,cAAtB,GAAuC;AAAA,eAAM,CACzC;AAAEC,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAAEF,gBAAI,EAAE,oDAAR;AAAgBG,gBAAI,EAAE,CAAC,wDAAD;AAAtB,WAAD;AAA/B,SADyC,CAAN;AAAA,OAAvC;AAGA;;;AAAc,OAAC,YAAY;AAAE,wEAAyB4B,qBAAzB,EAAgD,CAAC;AACtE/B,cAAI,EAAE,wDADgE;AAEtEG,cAAI,EAAE,CAAC;AAAEL,sBAAU,EAAE;AAAd,WAAD;AAFgE,SAAD,CAAhD,EAGrB,YAAY;AAAE,iBAAO,CAAC;AAAEE,gBAAI,EAAEC,SAAR;AAAmBC,sBAAU,EAAE,CAAC;AAC9CF,kBAAI,EAAE,oDADwC;AAE9CG,kBAAI,EAAE,CAAC,wDAAD;AAFwC,aAAD;AAA/B,WAAD,CAAP;AAGF,SANS,EAMP,IANO;AAMC,OANhB;AAQd;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;UACMoC,yB;;;;;AACF,2CAAYvI,QAAZ,EAAsB;AAAA;;AAAA;;AAClB,qCAAMA,QAAN;AACA;;AACA,iBAAKwI,gBAAL,GAAwB,UAACC,KAAD,EAAW;AAC/B,gBAAMC,QAAQ,GAAG,OAAKV,iBAAtB;;AACA,iBAAK,IAAIW,CAAC,GAAGD,QAAQ,CAACL,MAAT,GAAkB,CAA/B,EAAkCM,CAAC,GAAG,CAAC,CAAvC,EAA0CA,CAAC,EAA3C,EAA+C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,kBAAID,QAAQ,CAACC,CAAD,CAAR,CAAYC,cAAZ,CAA2BC,SAA3B,CAAqCR,MAArC,GAA8C,CAAlD,EAAqD;AACjDK,wBAAQ,CAACC,CAAD,CAAR,CAAYC,cAAZ,CAA2BE,IAA3B,CAAgCL,KAAhC;;AACA;AACH;AACJ;AACJ,WAdD;;AAHkB;AAkBrB;AACD;;;;;iBACA,aAAI7F,UAAJ,EAAgB;AACZ,+FAAUA,UAAV,EADY,CAEZ;;;AACA,gBAAI,CAAC,KAAKmG,WAAV,EAAuB;AACnB,mBAAK1I,SAAL,CAAeU,IAAf,CAAoBiI,gBAApB,CAAqC,SAArC,EAAgD,KAAKR,gBAArD;;AACA,mBAAKO,WAAL,GAAmB,IAAnB;AACH;AACJ;AACD;;;;iBACA,kBAAS;AACL,gBAAI,KAAKA,WAAT,EAAsB;AAClB,mBAAK1I,SAAL,CAAeU,IAAf,CAAoBkI,mBAApB,CAAwC,SAAxC,EAAmD,KAAKT,gBAAxD;;AACA,mBAAKO,WAAL,GAAmB,KAAnB;AACH;AACJ;;;;QAnCmChB,qB;;AAqCxCQ,+BAAyB,CAAC/C,IAA1B,GAAiC,SAAS0D,iCAAT,CAA2CxD,CAA3C,EAA8C;AAAE,eAAO,KAAKA,CAAC,IAAI6C,yBAAV,EAAqC,uDAAgB,wDAAhB,CAArC,CAAP;AAAyE,OAA1J;;AACAA,+BAAyB,CAAC5C,KAA1B,GAAkC,yEAAmB;AAAEC,eAAO,EAAE,SAASsD,iCAAT,GAA6C;AAAE,iBAAO,IAAIX,yBAAJ,CAA8B,+DAAS,wDAAT,CAA9B,CAAP;AAA2D,SAArH;AAAuH1C,aAAK,EAAE0C,yBAA9H;AAAyJzC,kBAAU,EAAE;AAArK,OAAnB,CAAlC;;AACAyC,+BAAyB,CAACxC,cAA1B,GAA2C;AAAA,eAAM,CAC7C;AAAEC,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAAEF,gBAAI,EAAE,oDAAR;AAAgBG,gBAAI,EAAE,CAAC,wDAAD;AAAtB,WAAD;AAA/B,SAD6C,CAAN;AAAA,OAA3C;AAGA;;;AAAc,OAAC,YAAY;AAAE,wEAAyBoC,yBAAzB,EAAoD,CAAC;AAC1EvC,cAAI,EAAE,wDADoE;AAE1EG,cAAI,EAAE,CAAC;AAAEL,sBAAU,EAAE;AAAd,WAAD;AAFoE,SAAD,CAApD,EAGrB,YAAY;AAAE,iBAAO,CAAC;AAAEE,gBAAI,EAAEC,SAAR;AAAmBC,sBAAU,EAAE,CAAC;AAC9CF,kBAAI,EAAE,oDADwC;AAE9CG,kBAAI,EAAE,CAAC,wDAAD;AAFwC,aAAD;AAA/B,WAAD,CAAP;AAGF,SANS,EAMP,IANO;AAMC,OANhB;AAQd;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;UACMgD,6B;;;;;AACF,+CAAYnJ,QAAZ,EAAsBoJ,SAAtB,EAAiC;AAAA;;AAAA;;AAC7B,sCAAMpJ,QAAN;AACA,iBAAKoJ,SAAL,GAAiBA,SAAjB;AACA,iBAAKC,iBAAL,GAAyB,KAAzB;AACA;;AACA,iBAAKC,cAAL,GAAsB,UAACb,KAAD,EAAW;AAC7B;AACA,gBAAMc,MAAM,GAAGd,KAAK,CAACe,YAAN,GAAqBf,KAAK,CAACe,YAAN,GAAqB,CAArB,CAArB,GAA+Cf,KAAK,CAACc,MAApE,CAF6B,CAG7B;AACA;AACA;;AACA,gBAAMb,QAAQ,GAAG,OAAKV,iBAAL,CAAuByB,KAAvB,EAAjB,CAN6B,CAO7B;AACA;AACA;AACA;;;AACA,iBAAK,IAAId,CAAC,GAAGD,QAAQ,CAACL,MAAT,GAAkB,CAA/B,EAAkCM,CAAC,GAAG,CAAC,CAAvC,EAA0CA,CAAC,EAA3C,EAA+C;AAC3C,kBAAM/F,UAAU,GAAG8F,QAAQ,CAACC,CAAD,CAA3B;;AACA,kBAAI/F,UAAU,CAAC8G,qBAAX,CAAiCb,SAAjC,CAA2CR,MAA3C,GAAoD,CAApD,IAAyD,CAACzF,UAAU,CAACH,WAAX,EAA9D,EAAwF;AACpF;AACH,eAJ0C,CAK3C;AACA;;;AACA,kBAAIG,UAAU,CAACmC,cAAX,CAA0BvD,QAA1B,CAAmC+H,MAAnC,CAAJ,EAAgD;AAC5C;AACH;;AACD3G,wBAAU,CAAC8G,qBAAX,CAAiCZ,IAAjC,CAAsCL,KAAtC;AACH;AACJ,WAvBD;;AAL6B;AA6BhC;AACD;;;;;iBACA,aAAI7F,UAAJ,EAAgB;AACZ,mGAAUA,UAAV,EADY,CAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,gBAAI,CAAC,KAAKmG,WAAV,EAAuB;AACnB,mBAAK1I,SAAL,CAAeU,IAAf,CAAoBiI,gBAApB,CAAqC,OAArC,EAA8C,KAAKM,cAAnD,EAAmE,IAAnE;;AACA,mBAAKjJ,SAAL,CAAeU,IAAf,CAAoBiI,gBAApB,CAAqC,aAArC,EAAoD,KAAKM,cAAzD,EAAyE,IAAzE,EAFmB,CAGnB;AACA;;;AACA,kBAAI,KAAKF,SAAL,CAAeO,GAAf,IAAsB,CAAC,KAAKN,iBAAhC,EAAmD;AAC/C,qBAAKO,oBAAL,GAA4B,KAAKvJ,SAAL,CAAeU,IAAf,CAAoBJ,KAApB,CAA0BkJ,MAAtD;AACA,qBAAKxJ,SAAL,CAAeU,IAAf,CAAoBJ,KAApB,CAA0BkJ,MAA1B,GAAmC,SAAnC;AACA,qBAAKR,iBAAL,GAAyB,IAAzB;AACH;;AACD,mBAAKN,WAAL,GAAmB,IAAnB;AACH;AACJ;AACD;;;;iBACA,kBAAS;AACL,gBAAI,KAAKA,WAAT,EAAsB;AAClB,mBAAK1I,SAAL,CAAeU,IAAf,CAAoBkI,mBAApB,CAAwC,OAAxC,EAAiD,KAAKK,cAAtD,EAAsE,IAAtE;;AACA,mBAAKjJ,SAAL,CAAeU,IAAf,CAAoBkI,mBAApB,CAAwC,aAAxC,EAAuD,KAAKK,cAA5D,EAA4E,IAA5E;;AACA,kBAAI,KAAKF,SAAL,CAAeO,GAAf,IAAsB,KAAKN,iBAA/B,EAAkD;AAC9C,qBAAKhJ,SAAL,CAAeU,IAAf,CAAoBJ,KAApB,CAA0BkJ,MAA1B,GAAmC,KAAKD,oBAAxC;AACA,qBAAKP,iBAAL,GAAyB,KAAzB;AACH;;AACD,mBAAKN,WAAL,GAAmB,KAAnB;AACH;AACJ;;;;QAlEuChB,qB;;AAoE5CoB,mCAA6B,CAAC3D,IAA9B,GAAqC,SAASsE,qCAAT,CAA+CpE,CAA/C,EAAkD;AAAE,eAAO,KAAKA,CAAC,IAAIyD,6BAAV,EAAyC,uDAAgB,wDAAhB,CAAzC,EAAoE,uDAAgB,8DAAhB,CAApE,CAAP;AAA+G,OAAxM;;AACAA,mCAA6B,CAACxD,KAA9B,GAAsC,yEAAmB;AAAEC,eAAO,EAAE,SAASkE,qCAAT,GAAiD;AAAE,iBAAO,IAAIX,6BAAJ,CAAkC,+DAAS,wDAAT,CAAlC,EAAsD,+DAAS,8DAAT,CAAtD,CAAP;AAAmF,SAAjJ;AAAmJtD,aAAK,EAAEsD,6BAA1J;AAAyLrD,kBAAU,EAAE;AAArM,OAAnB,CAAtC;;AACAqD,mCAA6B,CAACpD,cAA9B,GAA+C;AAAA,eAAM,CACjD;AAAEC,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAAEF,gBAAI,EAAE,oDAAR;AAAgBG,gBAAI,EAAE,CAAC,wDAAD;AAAtB,WAAD;AAA/B,SADiD,EAEjD;AAAEH,cAAI,EAAE;AAAR,SAFiD,CAAN;AAAA,OAA/C;AAIA;;;AAAc,OAAC,YAAY;AAAE,wEAAyBmD,6BAAzB,EAAwD,CAAC;AAC9EnD,cAAI,EAAE,wDADwE;AAE9EG,cAAI,EAAE,CAAC;AAAEL,sBAAU,EAAE;AAAd,WAAD;AAFwE,SAAD,CAAxD,EAGrB,YAAY;AAAE,iBAAO,CAAC;AAAEE,gBAAI,EAAEC,SAAR;AAAmBC,sBAAU,EAAE,CAAC;AAC9CF,kBAAI,EAAE,oDADwC;AAE9CG,kBAAI,EAAE,CAAC,wDAAD;AAFwC,aAAD;AAA/B,WAAD,EAGX;AAAEH,gBAAI,EAAE;AAAR,WAHW,CAAP;AAGyB,SANlB,EAMoB,IANpB;AAM4B,OAN3C;AAQd;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACA,UAAM+D,iBAAiB,GAAG,OAAOzI,MAAP,KAAkB,WAAlB,IAAiC,CAAC,CAACA,MAAnC,IACtB,CAAC,EAAEA,MAAM,CAAC0I,SAAP,IAAoB1I,MAAM,CAAC2I,OAA7B,CADL;AAEA;;UACMC,gB;AACF,kCAAYlK,QAAZ,EAAsBoJ,SAAtB,EAAiC;AAAA;;AAC7B,eAAKA,SAAL,GAAiBA,SAAjB;AACA,eAAK/I,SAAL,GAAiBL,QAAjB;AACH;;;;iBACD,uBAAc;AACV,gBAAMmK,SAAS,GAAG,KAAKC,iBAAvB;;AACA,gBAAID,SAAS,IAAIA,SAAS,CAACE,UAA3B,EAAuC;AACnCF,uBAAS,CAACE,UAAV,CAAqBC,WAArB,CAAiCH,SAAjC;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;;;;iBACI,+BAAsB;AAClB,gBAAI,CAAC,KAAKC,iBAAV,EAA6B;AACzB,mBAAKG,gBAAL;AACH;;AACD,mBAAO,KAAKH,iBAAZ;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,4BAAmB;AACf,gBAAMI,cAAc,GAAG,uBAAvB;;AACA,gBAAI,KAAKpB,SAAL,CAAeqB,SAAf,IAA4BV,iBAAhC,EAAmD;AAC/C,kBAAMW,0BAA0B,GAAG,KAAKrK,SAAL,CAAesK,gBAAf,CAAgC,WAAIH,cAAJ,0CAC3DA,cAD2D,wBAAhC,CAAnC,CAD+C,CAG/C;AACA;;;AACA,mBAAK,IAAI7B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+B,0BAA0B,CAACrC,MAA/C,EAAuDM,CAAC,EAAxD,EAA4D;AACxD+B,0CAA0B,CAAC/B,CAAD,CAA1B,CAA8B0B,UAA9B,CAAyCC,WAAzC,CAAqDI,0BAA0B,CAAC/B,CAAD,CAA/E;AACH;AACJ;;AACD,gBAAMwB,SAAS,GAAG,KAAK9J,SAAL,CAAeuK,aAAf,CAA6B,KAA7B,CAAlB;;AACAT,qBAAS,CAACvJ,SAAV,CAAoBC,GAApB,CAAwB2J,cAAxB,EAZe,CAaf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,gBAAIT,iBAAJ,EAAuB;AACnBI,uBAAS,CAACU,YAAV,CAAuB,UAAvB,EAAmC,MAAnC;AACH,aAFD,MAGK,IAAI,CAAC,KAAKzB,SAAL,CAAeqB,SAApB,EAA+B;AAChCN,uBAAS,CAACU,YAAV,CAAuB,UAAvB,EAAmC,QAAnC;AACH;;AACD,iBAAKxK,SAAL,CAAeU,IAAf,CAAoB+J,WAApB,CAAgCX,SAAhC;;AACA,iBAAKC,iBAAL,GAAyBD,SAAzB;AACH;;;;;;AAELD,sBAAgB,CAAC1E,IAAjB,GAAwB,SAASuF,wBAAT,CAAkCrF,CAAlC,EAAqC;AAAE,eAAO,KAAKA,CAAC,IAAIwE,gBAAV,EAA4B,uDAAgB,wDAAhB,CAA5B,EAAuD,uDAAgB,8DAAhB,CAAvD,CAAP;AAAkG,OAAjK;;AACAA,sBAAgB,CAACvE,KAAjB,GAAyB,yEAAmB;AAAEC,eAAO,EAAE,SAASmF,wBAAT,GAAoC;AAAE,iBAAO,IAAIb,gBAAJ,CAAqB,+DAAS,wDAAT,CAArB,EAAyC,+DAAS,8DAAT,CAAzC,CAAP;AAAsE,SAAvH;AAAyHrE,aAAK,EAAEqE,gBAAhI;AAAkJpE,kBAAU,EAAE;AAA9J,OAAnB,CAAzB;;AACAoE,sBAAgB,CAACnE,cAAjB,GAAkC;AAAA,eAAM,CACpC;AAAEC,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAAEF,gBAAI,EAAE,oDAAR;AAAgBG,gBAAI,EAAE,CAAC,wDAAD;AAAtB,WAAD;AAA/B,SADoC,EAEpC;AAAEH,cAAI,EAAE;AAAR,SAFoC,CAAN;AAAA,OAAlC;AAIA;;;AAAc,OAAC,YAAY;AAAE,wEAAyBkE,gBAAzB,EAA2C,CAAC;AACjElE,cAAI,EAAE,wDAD2D;AAEjEG,cAAI,EAAE,CAAC;AAAEL,sBAAU,EAAE;AAAd,WAAD;AAF2D,SAAD,CAA3C,EAGrB,YAAY;AAAE,iBAAO,CAAC;AAAEE,gBAAI,EAAEC,SAAR;AAAmBC,sBAAU,EAAE,CAAC;AAC9CF,kBAAI,EAAE,oDADwC;AAE9CG,kBAAI,EAAE,CAAC,wDAAD;AAFwC,aAAD;AAA/B,WAAD,EAGX;AAAEH,gBAAI,EAAE;AAAR,WAHW,CAAP;AAGyB,SANlB,EAMoB,IANpB;AAM4B,OAN3C;AAQd;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;UACMgF,U;AACF,4BAAYC,aAAZ,EAA2BC,KAA3B,EAAkCC,KAAlC,EAAyC/I,OAAzC,EAAkDD,OAAlD,EAA2DiJ,mBAA3D,EAAgF/K,SAAhF,EAA2FgL,SAA3F,EAAsGC,uBAAtG,EAA+H;AAAA;;AAAA;;AAC3H,eAAKL,aAAL,GAAqBA,aAArB;AACA,eAAKC,KAAL,GAAaA,KAAb;AACA,eAAKC,KAAL,GAAaA,KAAb;AACA,eAAK/I,OAAL,GAAeA,OAAf;AACA,eAAKD,OAAL,GAAeA,OAAf;AACA,eAAKiJ,mBAAL,GAA2BA,mBAA3B;AACA,eAAK/K,SAAL,GAAiBA,SAAjB;AACA,eAAKgL,SAAL,GAAiBA,SAAjB;AACA,eAAKC,uBAAL,GAA+BA,uBAA/B;AACA,eAAKC,gBAAL,GAAwB,IAAxB;AACA,eAAKC,cAAL,GAAsB,IAAI,4CAAJ,EAAtB;AACA,eAAKC,YAAL,GAAoB,IAAI,4CAAJ,EAApB;AACA,eAAKC,YAAL,GAAoB,IAAI,4CAAJ,EAApB;AACA,eAAKC,gBAAL,GAAwB,kDAAaC,KAArC;;AACA,eAAKC,qBAAL,GAA6B,UAACpD,KAAD;AAAA,mBAAW,MAAI,CAAC+C,cAAL,CAAoB1C,IAApB,CAAyBL,KAAzB,CAAX;AAAA,WAA7B;AACA;;;AACA,eAAKG,cAAL,GAAsB,IAAI,4CAAJ,EAAtB;AACA;;AACA,eAAKc,qBAAL,GAA6B,IAAI,4CAAJ,EAA7B;;AACA,cAAItH,OAAO,CAACiE,cAAZ,EAA4B;AACxB,iBAAKyF,eAAL,GAAuB1J,OAAO,CAACiE,cAA/B;;AACA,iBAAKyF,eAAL,CAAqBC,MAArB,CAA4B,IAA5B;AACH;;AACD,eAAKC,iBAAL,GAAyB5J,OAAO,CAAC6J,gBAAjC;AACH;AACD;;;;;eACA,eAAqB;AACjB,mBAAO,KAAKd,KAAZ;AACH;AACD;;;;eACA,eAAsB;AAClB,mBAAO,KAAKI,gBAAZ;AACH;AACD;AACJ;AACA;AACA;AACA;;;;eACI,eAAkB;AACd,mBAAO,KAAKL,KAAZ;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;;iBACI,gBAAOgB,MAAP,EAAe;AAAA;;AACX,gBAAIC,YAAY,GAAG,KAAKlB,aAAL,CAAmBc,MAAnB,CAA0BG,MAA1B,CAAnB,CADW,CAEX;;;AACA,gBAAI,CAAC,KAAKhB,KAAL,CAAWkB,aAAZ,IAA6B,KAAKC,mBAAtC,EAA2D;AACvD,mBAAKA,mBAAL,CAAyBvB,WAAzB,CAAqC,KAAKI,KAA1C;AACH;;AACD,gBAAI,KAAKc,iBAAT,EAA4B;AACxB,mBAAKA,iBAAL,CAAuBD,MAAvB,CAA8B,IAA9B;AACH;;AACD,iBAAKO,oBAAL;;AACA,iBAAKC,kBAAL;;AACA,iBAAKC,uBAAL;;AACA,gBAAI,KAAKV,eAAT,EAA0B;AACtB,mBAAKA,eAAL,CAAqBW,MAArB;AACH,aAdU,CAeX;AACA;AACA;;;AACA,iBAAKtK,OAAL,CAAauK,QAAb,CACKC,IADL,CACU,4DAAK,CAAL,CADV,EAEKzJ,SAFL,CAEe,YAAM;AACjB;AACA,kBAAI,MAAI,CAACT,WAAL,EAAJ,EAAwB;AACpB,sBAAI,CAACa,cAAL;AACH;AACJ,aAPD,EAlBW,CA0BX;;;AACA,iBAAKsJ,oBAAL,CAA0B,IAA1B;;AACA,gBAAI,KAAKxK,OAAL,CAAamE,WAAjB,EAA8B;AAC1B,mBAAKsG,eAAL;AACH;;AACD,gBAAI,KAAKzK,OAAL,CAAakE,UAAjB,EAA6B;AACzB,mBAAKwG,cAAL,CAAoB,KAAK3B,KAAzB,EAAgC,KAAK/I,OAAL,CAAakE,UAA7C,EAAyD,IAAzD;AACH,aAjCU,CAkCX;;;AACA,iBAAKmF,YAAL,CAAkB3C,IAAlB,GAnCW,CAoCX;;;AACA,iBAAKsC,mBAAL,CAAyBvK,GAAzB,CAA6B,IAA7B;;AACA,gBAAI,KAAKuB,OAAL,CAAaqE,mBAAjB,EAAsC;AAClC,mBAAKkF,gBAAL,GAAwB,KAAKN,SAAL,CAAenI,SAAf,CAAyB;AAAA,uBAAM,MAAI,CAAC6J,OAAL,EAAN;AAAA,eAAzB,CAAxB;AACH;;AACD,iBAAKzB,uBAAL,CAA6BzK,GAA7B,CAAiC,IAAjC;;AACA,mBAAOsL,YAAP;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,kBAAS;AACL,gBAAI,CAAC,KAAK1J,WAAL,EAAL,EAAyB;AACrB;AACH;;AACD,iBAAKuK,cAAL,GAJK,CAKL;AACA;AACA;;AACA,iBAAKJ,oBAAL,CAA0B,KAA1B;;AACA,gBAAI,KAAKZ,iBAAL,IAA0B,KAAKA,iBAAL,CAAuBrJ,MAArD,EAA6D;AACzD,mBAAKqJ,iBAAL,CAAuBrJ,MAAvB;AACH;;AACD,gBAAI,KAAKmJ,eAAT,EAA0B;AACtB,mBAAKA,eAAL,CAAqBvJ,OAArB;AACH;;AACD,gBAAM0K,gBAAgB,GAAG,KAAKhC,aAAL,CAAmBtI,MAAnB,EAAzB,CAfK,CAgBL;;;AACA,iBAAK+I,YAAL,CAAkB5C,IAAlB,GAjBK,CAkBL;;;AACA,iBAAKsC,mBAAL,CAAyB/J,MAAzB,CAAgC,IAAhC,EAnBK,CAoBL;AACA;;;AACA,iBAAK6L,wBAAL;;AACA,iBAAKvB,gBAAL,CAAsBpI,WAAtB;;AACA,iBAAK+H,uBAAL,CAA6BjK,MAA7B,CAAoC,IAApC;;AACA,mBAAO4L,gBAAP;AACH;AACD;;;;iBACA,mBAAU;AACN,gBAAME,UAAU,GAAG,KAAK1K,WAAL,EAAnB;;AACA,gBAAI,KAAKuJ,iBAAT,EAA4B;AACxB,mBAAKA,iBAAL,CAAuBe,OAAvB;AACH;;AACD,iBAAKK,sBAAL;;AACA,iBAAKJ,cAAL;;AACA,iBAAKrB,gBAAL,CAAsBpI,WAAtB;;AACA,iBAAK6H,mBAAL,CAAyB/J,MAAzB,CAAgC,IAAhC;;AACA,iBAAK4J,aAAL,CAAmB8B,OAAnB;;AACA,iBAAKtB,YAAL,CAAkB4B,QAAlB;;AACA,iBAAK7B,cAAL,CAAoB6B,QAApB;;AACA,iBAAKzE,cAAL,CAAoByE,QAApB;;AACA,iBAAK3D,qBAAL,CAA2B2D,QAA3B;;AACA,iBAAK/B,uBAAL,CAA6BjK,MAA7B,CAAoC,IAApC;;AACA,gBAAI,KAAK6J,KAAL,IAAc,KAAKA,KAAL,CAAWb,UAA7B,EAAyC;AACrC,mBAAKa,KAAL,CAAWb,UAAX,CAAsBC,WAAtB,CAAkC,KAAKY,KAAvC;;AACA,mBAAKA,KAAL,GAAa,IAAb;AACH;;AACD,iBAAKmB,mBAAL,GAA2B,KAAKlB,KAAL,GAAa,IAAxC;;AACA,gBAAIgC,UAAJ,EAAgB;AACZ,mBAAKzB,YAAL,CAAkB5C,IAAlB;AACH;;AACD,iBAAK4C,YAAL,CAAkB2B,QAAlB;AACH;AACD;;;;iBACA,uBAAc;AACV,mBAAO,KAAKpC,aAAL,CAAmBxI,WAAnB,EAAP;AACH;AACD;;;;iBACA,yBAAgB;AACZ,mBAAO,KAAK+I,cAAZ;AACH;AACD;;;;iBACA,uBAAc;AACV,mBAAO,KAAKC,YAAZ;AACH;AACD;;;;iBACA,uBAAc;AACV,mBAAO,KAAKC,YAAZ;AACH;AACD;;;;iBACA,yBAAgB;AACZ,mBAAO,KAAK9C,cAAZ;AACH;AACD;;;;iBACA,gCAAuB;AACnB,mBAAO,KAAKc,qBAAZ;AACH;AACD;;;;iBACA,qBAAY;AACR,mBAAO,KAAKtH,OAAZ;AACH;AACD;;;;iBACA,0BAAiB;AACb,gBAAI,KAAK4J,iBAAT,EAA4B;AACxB,mBAAKA,iBAAL,CAAuBsB,KAAvB;AACH;AACJ;AACD;;;;iBACA,gCAAuBC,QAAvB,EAAiC;AAC7B,gBAAIA,QAAQ,KAAK,KAAKvB,iBAAtB,EAAyC;AACrC;AACH;;AACD,gBAAI,KAAKA,iBAAT,EAA4B;AACxB,mBAAKA,iBAAL,CAAuBe,OAAvB;AACH;;AACD,iBAAKf,iBAAL,GAAyBuB,QAAzB;;AACA,gBAAI,KAAK9K,WAAL,EAAJ,EAAwB;AACpB8K,sBAAQ,CAACxB,MAAT,CAAgB,IAAhB;AACA,mBAAKzI,cAAL;AACH;AACJ;AACD;;;;iBACA,oBAAWkK,UAAX,EAAuB;AACnB,iBAAKpL,OAAL,GAAeuE,MAAM,CAAC8G,MAAP,CAAc9G,MAAM,CAAC8G,MAAP,CAAc,EAAd,EAAkB,KAAKrL,OAAvB,CAAd,EAA+CoL,UAA/C,CAAf;;AACA,iBAAKjB,kBAAL;AACH;AACD;;;;iBACA,sBAAamB,GAAb,EAAkB;AACd,iBAAKtL,OAAL,GAAeuE,MAAM,CAAC8G,MAAP,CAAc9G,MAAM,CAAC8G,MAAP,CAAc,EAAd,EAAkB,KAAKrL,OAAvB,CAAd,EAA+C;AAAEuL,uBAAS,EAAED;AAAb,aAA/C,CAAf;;AACA,iBAAKlB,uBAAL;AACH;AACD;;;;iBACA,uBAAcoB,OAAd,EAAuB;AACnB,gBAAI,KAAKzC,KAAT,EAAgB;AACZ,mBAAK2B,cAAL,CAAoB,KAAK3B,KAAzB,EAAgCyC,OAAhC,EAAyC,IAAzC;AACH;AACJ;AACD;;;;iBACA,0BAAiBA,OAAjB,EAA0B;AACtB,gBAAI,KAAKzC,KAAT,EAAgB;AACZ,mBAAK2B,cAAL,CAAoB,KAAK3B,KAAzB,EAAgCyC,OAAhC,EAAyC,KAAzC;AACH;AACJ;AACD;AACJ;AACA;;;;iBACI,wBAAe;AACX,gBAAMD,SAAS,GAAG,KAAKvL,OAAL,CAAauL,SAA/B;;AACA,gBAAI,CAACA,SAAL,EAAgB;AACZ,qBAAO,KAAP;AACH;;AACD,mBAAO,OAAOA,SAAP,KAAqB,QAArB,GAAgCA,SAAhC,GAA4CA,SAAS,CAAC9F,KAA7D;AACH;AACD;;;;iBACA,8BAAqB0F,QAArB,EAA+B;AAC3B,gBAAIA,QAAQ,KAAK,KAAKzB,eAAtB,EAAuC;AACnC;AACH;;AACD,iBAAKsB,sBAAL;;AACA,iBAAKtB,eAAL,GAAuByB,QAAvB;;AACA,gBAAI,KAAK9K,WAAL,EAAJ,EAAwB;AACpB8K,sBAAQ,CAACxB,MAAT,CAAgB,IAAhB;AACAwB,sBAAQ,CAACd,MAAT;AACH;AACJ;AACD;;;;iBACA,mCAA0B;AACtB,iBAAKvB,KAAL,CAAWL,YAAX,CAAwB,KAAxB,EAA+B,KAAKgD,YAAL,EAA/B;AACH;AACD;;;;iBACA,8BAAqB;AACjB,gBAAI,CAAC,KAAK1C,KAAV,EAAiB;AACb;AACH;;AACD,gBAAMxK,KAAK,GAAG,KAAKwK,KAAL,CAAWxK,KAAzB;AACAA,iBAAK,CAACmB,KAAN,GAAc,kFAAoB,KAAKM,OAAL,CAAaN,KAAjC,CAAd;AACAnB,iBAAK,CAACiB,MAAN,GAAe,kFAAoB,KAAKQ,OAAL,CAAaR,MAAjC,CAAf;AACAjB,iBAAK,CAACmN,QAAN,GAAiB,kFAAoB,KAAK1L,OAAL,CAAa0L,QAAjC,CAAjB;AACAnN,iBAAK,CAACoN,SAAN,GAAkB,kFAAoB,KAAK3L,OAAL,CAAa2L,SAAjC,CAAlB;AACApN,iBAAK,CAACqN,QAAN,GAAiB,kFAAoB,KAAK5L,OAAL,CAAa4L,QAAjC,CAAjB;AACArN,iBAAK,CAACsN,SAAN,GAAkB,kFAAoB,KAAK7L,OAAL,CAAa6L,SAAjC,CAAlB;AACH;AACD;;;;iBACA,8BAAqBC,aAArB,EAAoC;AAChC,iBAAK/C,KAAL,CAAWxK,KAAX,CAAiBwN,aAAjB,GAAiCD,aAAa,GAAG,EAAH,GAAQ,MAAtD;AACH;AACD;;;;iBACA,2BAAkB;AAAA;;AACd,gBAAME,YAAY,GAAG,8BAArB;AACA,iBAAK7C,gBAAL,GAAwB,KAAKlL,SAAL,CAAeuK,aAAf,CAA6B,KAA7B,CAAxB;;AACA,iBAAKW,gBAAL,CAAsB3K,SAAtB,CAAgCC,GAAhC,CAAoC,sBAApC;;AACA,gBAAI,KAAKuB,OAAL,CAAaoE,aAAjB,EAAgC;AAC5B,mBAAKsG,cAAL,CAAoB,KAAKvB,gBAAzB,EAA2C,KAAKnJ,OAAL,CAAaoE,aAAxD,EAAuE,IAAvE;AACH,aANa,CAOd;AACA;;;AACA,iBAAK0E,KAAL,CAAWkB,aAAX,CAAyBiC,YAAzB,CAAsC,KAAK9C,gBAA3C,EAA6D,KAAKL,KAAlE,EATc,CAUd;AACA;;;AACA,iBAAKK,gBAAL,CAAsBvC,gBAAtB,CAAuC,OAAvC,EAAgD,KAAK6C,qBAArD,EAZc,CAad;;;AACA,gBAAI,OAAOyC,qBAAP,KAAiC,WAArC,EAAkD;AAC9C,mBAAKnM,OAAL,CAAaoM,iBAAb,CAA+B,YAAM;AACjCD,qCAAqB,CAAC,YAAM;AACxB,sBAAI,MAAI,CAAC/C,gBAAT,EAA2B;AACvB,0BAAI,CAACA,gBAAL,CAAsB3K,SAAtB,CAAgCC,GAAhC,CAAoCuN,YAApC;AACH;AACJ,iBAJoB,CAArB;AAKH,eAND;AAOH,aARD,MASK;AACD,mBAAK7C,gBAAL,CAAsB3K,SAAtB,CAAgCC,GAAhC,CAAoCuN,YAApC;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;;iBACI,gCAAuB;AACnB,gBAAI,KAAKlD,KAAL,CAAWsD,WAAf,EAA4B;AACxB,mBAAKtD,KAAL,CAAWb,UAAX,CAAsBS,WAAtB,CAAkC,KAAKI,KAAvC;AACH;AACJ;AACD;;;;iBACA,0BAAiB;AAAA;;AACb,gBAAIuD,gBAAgB,GAAG,KAAKlD,gBAA5B;;AACA,gBAAI,CAACkD,gBAAL,EAAuB;AACnB;AACH;;AACD,gBAAIC,SAAJ;;AACA,gBAAIC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACrB;AACA,kBAAIF,gBAAJ,EAAsB;AAClBA,gCAAgB,CAACxF,mBAAjB,CAAqC,OAArC,EAA8C,OAAI,CAAC4C,qBAAnD;AACA4C,gCAAgB,CAACxF,mBAAjB,CAAqC,eAArC,EAAsD0F,YAAtD;;AACA,oBAAIF,gBAAgB,CAACpE,UAArB,EAAiC;AAC7BoE,kCAAgB,CAACpE,UAAjB,CAA4BC,WAA5B,CAAwCmE,gBAAxC;AACH;AACJ,eARoB,CASrB;AACA;AACA;;;AACA,kBAAI,OAAI,CAAClD,gBAAL,IAAyBkD,gBAA7B,EAA+C;AAC3C,uBAAI,CAAClD,gBAAL,GAAwB,IAAxB;AACH;;AACD,kBAAI,OAAI,CAACnJ,OAAL,CAAaoE,aAAjB,EAAgC;AAC5B,uBAAI,CAACsG,cAAL,CAAoB2B,gBAApB,EAAsC,OAAI,CAACrM,OAAL,CAAaoE,aAAnD,EAAkE,KAAlE;AACH;;AACDoI,0BAAY,CAACF,SAAD,CAAZ;AACH,aAnBD;;AAoBAD,4BAAgB,CAAC7N,SAAjB,CAA2BS,MAA3B,CAAkC,8BAAlC;;AACA,iBAAKc,OAAL,CAAaoM,iBAAb,CAA+B,YAAM;AACjCE,8BAAgB,CAACzF,gBAAjB,CAAkC,eAAlC,EAAmD2F,YAAnD;AACH,aAFD,EA3Ba,CA8Bb;AACA;;;AACAF,4BAAgB,CAAC9N,KAAjB,CAAuBwN,aAAvB,GAAuC,MAAvC,CAhCa,CAiCb;AACA;AACA;;AACAO,qBAAS,GAAG,KAAKvM,OAAL,CAAaoM,iBAAb,CAA+B;AAAA,qBAAMM,UAAU,CAACF,YAAD,EAAe,GAAf,CAAhB;AAAA,aAA/B,CAAZ;AACH;AACD;;;;iBACA,wBAAejL,OAAf,EAAwBoL,UAAxB,EAAoCC,KAApC,EAA2C;AACvC,gBAAMnO,SAAS,GAAG8C,OAAO,CAAC9C,SAA1B;AACA,sFAAYkO,UAAZ,EAAwBE,OAAxB,CAAgC,UAAAC,QAAQ,EAAI;AACxC;AACA;AACA,kBAAIA,QAAJ,EAAc;AACVF,qBAAK,GAAGnO,SAAS,CAACC,GAAV,CAAcoO,QAAd,CAAH,GAA6BrO,SAAS,CAACS,MAAV,CAAiB4N,QAAjB,CAAlC;AACH;AACJ,aAND;AAOH;AACD;;;;iBACA,oCAA2B;AAAA;;AACvB;AACA;AACA;AACA,iBAAK9M,OAAL,CAAaoM,iBAAb,CAA+B,YAAM;AACjC;AACA;AACA;AACA,kBAAMW,YAAY,GAAG,OAAI,CAAC/M,OAAL,CAAauK,QAAb,CAChBC,IADgB,CACX,iEAAU,mDAAM,OAAI,CAAClB,YAAX,EAAyB,OAAI,CAACC,YAA9B,CAAV,CADW,EAEhBxI,SAFgB,CAEN,YAAM;AACjB;AACA;AACA,oBAAI,CAAC,OAAI,CAACiI,KAAN,IAAe,CAAC,OAAI,CAACD,KAArB,IAA8B,OAAI,CAACC,KAAL,CAAWgE,QAAX,CAAoB9G,MAApB,KAA+B,CAAjE,EAAoE;AAChE,sBAAI,OAAI,CAAC8C,KAAL,IAAc,OAAI,CAAC/I,OAAL,CAAakE,UAA/B,EAA2C;AACvC,2BAAI,CAACwG,cAAL,CAAoB,OAAI,CAAC3B,KAAzB,EAAgC,OAAI,CAAC/I,OAAL,CAAakE,UAA7C,EAAyD,KAAzD;AACH;;AACD,sBAAI,OAAI,CAAC4E,KAAL,IAAc,OAAI,CAACA,KAAL,CAAWkB,aAA7B,EAA4C;AACxC,2BAAI,CAACC,mBAAL,GAA2B,OAAI,CAACnB,KAAL,CAAWkB,aAAtC;;AACA,2BAAI,CAACC,mBAAL,CAAyB/B,WAAzB,CAAqC,OAAI,CAACY,KAA1C;AACH;;AACDgE,8BAAY,CAAC3L,WAAb;AACH;AACJ,eAfoB,CAArB;AAgBH,aApBD;AAqBH;AACD;;;;iBACA,kCAAyB;AACrB,gBAAM8C,cAAc,GAAG,KAAKyF,eAA5B;;AACA,gBAAIzF,cAAJ,EAAoB;AAChBA,4BAAc,CAAC9D,OAAf;;AACA,kBAAI8D,cAAc,CAAC1D,MAAnB,EAA2B;AACvB0D,8BAAc,CAAC1D,MAAf;AACH;AACJ;AACJ;;;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA,UAAMyM,gBAAgB,GAAG,6CAAzB;AACA;;AACA,UAAMC,cAAc,GAAG,eAAvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;UACMC,iC;AACF,mDAAYC,WAAZ,EAAyBxP,cAAzB,EAAyCM,SAAzC,EAAoD+I,SAApD,EAA+DoG,iBAA/D,EAAkF;AAAA;;AAC9E,eAAKzP,cAAL,GAAsBA,cAAtB;AACA,eAAKM,SAAL,GAAiBA,SAAjB;AACA,eAAK+I,SAAL,GAAiBA,SAAjB;AACA,eAAKoG,iBAAL,GAAyBA,iBAAzB;AACA;;AACA,eAAKC,oBAAL,GAA4B;AAAE3N,iBAAK,EAAE,CAAT;AAAYF,kBAAM,EAAE;AAApB,WAA5B;AACA;;AACA,eAAK8N,SAAL,GAAiB,KAAjB;AACA;;AACA,eAAKC,QAAL,GAAgB,IAAhB;AACA;;AACA,eAAKC,cAAL,GAAsB,KAAtB;AACA;;AACA,eAAKC,sBAAL,GAA8B,IAA9B;AACA;;AACA,eAAKC,eAAL,GAAuB,KAAvB;AACA;;AACA,eAAKC,eAAL,GAAuB,CAAvB;AACA;;AACA,eAAKC,YAAL,GAAoB,EAApB;AACA;;AACA,eAAKC,mBAAL,GAA2B,EAA3B;AACA;;AACA,eAAKC,gBAAL,GAAwB,IAAI,4CAAJ,EAAxB;AACA;;AACA,eAAKC,mBAAL,GAA2B,kDAAavE,KAAxC;AACA;;AACA,eAAKwE,QAAL,GAAgB,CAAhB;AACA;;AACA,eAAKC,QAAL,GAAgB,CAAhB;AACA;;AACA,eAAKC,oBAAL,GAA4B,EAA5B;AACA;;AACA,eAAKC,eAAL,GAAuB,KAAKL,gBAA5B;AACA,eAAKM,SAAL,CAAejB,WAAf;AACH;AACD;;;;;eACA,eAAgB;AACZ,mBAAO,KAAKU,mBAAZ;AACH;AACD;;;;iBACA,gBAAOrN,UAAP,EAAmB;AAAA;;AACf,gBAAI,KAAKJ,WAAL,IAAoBI,UAAU,KAAK,KAAKJ,WAAxC,KACC,OAAOK,SAAP,KAAqB,WAArB,IAAoCA,SADrC,CAAJ,EACqD;AACjD,oBAAMb,KAAK,CAAC,0DAAD,CAAX;AACH;;AACD,iBAAKyO,kBAAL;;AACA7N,sBAAU,CAAC8N,WAAX,CAAuB9P,SAAvB,CAAiCC,GAAjC,CAAqCuO,gBAArC;AACA,iBAAK5M,WAAL,GAAmBI,UAAnB;AACA,iBAAK+N,YAAL,GAAoB/N,UAAU,CAAC8N,WAA/B;AACA,iBAAKvF,KAAL,GAAavI,UAAU,CAACmC,cAAxB;AACA,iBAAK6L,WAAL,GAAmB,KAAnB;AACA,iBAAKC,gBAAL,GAAwB,IAAxB;AACA,iBAAKC,aAAL,GAAqB,IAArB;;AACA,iBAAKX,mBAAL,CAAyB5M,WAAzB;;AACA,iBAAK4M,mBAAL,GAA2B,KAAKpQ,cAAL,CAAoBgR,MAApB,GAA6B7N,SAA7B,CAAuC,YAAM;AACpE;AACA;AACA;AACA,qBAAI,CAAC2N,gBAAL,GAAwB,IAAxB;;AACA,qBAAI,CAACvD,KAAL;AACH,aAN0B,CAA3B;AAOH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACI,iBAAQ;AACJ;AACA,gBAAI,KAAKsD,WAAL,IAAoB,CAAC,KAAKxH,SAAL,CAAeqB,SAAxC,EAAmD;AAC/C;AACH,aAJG,CAKJ;AACA;AACA;;;AACA,gBAAI,CAAC,KAAKoG,gBAAN,IAA0B,KAAKf,eAA/B,IAAkD,KAAKgB,aAA3D,EAA0E;AACtE,mBAAKE,mBAAL;AACA;AACH;;AACD,iBAAKC,kBAAL;;AACA,iBAAKC,0BAAL;;AACA,iBAAKC,uBAAL,GAdI,CAeJ;AACA;AACA;;;AACA,iBAAKC,aAAL,GAAqB,KAAKC,wBAAL,EAArB;AACA,iBAAKC,WAAL,GAAmB,KAAKC,cAAL,EAAnB;AACA,iBAAKC,YAAL,GAAoB,KAAKrG,KAAL,CAAWnG,qBAAX,EAApB;AACA,gBAAMyM,UAAU,GAAG,KAAKH,WAAxB;AACA,gBAAMxM,WAAW,GAAG,KAAK0M,YAAzB;AACA,gBAAME,YAAY,GAAG,KAAKN,aAA1B,CAvBI,CAwBJ;;AACA,gBAAMO,YAAY,GAAG,EAArB,CAzBI,CA0BJ;;AACA,gBAAIC,QAAJ,CA3BI,CA4BJ;AACA;;AA7BI,uDA8BY,KAAK3B,mBA9BjB;AAAA;;AAAA;AA8BJ,kEAA0C;AAAA,oBAAjC4B,GAAiC;;AACtC;AACA,oBAAIC,WAAW,GAAG,KAAKC,eAAL,CAAqBN,UAArB,EAAiCI,GAAjC,CAAlB,CAFsC,CAGtC;AACA;AACA;;;AACA,oBAAIG,YAAY,GAAG,KAAKC,gBAAL,CAAsBH,WAAtB,EAAmChN,WAAnC,EAAgD+M,GAAhD,CAAnB,CANsC,CAOtC;;;AACA,oBAAIK,UAAU,GAAG,KAAKC,cAAL,CAAoBH,YAApB,EAAkClN,WAAlC,EAA+C4M,YAA/C,EAA6DG,GAA7D,CAAjB,CARsC,CAStC;;;AACA,oBAAIK,UAAU,CAACE,0BAAf,EAA2C;AACvC,uBAAK1C,SAAL,GAAiB,KAAjB;;AACA,uBAAK2C,cAAL,CAAoBR,GAApB,EAAyBC,WAAzB;;AACA;AACH,iBAdqC,CAetC;AACA;;;AACA,oBAAI,KAAKQ,6BAAL,CAAmCJ,UAAnC,EAA+CF,YAA/C,EAA6DN,YAA7D,CAAJ,EAAgF;AAC5E;AACA;AACAC,8BAAY,CAAC1J,IAAb,CAAkB;AACdsK,4BAAQ,EAAEV,GADI;AAEd9K,0BAAM,EAAE+K,WAFM;AAGdhN,+BAAW,EAAXA,WAHc;AAId0N,mCAAe,EAAE,KAAKC,yBAAL,CAA+BX,WAA/B,EAA4CD,GAA5C;AAJH,mBAAlB;AAMA;AACH,iBA3BqC,CA4BtC;AACA;AACA;;;AACA,oBAAI,CAACD,QAAD,IAAaA,QAAQ,CAACM,UAAT,CAAoBQ,WAApB,GAAkCR,UAAU,CAACQ,WAA9D,EAA2E;AACvEd,0BAAQ,GAAG;AAAEM,8BAAU,EAAVA,UAAF;AAAcF,gCAAY,EAAZA,YAAd;AAA4BF,+BAAW,EAAXA,WAA5B;AAAyCS,4BAAQ,EAAEV,GAAnD;AAAwD/M,+BAAW,EAAXA;AAAxD,mBAAX;AACH;AACJ,eAhEG,CAiEJ;AACA;;AAlEI;AAAA;AAAA;AAAA;AAAA;;AAmEJ,gBAAI6M,YAAY,CAACtJ,MAAjB,EAAyB;AACrB,kBAAIsK,OAAO,GAAG,IAAd;AACA,kBAAIC,SAAS,GAAG,CAAC,CAAjB;;AAFqB,0DAGHjB,YAHG;AAAA;;AAAA;AAGrB,uEAAgC;AAAA,sBAArBkB,GAAqB;AAC5B,sBAAMC,KAAK,GAAGD,GAAG,CAACL,eAAJ,CAAoB1Q,KAApB,GAA4B+Q,GAAG,CAACL,eAAJ,CAAoB5Q,MAAhD,IAA0DiR,GAAG,CAACN,QAAJ,CAAaQ,MAAb,IAAuB,CAAjF,CAAd;;AACA,sBAAID,KAAK,GAAGF,SAAZ,EAAuB;AACnBA,6BAAS,GAAGE,KAAZ;AACAH,2BAAO,GAAGE,GAAV;AACH;AACJ;AAToB;AAAA;AAAA;AAAA;AAAA;;AAUrB,mBAAKnD,SAAL,GAAiB,KAAjB;;AACA,mBAAK2C,cAAL,CAAoBM,OAAO,CAACJ,QAA5B,EAAsCI,OAAO,CAAC5L,MAA9C;;AACA;AACH,aAhFG,CAiFJ;AACA;;;AACA,gBAAI,KAAK4I,QAAT,EAAmB;AACf;AACA,mBAAKD,SAAL,GAAiB,IAAjB;;AACA,mBAAK2C,cAAL,CAAoBT,QAAQ,CAACW,QAA7B,EAAuCX,QAAQ,CAACE,WAAhD;;AACA;AACH,aAxFG,CAyFJ;AACA;;;AACA,iBAAKO,cAAL,CAAoBT,QAAQ,CAACW,QAA7B,EAAuCX,QAAQ,CAACE,WAAhD;AACH;;;iBACD,kBAAS;AACL,iBAAKb,kBAAL;;AACA,iBAAKH,aAAL,GAAqB,IAArB;AACA,iBAAKkC,mBAAL,GAA2B,IAA3B;;AACA,iBAAK7C,mBAAL,CAAyB5M,WAAzB;AACH;AACD;;;;iBACA,mBAAU;AACN,gBAAI,KAAKqN,WAAT,EAAsB;AAClB;AACH,aAHK,CAIN;AACA;;;AACA,gBAAI,KAAKD,YAAT,EAAuB;AACnBsC,0BAAY,CAAC,KAAKtC,YAAL,CAAkBhQ,KAAnB,EAA0B;AAClCT,mBAAG,EAAE,EAD6B;AAElCC,oBAAI,EAAE,EAF4B;AAGlC+D,qBAAK,EAAE,EAH2B;AAIlCH,sBAAM,EAAE,EAJ0B;AAKlCnC,sBAAM,EAAE,EAL0B;AAMlCE,qBAAK,EAAE,EAN2B;AAOlCoR,0BAAU,EAAE,EAPsB;AAQlCC,8BAAc,EAAE;AARkB,eAA1B,CAAZ;AAUH;;AACD,gBAAI,KAAKhI,KAAT,EAAgB;AACZ,mBAAK+F,0BAAL;AACH;;AACD,gBAAI,KAAK1O,WAAT,EAAsB;AAClB,mBAAKA,WAAL,CAAiBkO,WAAjB,CAA6B9P,SAA7B,CAAuCS,MAAvC,CAA8C+N,gBAA9C;AACH;;AACD,iBAAKzM,MAAL;;AACA,iBAAKuN,gBAAL,CAAsB7C,QAAtB;;AACA,iBAAK7K,WAAL,GAAmB,KAAKmO,YAAL,GAAoB,IAAvC;AACA,iBAAKC,WAAL,GAAmB,IAAnB;AACH;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,+BAAsB;AAClB,gBAAI,CAAC,KAAKA,WAAN,KAAsB,CAAC,KAAKxH,SAAN,IAAmB,KAAKA,SAAL,CAAeqB,SAAxD,CAAJ,EAAwE;AACpE,mBAAK6G,WAAL,GAAmB,KAAKC,cAAL,EAAnB;AACA,mBAAKC,YAAL,GAAoB,KAAKrG,KAAL,CAAWnG,qBAAX,EAApB;AACA,mBAAKoM,aAAL,GAAqB,KAAKC,wBAAL,EAArB;AACA,kBAAM+B,YAAY,GAAG,KAAKtC,aAAL,IAAsB,KAAKb,mBAAL,CAAyB,CAAzB,CAA3C;;AACA,kBAAM6B,WAAW,GAAG,KAAKC,eAAL,CAAqB,KAAKT,WAA1B,EAAuC8B,YAAvC,CAApB;;AACA,mBAAKf,cAAL,CAAoBe,YAApB,EAAkCtB,WAAlC;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,kCAAyBuB,WAAzB,EAAsC;AAClC,iBAAKrD,YAAL,GAAoBqD,WAApB;AACA,mBAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,uBAAcC,SAAd,EAAyB;AACrB,iBAAKrD,mBAAL,GAA2BqD,SAA3B,CADqB,CAErB;AACA;;AACA,gBAAIA,SAAS,CAACnL,OAAV,CAAkB,KAAK2I,aAAvB,MAA0C,CAAC,CAA/C,EAAkD;AAC9C,mBAAKA,aAAL,GAAqB,IAArB;AACH;;AACD,iBAAKL,kBAAL;;AACA,mBAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,4BAAmB8C,MAAnB,EAA2B;AACvB,iBAAKxD,eAAL,GAAuBwD,MAAvB;AACA,mBAAO,IAAP;AACH;AACD;;;;iBACA,kCAAkD;AAAA,gBAA3BC,kBAA2B,uEAAN,IAAM;AAC9C,iBAAK3D,sBAAL,GAA8B2D,kBAA9B;AACA,mBAAO,IAAP;AACH;AACD;;;;iBACA,6BAAwC;AAAA,gBAAtBC,aAAsB,uEAAN,IAAM;AACpC,iBAAK7D,cAAL,GAAsB6D,aAAtB;AACA,mBAAO,IAAP;AACH;AACD;;;;iBACA,oBAAyB;AAAA,gBAAhBC,OAAgB,uEAAN,IAAM;AACrB,iBAAK/D,QAAL,GAAgB+D,OAAhB;AACA,mBAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;iBACI,8BAAoC;AAAA,gBAAjBC,QAAiB,uEAAN,IAAM;AAChC,iBAAK7D,eAAL,GAAuB6D,QAAvB;AACA,mBAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;;iBACI,mBAAU5M,MAAV,EAAkB;AACd,iBAAK6M,OAAL,GAAe7M,MAAf;AACA,mBAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,4BAAmB8M,MAAnB,EAA2B;AACvB,iBAAKzD,QAAL,GAAgByD,MAAhB;AACA,mBAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,4BAAmBA,MAAnB,EAA2B;AACvB,iBAAKxD,QAAL,GAAgBwD,MAAhB;AACA,mBAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACI,+BAAsBC,QAAtB,EAAgC;AAC5B,iBAAKC,wBAAL,GAAgCD,QAAhC;AACA,mBAAO,IAAP;AACH;AACD;AACJ;AACA;;;;iBACI,yBAAgBrC,UAAhB,EAA4BI,GAA5B,EAAiC;AAC7B,gBAAImC,CAAJ;;AACA,gBAAInC,GAAG,CAAC1K,OAAJ,IAAe,QAAnB,EAA6B;AACzB;AACA;AACA6M,eAAC,GAAGvC,UAAU,CAACtR,IAAX,GAAmBsR,UAAU,CAAC3P,KAAX,GAAmB,CAA1C;AACH,aAJD,MAKK;AACD,kBAAMmS,MAAM,GAAG,KAAKC,MAAL,KAAgBzC,UAAU,CAACvN,KAA3B,GAAmCuN,UAAU,CAACtR,IAA7D;AACA,kBAAMgU,IAAI,GAAG,KAAKD,MAAL,KAAgBzC,UAAU,CAACtR,IAA3B,GAAkCsR,UAAU,CAACvN,KAA1D;AACA8P,eAAC,GAAGnC,GAAG,CAAC1K,OAAJ,IAAe,OAAf,GAAyB8M,MAAzB,GAAkCE,IAAtC;AACH;;AACD,gBAAIC,CAAJ;;AACA,gBAAIvC,GAAG,CAACzK,OAAJ,IAAe,QAAnB,EAA6B;AACzBgN,eAAC,GAAG3C,UAAU,CAACvR,GAAX,GAAkBuR,UAAU,CAAC7P,MAAX,GAAoB,CAA1C;AACH,aAFD,MAGK;AACDwS,eAAC,GAAGvC,GAAG,CAACzK,OAAJ,IAAe,KAAf,GAAuBqK,UAAU,CAACvR,GAAlC,GAAwCuR,UAAU,CAAC1N,MAAvD;AACH;;AACD,mBAAO;AAAEiQ,eAAC,EAADA,CAAF;AAAKI,eAAC,EAADA;AAAL,aAAP;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,0BAAiBtC,WAAjB,EAA8BhN,WAA9B,EAA2C+M,GAA3C,EAAgD;AAC5C;AACA;AACA,gBAAIwC,aAAJ;;AACA,gBAAIxC,GAAG,CAACxK,QAAJ,IAAgB,QAApB,EAA8B;AAC1BgN,2BAAa,GAAG,CAACvP,WAAW,CAAChD,KAAb,GAAqB,CAArC;AACH,aAFD,MAGK,IAAI+P,GAAG,CAACxK,QAAJ,KAAiB,OAArB,EAA8B;AAC/BgN,2BAAa,GAAG,KAAKH,MAAL,KAAgB,CAACpP,WAAW,CAAChD,KAA7B,GAAqC,CAArD;AACH,aAFI,MAGA;AACDuS,2BAAa,GAAG,KAAKH,MAAL,KAAgB,CAAhB,GAAoB,CAACpP,WAAW,CAAChD,KAAjD;AACH;;AACD,gBAAIwS,aAAJ;;AACA,gBAAIzC,GAAG,CAACvK,QAAJ,IAAgB,QAApB,EAA8B;AAC1BgN,2BAAa,GAAG,CAACxP,WAAW,CAAClD,MAAb,GAAsB,CAAtC;AACH,aAFD,MAGK;AACD0S,2BAAa,GAAGzC,GAAG,CAACvK,QAAJ,IAAgB,KAAhB,GAAwB,CAAxB,GAA4B,CAACxC,WAAW,CAAClD,MAAzD;AACH,aAnB2C,CAoB5C;;;AACA,mBAAO;AACHoS,eAAC,EAAElC,WAAW,CAACkC,CAAZ,GAAgBK,aADhB;AAEHD,eAAC,EAAEtC,WAAW,CAACsC,CAAZ,GAAgBE;AAFhB,aAAP;AAIH;AACD;;;;iBACA,wBAAeC,KAAf,EAAsBC,cAAtB,EAAsC/S,QAAtC,EAAgD8Q,QAAhD,EAA0D;AACtD;AACA;AACA,gBAAMvL,OAAO,GAAGyN,4BAA4B,CAACD,cAAD,CAA5C;AACA,gBAAMR,CAAN,GAAeO,KAAf,CAAMP,CAAN;AAAA,gBAASI,CAAT,GAAeG,KAAf,CAASH,CAAT;;AACA,gBAAInN,OAAO,GAAG,KAAKyN,UAAL,CAAgBnC,QAAhB,EAA0B,GAA1B,CAAd;;AACA,gBAAIrL,OAAO,GAAG,KAAKwN,UAAL,CAAgBnC,QAAhB,EAA0B,GAA1B,CAAd,CANsD,CAOtD;;;AACA,gBAAItL,OAAJ,EAAa;AACT+M,eAAC,IAAI/M,OAAL;AACH;;AACD,gBAAIC,OAAJ,EAAa;AACTkN,eAAC,IAAIlN,OAAL;AACH,aAbqD,CActD;;;AACA,gBAAIyN,YAAY,GAAG,IAAIX,CAAvB;AACA,gBAAIY,aAAa,GAAIZ,CAAC,GAAGhN,OAAO,CAAClF,KAAb,GAAsBL,QAAQ,CAACK,KAAnD;AACA,gBAAI+S,WAAW,GAAG,IAAIT,CAAtB;AACA,gBAAIU,cAAc,GAAIV,CAAC,GAAGpN,OAAO,CAACpF,MAAb,GAAuBH,QAAQ,CAACG,MAArD,CAlBsD,CAmBtD;;AACA,gBAAImT,YAAY,GAAG,KAAKC,kBAAL,CAAwBhO,OAAO,CAAClF,KAAhC,EAAuC6S,YAAvC,EAAqDC,aAArD,CAAnB;;AACA,gBAAIK,aAAa,GAAG,KAAKD,kBAAL,CAAwBhO,OAAO,CAACpF,MAAhC,EAAwCiT,WAAxC,EAAqDC,cAArD,CAApB;;AACA,gBAAIpC,WAAW,GAAGqC,YAAY,GAAGE,aAAjC;AACA,mBAAO;AACHvC,yBAAW,EAAXA,WADG;AAEHN,wCAA0B,EAAGpL,OAAO,CAAClF,KAAR,GAAgBkF,OAAO,CAACpF,MAAzB,KAAqC8Q,WAF9D;AAGHwC,sCAAwB,EAAED,aAAa,KAAKjO,OAAO,CAACpF,MAHjD;AAIHuT,wCAA0B,EAAEJ,YAAY,IAAI/N,OAAO,CAAClF;AAJjD,aAAP;AAMH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;iBACI,uCAA8B+Q,GAA9B,EAAmC0B,KAAnC,EAA0C9S,QAA1C,EAAoD;AAChD,gBAAI,KAAKoO,sBAAT,EAAiC;AAC7B,kBAAMuF,eAAe,GAAG3T,QAAQ,CAACsC,MAAT,GAAkBwQ,KAAK,CAACH,CAAhD;AACA,kBAAMiB,cAAc,GAAG5T,QAAQ,CAACyC,KAAT,GAAiBqQ,KAAK,CAACP,CAA9C;AACA,kBAAMjG,SAAS,GAAGuH,aAAa,CAAC,KAAK9S,WAAL,CAAiB+S,SAAjB,GAA6BxH,SAA9B,CAA/B;AACA,kBAAMD,QAAQ,GAAGwH,aAAa,CAAC,KAAK9S,WAAL,CAAiB+S,SAAjB,GAA6BzH,QAA9B,CAA9B;AACA,kBAAM0H,WAAW,GAAG3C,GAAG,CAACqC,wBAAJ,IACfnH,SAAS,IAAI,IAAb,IAAqBA,SAAS,IAAIqH,eADvC;AAEA,kBAAMK,aAAa,GAAG5C,GAAG,CAACsC,0BAAJ,IACjBrH,QAAQ,IAAI,IAAZ,IAAoBA,QAAQ,IAAIuH,cADrC;AAEA,qBAAOG,WAAW,IAAIC,aAAtB;AACH;;AACD,mBAAO,KAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACI,8BAAqBC,KAArB,EAA4BlB,cAA5B,EAA4CrR,cAA5C,EAA4D;AACxD;AACA;AACA;AACA,gBAAI,KAAK6P,mBAAL,IAA4B,KAAKlD,eAArC,EAAsD;AAClD,qBAAO;AACHkE,iBAAC,EAAE0B,KAAK,CAAC1B,CAAN,GAAU,KAAKhB,mBAAL,CAAyBgB,CADnC;AAEHI,iBAAC,EAAEsB,KAAK,CAACtB,CAAN,GAAU,KAAKpB,mBAAL,CAAyBoB;AAFnC,eAAP;AAIH,aATuD,CAUxD;AACA;;;AACA,gBAAMpN,OAAO,GAAGyN,4BAA4B,CAACD,cAAD,CAA5C;AACA,gBAAM/S,QAAQ,GAAG,KAAK2P,aAAtB,CAbwD,CAcxD;AACA;;AACA,gBAAMuE,aAAa,GAAGvS,IAAI,CAACwS,GAAL,CAASF,KAAK,CAAC1B,CAAN,GAAUhN,OAAO,CAAClF,KAAlB,GAA0BL,QAAQ,CAACK,KAA5C,EAAmD,CAAnD,CAAtB;AACA,gBAAM+T,cAAc,GAAGzS,IAAI,CAACwS,GAAL,CAASF,KAAK,CAACtB,CAAN,GAAUpN,OAAO,CAACpF,MAAlB,GAA2BH,QAAQ,CAACG,MAA7C,EAAqD,CAArD,CAAvB;AACA,gBAAMkU,WAAW,GAAG1S,IAAI,CAACwS,GAAL,CAASnU,QAAQ,CAACvB,GAAT,GAAeiD,cAAc,CAACjD,GAA9B,GAAoCwV,KAAK,CAACtB,CAAnD,EAAsD,CAAtD,CAApB;AACA,gBAAM2B,YAAY,GAAG3S,IAAI,CAACwS,GAAL,CAASnU,QAAQ,CAACtB,IAAT,GAAgBgD,cAAc,CAAChD,IAA/B,GAAsCuV,KAAK,CAAC1B,CAArD,EAAwD,CAAxD,CAArB,CAnBwD,CAoBxD;;AACA,gBAAIgC,KAAK,GAAG,CAAZ;AACA,gBAAIC,KAAK,GAAG,CAAZ,CAtBwD,CAuBxD;AACA;AACA;;AACA,gBAAIjP,OAAO,CAAClF,KAAR,IAAiBL,QAAQ,CAACK,KAA9B,EAAqC;AACjCkU,mBAAK,GAAGD,YAAY,IAAI,CAACJ,aAAzB;AACH,aAFD,MAGK;AACDK,mBAAK,GAAGN,KAAK,CAAC1B,CAAN,GAAU,KAAKjE,eAAf,GAAkCtO,QAAQ,CAACtB,IAAT,GAAgBgD,cAAc,CAAChD,IAAhC,GAAwCuV,KAAK,CAAC1B,CAA/E,GAAmF,CAA3F;AACH;;AACD,gBAAIhN,OAAO,CAACpF,MAAR,IAAkBH,QAAQ,CAACG,MAA/B,EAAuC;AACnCqU,mBAAK,GAAGH,WAAW,IAAI,CAACD,cAAxB;AACH,aAFD,MAGK;AACDI,mBAAK,GAAGP,KAAK,CAACtB,CAAN,GAAU,KAAKrE,eAAf,GAAkCtO,QAAQ,CAACvB,GAAT,GAAeiD,cAAc,CAACjD,GAA/B,GAAsCwV,KAAK,CAACtB,CAA7E,GAAiF,CAAzF;AACH;;AACD,iBAAKpB,mBAAL,GAA2B;AAAEgB,eAAC,EAAEgC,KAAL;AAAY5B,eAAC,EAAE6B;AAAf,aAA3B;AACA,mBAAO;AACHjC,eAAC,EAAE0B,KAAK,CAAC1B,CAAN,GAAUgC,KADV;AAEH5B,eAAC,EAAEsB,KAAK,CAACtB,CAAN,GAAU6B;AAFV,aAAP;AAIH;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,wBAAe1D,QAAf,EAAyBT,WAAzB,EAAsC;AAClC,iBAAKoE,mBAAL,CAAyB3D,QAAzB;;AACA,iBAAK4D,wBAAL,CAA8BrE,WAA9B,EAA2CS,QAA3C;;AACA,iBAAK6D,qBAAL,CAA2BtE,WAA3B,EAAwCS,QAAxC;;AACA,gBAAIA,QAAQ,CAACjM,UAAb,EAAyB;AACrB,mBAAK+P,gBAAL,CAAsB9D,QAAQ,CAACjM,UAA/B;AACH,aANiC,CAOlC;;;AACA,iBAAKwK,aAAL,GAAqByB,QAArB,CARkC,CASlC;AACA;AACA;;AACA,gBAAI,KAAKrC,gBAAL,CAAsBrH,SAAtB,CAAgCR,MAApC,EAA4C;AACxC,kBAAMX,wBAAwB,GAAG,KAAK4O,oBAAL,EAAjC;;AACA,kBAAMC,WAAW,GAAG,IAAI/O,8BAAJ,CAAmC+K,QAAnC,EAA6C7K,wBAA7C,CAApB;;AACA,mBAAKwI,gBAAL,CAAsBpH,IAAtB,CAA2ByN,WAA3B;AACH;;AACD,iBAAK1F,gBAAL,GAAwB,KAAxB;AACH;AACD;;;;iBACA,6BAAoB0B,QAApB,EAA8B;AAC1B,gBAAI,CAAC,KAAKwB,wBAAV,EAAoC;AAChC;AACH;;AACD,gBAAMyC,QAAQ,GAAG,KAAK7F,YAAL,CAAkBhG,gBAAlB,CAAmC,KAAKoJ,wBAAxC,CAAjB;;AACA,gBAAI0C,OAAJ;AACA,gBAAIC,OAAO,GAAGnE,QAAQ,CAACjL,QAAvB;;AACA,gBAAIiL,QAAQ,CAAClL,QAAT,KAAsB,QAA1B,EAAoC;AAChCoP,qBAAO,GAAG,QAAV;AACH,aAFD,MAGK,IAAI,KAAKvC,MAAL,EAAJ,EAAmB;AACpBuC,qBAAO,GAAGlE,QAAQ,CAAClL,QAAT,KAAsB,OAAtB,GAAgC,OAAhC,GAA0C,MAApD;AACH,aAFI,MAGA;AACDoP,qBAAO,GAAGlE,QAAQ,CAAClL,QAAT,KAAsB,OAAtB,GAAgC,MAAhC,GAAyC,OAAnD;AACH;;AACD,iBAAK,IAAIsB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6N,QAAQ,CAACnO,MAA7B,EAAqCM,CAAC,EAAtC,EAA0C;AACtC6N,sBAAQ,CAAC7N,CAAD,CAAR,CAAYhI,KAAZ,CAAkBgW,eAAlB,aAAuCF,OAAvC,cAAkDC,OAAlD;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;;;;iBACI,mCAA0B3P,MAA1B,EAAkCwL,QAAlC,EAA4C;AACxC,gBAAM9Q,QAAQ,GAAG,KAAK2P,aAAtB;;AACA,gBAAMwF,KAAK,GAAG,KAAK1C,MAAL,EAAd;;AACA,gBAAItS,MAAJ,EAAY1B,GAAZ,EAAiB6D,MAAjB;;AACA,gBAAIwO,QAAQ,CAACjL,QAAT,KAAsB,KAA1B,EAAiC;AAC7B;AACApH,iBAAG,GAAG6G,MAAM,CAACqN,CAAb;AACAxS,oBAAM,GAAGH,QAAQ,CAACG,MAAT,GAAkB1B,GAAlB,GAAwB,KAAK6P,eAAtC;AACH,aAJD,MAKK,IAAIwC,QAAQ,CAACjL,QAAT,KAAsB,QAA1B,EAAoC;AACrC;AACA;AACA;AACAvD,oBAAM,GAAGtC,QAAQ,CAACG,MAAT,GAAkBmF,MAAM,CAACqN,CAAzB,GAA6B,KAAKrE,eAAL,GAAuB,CAA7D;AACAnO,oBAAM,GAAGH,QAAQ,CAACG,MAAT,GAAkBmC,MAAlB,GAA2B,KAAKgM,eAAzC;AACH,aANI,MAOA;AACD;AACA;AACA;AACA;AACA,kBAAM8G,8BAA8B,GAAGzT,IAAI,CAAC0T,GAAL,CAASrV,QAAQ,CAACsC,MAAT,GAAkBgD,MAAM,CAACqN,CAAzB,GAA6B3S,QAAQ,CAACvB,GAA/C,EAAoD6G,MAAM,CAACqN,CAA3D,CAAvC;AACA,kBAAM2C,cAAc,GAAG,KAAKtH,oBAAL,CAA0B7N,MAAjD;AACAA,oBAAM,GAAGiV,8BAA8B,GAAG,CAA1C;AACA3W,iBAAG,GAAG6G,MAAM,CAACqN,CAAP,GAAWyC,8BAAjB;;AACA,kBAAIjV,MAAM,GAAGmV,cAAT,IAA2B,CAAC,KAAKlG,gBAAjC,IAAqD,CAAC,KAAKjB,cAA/D,EAA+E;AAC3E1P,mBAAG,GAAG6G,MAAM,CAACqN,CAAP,GAAY2C,cAAc,GAAG,CAAnC;AACH;AACJ,aA5BuC,CA6BxC;;;AACA,gBAAMC,4BAA4B,GAAIzE,QAAQ,CAAClL,QAAT,KAAsB,OAAtB,IAAiC,CAACuP,KAAnC,IAChCrE,QAAQ,CAAClL,QAAT,KAAsB,KAAtB,IAA+BuP,KADpC,CA9BwC,CAgCxC;;AACA,gBAAMK,2BAA2B,GAAI1E,QAAQ,CAAClL,QAAT,KAAsB,KAAtB,IAA+B,CAACuP,KAAjC,IAC/BrE,QAAQ,CAAClL,QAAT,KAAsB,OAAtB,IAAiCuP,KADtC;AAEA,gBAAI9U,KAAJ,EAAW3B,IAAX,EAAiB+D,KAAjB;;AACA,gBAAI+S,2BAAJ,EAAiC;AAC7B/S,mBAAK,GAAGzC,QAAQ,CAACK,KAAT,GAAiBiF,MAAM,CAACiN,CAAxB,GAA4B,KAAKjE,eAAzC;AACAjO,mBAAK,GAAGiF,MAAM,CAACiN,CAAP,GAAW,KAAKjE,eAAxB;AACH,aAHD,MAIK,IAAIiH,4BAAJ,EAAkC;AACnC7W,kBAAI,GAAG4G,MAAM,CAACiN,CAAd;AACAlS,mBAAK,GAAGL,QAAQ,CAACyC,KAAT,GAAiB6C,MAAM,CAACiN,CAAhC;AACH,aAHI,MAIA;AACD;AACA;AACA;AACA;AACA,kBAAM6C,+BAA8B,GAAGzT,IAAI,CAAC0T,GAAL,CAASrV,QAAQ,CAACyC,KAAT,GAAiB6C,MAAM,CAACiN,CAAxB,GAA4BvS,QAAQ,CAACtB,IAA9C,EAAoD4G,MAAM,CAACiN,CAA3D,CAAvC;;AACA,kBAAMkD,aAAa,GAAG,KAAKzH,oBAAL,CAA0B3N,KAAhD;AACAA,mBAAK,GAAG+U,+BAA8B,GAAG,CAAzC;AACA1W,kBAAI,GAAG4G,MAAM,CAACiN,CAAP,GAAW6C,+BAAlB;;AACA,kBAAI/U,KAAK,GAAGoV,aAAR,IAAyB,CAAC,KAAKrG,gBAA/B,IAAmD,CAAC,KAAKjB,cAA7D,EAA6E;AACzEzP,oBAAI,GAAG4G,MAAM,CAACiN,CAAP,GAAYkD,aAAa,GAAG,CAAnC;AACH;AACJ;;AACD,mBAAO;AAAEhX,iBAAG,EAAEA,GAAP;AAAYC,kBAAI,EAAEA,IAAlB;AAAwB4D,oBAAM,EAAEA,MAAhC;AAAwCG,mBAAK,EAAEA,KAA/C;AAAsDpC,mBAAK,EAALA,KAAtD;AAA6DF,oBAAM,EAANA;AAA7D,aAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;;iBACI,+BAAsBmF,MAAtB,EAA8BwL,QAA9B,EAAwC;AACpC,gBAAMC,eAAe,GAAG,KAAKC,yBAAL,CAA+B1L,MAA/B,EAAuCwL,QAAvC,CAAxB,CADoC,CAEpC;AACA;;;AACA,gBAAI,CAAC,KAAK1B,gBAAN,IAA0B,CAAC,KAAKjB,cAApC,EAAoD;AAChD4C,6BAAe,CAAC5Q,MAAhB,GAAyBwB,IAAI,CAAC0T,GAAL,CAAStE,eAAe,CAAC5Q,MAAzB,EAAiC,KAAK6N,oBAAL,CAA0B7N,MAA3D,CAAzB;AACA4Q,6BAAe,CAAC1Q,KAAhB,GAAwBsB,IAAI,CAAC0T,GAAL,CAAStE,eAAe,CAAC1Q,KAAzB,EAAgC,KAAK2N,oBAAL,CAA0B3N,KAA1D,CAAxB;AACH;;AACD,gBAAMqV,MAAM,GAAG,EAAf;;AACA,gBAAI,KAAKC,iBAAL,EAAJ,EAA8B;AAC1BD,oBAAM,CAACjX,GAAP,GAAaiX,MAAM,CAAChX,IAAP,GAAc,GAA3B;AACAgX,oBAAM,CAACpT,MAAP,GAAgBoT,MAAM,CAACjT,KAAP,GAAeiT,MAAM,CAAClJ,SAAP,GAAmBkJ,MAAM,CAACnJ,QAAP,GAAkB,EAApE;AACAmJ,oBAAM,CAACrV,KAAP,GAAeqV,MAAM,CAACvV,MAAP,GAAgB,MAA/B;AACH,aAJD,MAKK;AACD,kBAAMqM,SAAS,GAAG,KAAKzL,WAAL,CAAiB+S,SAAjB,GAA6BtH,SAA/C;;AACA,kBAAMD,QAAQ,GAAG,KAAKxL,WAAL,CAAiB+S,SAAjB,GAA6BvH,QAA9C;;AACAmJ,oBAAM,CAACvV,MAAP,GAAgB,kFAAoB4Q,eAAe,CAAC5Q,MAApC,CAAhB;AACAuV,oBAAM,CAACjX,GAAP,GAAa,kFAAoBsS,eAAe,CAACtS,GAApC,CAAb;AACAiX,oBAAM,CAACpT,MAAP,GAAgB,kFAAoByO,eAAe,CAACzO,MAApC,CAAhB;AACAoT,oBAAM,CAACrV,KAAP,GAAe,kFAAoB0Q,eAAe,CAAC1Q,KAApC,CAAf;AACAqV,oBAAM,CAAChX,IAAP,GAAc,kFAAoBqS,eAAe,CAACrS,IAApC,CAAd;AACAgX,oBAAM,CAACjT,KAAP,GAAe,kFAAoBsO,eAAe,CAACtO,KAApC,CAAf,CARC,CASD;;AACA,kBAAIqO,QAAQ,CAAClL,QAAT,KAAsB,QAA1B,EAAoC;AAChC8P,sBAAM,CAACjE,UAAP,GAAoB,QAApB;AACH,eAFD,MAGK;AACDiE,sBAAM,CAACjE,UAAP,GAAoBX,QAAQ,CAAClL,QAAT,KAAsB,KAAtB,GAA8B,UAA9B,GAA2C,YAA/D;AACH;;AACD,kBAAIkL,QAAQ,CAACjL,QAAT,KAAsB,QAA1B,EAAoC;AAChC6P,sBAAM,CAAChE,cAAP,GAAwB,QAAxB;AACH,eAFD,MAGK;AACDgE,sBAAM,CAAChE,cAAP,GAAwBZ,QAAQ,CAACjL,QAAT,KAAsB,QAAtB,GAAiC,UAAjC,GAA8C,YAAtE;AACH;;AACD,kBAAI2G,SAAJ,EAAe;AACXkJ,sBAAM,CAAClJ,SAAP,GAAmB,kFAAoBA,SAApB,CAAnB;AACH;;AACD,kBAAID,QAAJ,EAAc;AACVmJ,sBAAM,CAACnJ,QAAP,GAAkB,kFAAoBA,QAApB,CAAlB;AACH;AACJ;;AACD,iBAAKyB,oBAAL,GAA4B+C,eAA5B;AACAS,wBAAY,CAAC,KAAKtC,YAAL,CAAkBhQ,KAAnB,EAA0BwW,MAA1B,CAAZ;AACH;AACD;;;;iBACA,mCAA0B;AACtBlE,wBAAY,CAAC,KAAKtC,YAAL,CAAkBhQ,KAAnB,EAA0B;AAClCT,iBAAG,EAAE,GAD6B;AAElCC,kBAAI,EAAE,GAF4B;AAGlC+D,mBAAK,EAAE,GAH2B;AAIlCH,oBAAM,EAAE,GAJ0B;AAKlCnC,oBAAM,EAAE,EAL0B;AAMlCE,mBAAK,EAAE,EAN2B;AAOlCoR,wBAAU,EAAE,EAPsB;AAQlCC,4BAAc,EAAE;AARkB,aAA1B,CAAZ;AAUH;AACD;;;;iBACA,sCAA6B;AACzBF,wBAAY,CAAC,KAAK9H,KAAL,CAAWxK,KAAZ,EAAmB;AAC3BT,iBAAG,EAAE,EADsB;AAE3BC,kBAAI,EAAE,EAFqB;AAG3B4D,oBAAM,EAAE,EAHmB;AAI3BG,mBAAK,EAAE,EAJoB;AAK3BqO,sBAAQ,EAAE,EALiB;AAM3B8E,uBAAS,EAAE;AANgB,aAAnB,CAAZ;AAQH;AACD;;;;iBACA,kCAAyBvF,WAAzB,EAAsCS,QAAtC,EAAgD;AAC5C,gBAAM4E,MAAM,GAAG,EAAf;;AACA,gBAAMG,gBAAgB,GAAG,KAAKF,iBAAL,EAAzB;;AACA,gBAAMG,qBAAqB,GAAG,KAAK1H,sBAAnC;;AACA,gBAAMxK,MAAM,GAAG,KAAK7C,WAAL,CAAiB+S,SAAjB,EAAf;;AACA,gBAAI+B,gBAAJ,EAAsB;AAClB,kBAAMnU,cAAc,GAAG,KAAKpD,cAAL,CAAoBW,yBAApB,EAAvB;;AACAuS,0BAAY,CAACkE,MAAD,EAAS,KAAKK,iBAAL,CAAuBjF,QAAvB,EAAiCT,WAAjC,EAA8C3O,cAA9C,CAAT,CAAZ;AACA8P,0BAAY,CAACkE,MAAD,EAAS,KAAKM,iBAAL,CAAuBlF,QAAvB,EAAiCT,WAAjC,EAA8C3O,cAA9C,CAAT,CAAZ;AACH,aAJD,MAKK;AACDgU,oBAAM,CAAC5E,QAAP,GAAkB,QAAlB;AACH,aAZ2C,CAa5C;AACA;AACA;AACA;AACA;;;AACA,gBAAImF,eAAe,GAAG,EAAtB;;AACA,gBAAIzQ,OAAO,GAAG,KAAKyN,UAAL,CAAgBnC,QAAhB,EAA0B,GAA1B,CAAd;;AACA,gBAAIrL,OAAO,GAAG,KAAKwN,UAAL,CAAgBnC,QAAhB,EAA0B,GAA1B,CAAd;;AACA,gBAAItL,OAAJ,EAAa;AACTyQ,6BAAe,yBAAkBzQ,OAAlB,SAAf;AACH;;AACD,gBAAIC,OAAJ,EAAa;AACTwQ,6BAAe,yBAAkBxQ,OAAlB,QAAf;AACH;;AACDiQ,kBAAM,CAACE,SAAP,GAAmBK,eAAe,CAACC,IAAhB,EAAnB,CA3B4C,CA4B5C;AACA;AACA;AACA;AACA;;AACA,gBAAItS,MAAM,CAAC4I,SAAX,EAAsB;AAClB,kBAAIqJ,gBAAJ,EAAsB;AAClBH,sBAAM,CAAClJ,SAAP,GAAmB,kFAAoB5I,MAAM,CAAC4I,SAA3B,CAAnB;AACH,eAFD,MAGK,IAAIsJ,qBAAJ,EAA2B;AAC5BJ,sBAAM,CAAClJ,SAAP,GAAmB,EAAnB;AACH;AACJ;;AACD,gBAAI5I,MAAM,CAAC2I,QAAX,EAAqB;AACjB,kBAAIsJ,gBAAJ,EAAsB;AAClBH,sBAAM,CAACnJ,QAAP,GAAkB,kFAAoB3I,MAAM,CAAC2I,QAA3B,CAAlB;AACH,eAFD,MAGK,IAAIuJ,qBAAJ,EAA2B;AAC5BJ,sBAAM,CAACnJ,QAAP,GAAkB,EAAlB;AACH;AACJ;;AACDiF,wBAAY,CAAC,KAAK9H,KAAL,CAAWxK,KAAZ,EAAmBwW,MAAnB,CAAZ;AACH;AACD;;;;iBACA,2BAAkB5E,QAAlB,EAA4BT,WAA5B,EAAyC3O,cAAzC,EAAyD;AACrD;AACA;AACA,gBAAIgU,MAAM,GAAG;AAAEjX,iBAAG,EAAE,EAAP;AAAW6D,oBAAM,EAAE;AAAnB,aAAb;;AACA,gBAAIiO,YAAY,GAAG,KAAKC,gBAAL,CAAsBH,WAAtB,EAAmC,KAAKN,YAAxC,EAAsDe,QAAtD,CAAnB;;AACA,gBAAI,KAAK7C,SAAT,EAAoB;AAChBsC,0BAAY,GAAG,KAAK4F,oBAAL,CAA0B5F,YAA1B,EAAwC,KAAKR,YAA7C,EAA2DrO,cAA3D,CAAf;AACH;;AACD,gBAAI0U,qBAAqB,GAAG,KAAKrI,iBAAL,CAAuBsI,mBAAvB,GAA6C9S,qBAA7C,GAAqE9E,GAAjG,CARqD,CASrD;AACA;AACA;AACA;;;AACA8R,wBAAY,CAACoC,CAAb,IAAkByD,qBAAlB,CAbqD,CAcrD;AACA;;AACA,gBAAItF,QAAQ,CAACjL,QAAT,KAAsB,QAA1B,EAAoC;AAChC;AACA;AACA,kBAAMyQ,cAAc,GAAG,KAAK1X,SAAL,CAAeG,eAAf,CAA+BwX,YAAtD;AACAb,oBAAM,CAACpT,MAAP,aAAmBgU,cAAc,IAAI/F,YAAY,CAACoC,CAAb,GAAiB,KAAK5C,YAAL,CAAkB5P,MAAvC,CAAjC;AACH,aALD,MAMK;AACDuV,oBAAM,CAACjX,GAAP,GAAa,kFAAoB8R,YAAY,CAACoC,CAAjC,CAAb;AACH;;AACD,mBAAO+C,MAAP;AACH;AACD;;;;iBACA,2BAAkB5E,QAAlB,EAA4BT,WAA5B,EAAyC3O,cAAzC,EAAyD;AACrD;AACA;AACA,gBAAIgU,MAAM,GAAG;AAAEhX,kBAAI,EAAE,EAAR;AAAY+D,mBAAK,EAAE;AAAnB,aAAb;;AACA,gBAAI8N,YAAY,GAAG,KAAKC,gBAAL,CAAsBH,WAAtB,EAAmC,KAAKN,YAAxC,EAAsDe,QAAtD,CAAnB;;AACA,gBAAI,KAAK7C,SAAT,EAAoB;AAChBsC,0BAAY,GAAG,KAAK4F,oBAAL,CAA0B5F,YAA1B,EAAwC,KAAKR,YAA7C,EAA2DrO,cAA3D,CAAf;AACH,aAPoD,CAQrD;AACA;AACA;AACA;;;AACA,gBAAI8U,uBAAJ;;AACA,gBAAI,KAAK/D,MAAL,EAAJ,EAAmB;AACf+D,qCAAuB,GAAG1F,QAAQ,CAAClL,QAAT,KAAsB,KAAtB,GAA8B,MAA9B,GAAuC,OAAjE;AACH,aAFD,MAGK;AACD4Q,qCAAuB,GAAG1F,QAAQ,CAAClL,QAAT,KAAsB,KAAtB,GAA8B,OAA9B,GAAwC,MAAlE;AACH,aAlBoD,CAmBrD;AACA;;;AACA,gBAAI4Q,uBAAuB,KAAK,OAAhC,EAAyC;AACrC,kBAAMC,aAAa,GAAG,KAAK7X,SAAL,CAAeG,eAAf,CAA+B2X,WAArD;AACAhB,oBAAM,CAACjT,KAAP,aAAkBgU,aAAa,IAAIlG,YAAY,CAACgC,CAAb,GAAiB,KAAKxC,YAAL,CAAkB1P,KAAvC,CAA/B;AACH,aAHD,MAIK;AACDqV,oBAAM,CAAChX,IAAP,GAAc,kFAAoB6R,YAAY,CAACgC,CAAjC,CAAd;AACH;;AACD,mBAAOmD,MAAP;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,gCAAuB;AACnB;AACA,gBAAMiB,YAAY,GAAG,KAAK7G,cAAL,EAArB;;AACA,gBAAM8G,aAAa,GAAG,KAAKlN,KAAL,CAAWnG,qBAAX,EAAtB,CAHmB,CAInB;AACA;AACA;;;AACA,gBAAMsT,qBAAqB,GAAG,KAAKtI,YAAL,CAAkBuI,GAAlB,CAAsB,UAAAC,UAAU,EAAI;AAC9D,qBAAOA,UAAU,CAACC,aAAX,GAA2BC,aAA3B,CAAyC1T,qBAAzC,EAAP;AACH,aAF6B,CAA9B;;AAGA,mBAAO;AACH2T,6BAAe,EAAEvU,2BAA2B,CAACgU,YAAD,EAAeE,qBAAf,CADzC;AAEHM,iCAAmB,EAAEnV,4BAA4B,CAAC2U,YAAD,EAAeE,qBAAf,CAF9C;AAGHO,8BAAgB,EAAEzU,2BAA2B,CAACiU,aAAD,EAAgBC,qBAAhB,CAH1C;AAIHQ,kCAAoB,EAAErV,4BAA4B,CAAC4U,aAAD,EAAgBC,qBAAhB;AAJ/C,aAAP;AAMH;AACD;;;;iBACA,4BAAmBjQ,MAAnB,EAAyC;AAAA,8CAAX0Q,SAAW;AAAXA,uBAAW;AAAA;;AACrC,mBAAOA,SAAS,CAACC,MAAV,CAAiB,UAACC,YAAD,EAAeC,eAAf,EAAmC;AACvD,qBAAOD,YAAY,GAAG7V,IAAI,CAACwS,GAAL,CAASsD,eAAT,EAA0B,CAA1B,CAAtB;AACH,aAFM,EAEJ7Q,MAFI,CAAP;AAGH;AACD;;;;iBACA,oCAA2B;AACvB;AACA;AACA;AACA;AACA;AACA,gBAAMvG,KAAK,GAAG,KAAKzB,SAAL,CAAeG,eAAf,CAA+B2X,WAA7C;AACA,gBAAMvW,MAAM,GAAG,KAAKvB,SAAL,CAAeG,eAAf,CAA+BwX,YAA9C;;AACA,gBAAM7U,cAAc,GAAG,KAAKpD,cAAL,CAAoBW,yBAApB,EAAvB;;AACA,mBAAO;AACHR,iBAAG,EAAEiD,cAAc,CAACjD,GAAf,GAAqB,KAAK6P,eAD5B;AAEH5P,kBAAI,EAAEgD,cAAc,CAAChD,IAAf,GAAsB,KAAK4P,eAF9B;AAGH7L,mBAAK,EAAEf,cAAc,CAAChD,IAAf,GAAsB2B,KAAtB,GAA8B,KAAKiO,eAHvC;AAIHhM,oBAAM,EAAEZ,cAAc,CAACjD,GAAf,GAAqB0B,MAArB,GAA8B,KAAKmO,eAJxC;AAKHjO,mBAAK,EAAEA,KAAK,GAAI,IAAI,KAAKiO,eALtB;AAMHnO,oBAAM,EAAEA,MAAM,GAAI,IAAI,KAAKmO;AANxB,aAAP;AAQH;AACD;;;;iBACA,kBAAS;AACL,mBAAO,KAAKvN,WAAL,CAAiBqL,YAAjB,OAAoC,KAA3C;AACH;AACD;;;;iBACA,6BAAoB;AAChB,mBAAO,CAAC,KAAKgC,sBAAN,IAAgC,KAAKH,SAA5C;AACH;AACD;;;;iBACA,oBAAW6C,QAAX,EAAqB4G,IAArB,EAA2B;AACvB,gBAAIA,IAAI,KAAK,GAAb,EAAkB;AACd;AACA;AACA,qBAAO5G,QAAQ,CAACtL,OAAT,IAAoB,IAApB,GAA2B,KAAKmJ,QAAhC,GAA2CmC,QAAQ,CAACtL,OAA3D;AACH;;AACD,mBAAOsL,QAAQ,CAACrL,OAAT,IAAoB,IAApB,GAA2B,KAAKmJ,QAAhC,GAA2CkC,QAAQ,CAACrL,OAA3D;AACH;AACD;;;;iBACA,8BAAqB;AACjB,gBAAI,OAAOrE,SAAP,KAAqB,WAArB,IAAoCA,SAAxC,EAAmD;AAC/C,kBAAI,CAAC,KAAKoN,mBAAL,CAAyB5H,MAA9B,EAAsC;AAClC,sBAAMrG,KAAK,CAAC,uEAAD,CAAX;AACH,eAH8C,CAI/C;AACA;;;AACA,mBAAKiO,mBAAL,CAAyBjB,OAAzB,CAAiC,UAAAoK,IAAI,EAAI;AACrCtR,0CAA0B,CAAC,SAAD,EAAYsR,IAAI,CAACjS,OAAjB,CAA1B;AACAQ,wCAAwB,CAAC,SAAD,EAAYyR,IAAI,CAAChS,OAAjB,CAAxB;AACAU,0CAA0B,CAAC,UAAD,EAAasR,IAAI,CAAC/R,QAAlB,CAA1B;AACAM,wCAAwB,CAAC,UAAD,EAAayR,IAAI,CAAC9R,QAAlB,CAAxB;AACH,eALD;AAMH;AACJ;AACD;;;;iBACA,0BAAiBwH,UAAjB,EAA6B;AAAA;;AACzB,gBAAI,KAAK3D,KAAT,EAAgB;AACZ,wFAAY2D,UAAZ,EAAwBE,OAAxB,CAAgC,UAAAC,QAAQ,EAAI;AACxC,oBAAIA,QAAQ,KAAK,EAAb,IAAmB,OAAI,CAACqB,oBAAL,CAA0BnI,OAA1B,CAAkC8G,QAAlC,MAAgD,CAAC,CAAxE,EAA2E;AACvE,yBAAI,CAACqB,oBAAL,CAA0BrI,IAA1B,CAA+BgH,QAA/B;;AACA,yBAAI,CAAC9D,KAAL,CAAWvK,SAAX,CAAqBC,GAArB,CAAyBoO,QAAzB;AACH;AACJ,eALD;AAMH;AACJ;AACD;;;;iBACA,8BAAqB;AAAA;;AACjB,gBAAI,KAAK9D,KAAT,EAAgB;AACZ,mBAAKmF,oBAAL,CAA0BtB,OAA1B,CAAkC,UAAAC,QAAQ,EAAI;AAC1C,uBAAI,CAAC9D,KAAL,CAAWvK,SAAX,CAAqBS,MAArB,CAA4B4N,QAA5B;AACH,eAFD;;AAGA,mBAAKqB,oBAAL,GAA4B,EAA5B;AACH;AACJ;AACD;;;;iBACA,0BAAiB;AACb,gBAAMvJ,MAAM,GAAG,KAAK6M,OAApB;;AACA,gBAAI7M,MAAM,YAAY,wDAAtB,EAAkC;AAC9B,qBAAOA,MAAM,CAAC2R,aAAP,CAAqB1T,qBAArB,EAAP;AACH,aAJY,CAKb;;;AACA,gBAAI+B,MAAM,YAAYsS,OAAtB,EAA+B;AAC3B,qBAAOtS,MAAM,CAAC/B,qBAAP,EAAP;AACH;;AACD,gBAAMlD,KAAK,GAAGiF,MAAM,CAACjF,KAAP,IAAgB,CAA9B;AACA,gBAAMF,MAAM,GAAGmF,MAAM,CAACnF,MAAP,IAAiB,CAAhC,CAVa,CAWb;;AACA,mBAAO;AACH1B,iBAAG,EAAE6G,MAAM,CAACqN,CADT;AAEHrQ,oBAAM,EAAEgD,MAAM,CAACqN,CAAP,GAAWxS,MAFhB;AAGHzB,kBAAI,EAAE4G,MAAM,CAACiN,CAHV;AAIH9P,mBAAK,EAAE6C,MAAM,CAACiN,CAAP,GAAWlS,KAJf;AAKHF,oBAAM,EAANA,MALG;AAMHE,mBAAK,EAALA;AANG,aAAP;AAQH;;;;;AAEL;;;AACA,eAASmR,YAAT,CAAsBqG,WAAtB,EAAmCC,MAAnC,EAA2C;AACvC,aAAK,IAAI1S,GAAT,IAAgB0S,MAAhB,EAAwB;AACpB,cAAIA,MAAM,CAACC,cAAP,CAAsB3S,GAAtB,CAAJ,EAAgC;AAC5ByS,uBAAW,CAACzS,GAAD,CAAX,GAAmB0S,MAAM,CAAC1S,GAAD,CAAzB;AACH;AACJ;;AACD,eAAOyS,WAAP;AACH;AACD;AACA;AACA;AACA;;;AACA,eAAShE,aAAT,CAAuBmE,KAAvB,EAA8B;AAC1B,YAAI,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,IAAI,IAA1C,EAAgD;AAC5C,6BAAuBA,KAAK,CAACC,KAAN,CAAYrK,cAAZ,CAAvB;AAAA;AAAA,cAAOxH,KAAP;AAAA,cAAc8R,KAAd;;AACA,iBAAQ,CAACA,KAAD,IAAUA,KAAK,KAAK,IAArB,GAA6BC,UAAU,CAAC/R,KAAD,CAAvC,GAAiD,IAAxD;AACH;;AACD,eAAO4R,KAAK,IAAI,IAAhB;AACH;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAShF,4BAAT,CAAsCoF,UAAtC,EAAkD;AAC9C,eAAO;AACH3Z,aAAG,EAAEkD,IAAI,CAAC0W,KAAL,CAAWD,UAAU,CAAC3Z,GAAtB,CADF;AAEHgE,eAAK,EAAEd,IAAI,CAAC0W,KAAL,CAAWD,UAAU,CAAC3V,KAAtB,CAFJ;AAGHH,gBAAM,EAAEX,IAAI,CAAC0W,KAAL,CAAWD,UAAU,CAAC9V,MAAtB,CAHL;AAIH5D,cAAI,EAAEiD,IAAI,CAAC0W,KAAL,CAAWD,UAAU,CAAC1Z,IAAtB,CAJH;AAKH2B,eAAK,EAAEsB,IAAI,CAAC0W,KAAL,CAAWD,UAAU,CAAC/X,KAAtB,CALJ;AAMHF,gBAAM,EAAEwB,IAAI,CAAC0W,KAAL,CAAWD,UAAU,CAACjY,MAAtB;AANL,SAAP;AAQH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;UACMmY,yB;AACF,2CAAYC,SAAZ,EAAuBC,UAAvB,EAAmC1K,WAAnC,EAAgD2K,aAAhD,EAA+Dla,QAA/D,EAAyEma,QAAzE,EAAmFC,gBAAnF,EAAqG;AAAA;;AACjG;AACA,eAAKnK,mBAAL,GAA2B,EAA3B,CAFiG,CAGjG;AACA;AACA;AACA;;AACA,eAAKjE,iBAAL,GAAyB,IAAIsD,iCAAJ,CAAsCC,WAAtC,EAAmD2K,aAAnD,EAAkEla,QAAlE,EAA4Ema,QAA5E,EAAsFC,gBAAtF,EACpBC,sBADoB,CACG,KADH,EAEpBC,QAFoB,CAEX,KAFW,EAGpBC,kBAHoB,CAGD,CAHC,CAAzB;AAIA,eAAKC,oBAAL,CAA0BR,SAA1B,EAAqCC,UAArC;AACA,eAAKQ,gBAAL,GAAwB,KAAKzO,iBAAL,CAAuBuE,eAA/C;AACH;AACD;;;;;eACA,eAAgB;AACZ,mBAAO,KAAKN,mBAAZ;AACH;AACD;;;;iBACA,gBAAOrN,UAAP,EAAmB;AACf,iBAAKJ,WAAL,GAAmBI,UAAnB;;AACA,iBAAKoJ,iBAAL,CAAuBD,MAAvB,CAA8BnJ,UAA9B;;AACA,gBAAI,KAAK8X,UAAT,EAAqB;AACjB9X,wBAAU,CAAC+X,YAAX,CAAwB,KAAKD,UAA7B;AACA,mBAAKA,UAAL,GAAkB,IAAlB;AACH;AACJ;AACD;;;;iBACA,mBAAU;AACN,iBAAK1O,iBAAL,CAAuBe,OAAvB;AACH;AACD;;;;iBACA,kBAAS;AACL,iBAAKf,iBAAL,CAAuBrJ,MAAvB;AACH;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,iBAAQ;AACJ,iBAAKqJ,iBAAL,CAAuBsB,KAAvB;AACH;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,mCAA0B;AACtB,iBAAKtB,iBAAL,CAAuBgF,mBAAvB;AACH;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,kCAAyBqC,WAAzB,EAAsC;AAClC,iBAAKrH,iBAAL,CAAuB4O,wBAAvB,CAAgDvH,WAAhD;AACH;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,8BAAqB2G,SAArB,EAAgCC,UAAhC,EAA4ChT,OAA5C,EAAqDC,OAArD,EAA8D;AAC1D,gBAAMqL,QAAQ,GAAG,IAAIzL,sBAAJ,CAA2BkT,SAA3B,EAAsCC,UAAtC,EAAkDhT,OAAlD,EAA2DC,OAA3D,CAAjB;;AACA,iBAAK+I,mBAAL,CAAyBhI,IAAzB,CAA8BsK,QAA9B;;AACA,iBAAKvG,iBAAL,CAAuB6O,aAAvB,CAAqC,KAAK5K,mBAA1C;;AACA,mBAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,uBAAcvC,GAAd,EAAmB;AACf;AACA;AACA;AACA,gBAAI,KAAKlL,WAAT,EAAsB;AAClB,mBAAKA,WAAL,CAAiBmY,YAAjB,CAA8BjN,GAA9B;AACH,aAFD,MAGK;AACD,mBAAKgN,UAAL,GAAkBhN,GAAlB;AACH;;AACD,mBAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,qBAAYmG,MAAZ,EAAoB;AAChB,iBAAK7H,iBAAL,CAAuB8O,kBAAvB,CAA0CjH,MAA1C;;AACA,mBAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,qBAAYA,MAAZ,EAAoB;AAChB,iBAAK7H,iBAAL,CAAuB+O,kBAAvB,CAA0ClH,MAA1C;;AACA,mBAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;iBACI,4BAAmBF,QAAnB,EAA6B;AACzB,iBAAK3H,iBAAL,CAAuBgP,kBAAvB,CAA0CrH,QAA1C;;AACA,mBAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,uBAAcL,SAAd,EAAyB;AACrB,iBAAKrD,mBAAL,GAA2BqD,SAAS,CAAC7J,KAAV,EAA3B;;AACA,iBAAKuC,iBAAL,CAAuB6O,aAAvB,CAAqC,KAAK5K,mBAA1C;;AACA,mBAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,mBAAUlJ,MAAV,EAAkB;AACd,iBAAKiF,iBAAL,CAAuBwE,SAAvB,CAAiCzJ,MAAjC;;AACA,mBAAO,IAAP;AACH;;;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA,UAAMkU,YAAY,GAAG,4BAArB;AACA;AACA;AACA;AACA;AACA;AACA;;UACMC,sB;AACF,0CAAc;AAAA;;AACV,eAAKC,YAAL,GAAoB,QAApB;AACA,eAAKC,UAAL,GAAkB,EAAlB;AACA,eAAKC,aAAL,GAAqB,EAArB;AACA,eAAKC,WAAL,GAAmB,EAAnB;AACA,eAAKC,YAAL,GAAoB,EAApB;AACA,eAAKC,WAAL,GAAmB,EAAnB;AACA,eAAKC,eAAL,GAAuB,EAAvB;AACA,eAAKC,MAAL,GAAc,EAAd;AACA,eAAKC,OAAL,GAAe,EAAf;AACH;;;;iBACD,gBAAO/Y,UAAP,EAAmB;AACf,gBAAMyC,MAAM,GAAGzC,UAAU,CAAC2S,SAAX,EAAf;AACA,iBAAK/S,WAAL,GAAmBI,UAAnB;;AACA,gBAAI,KAAK8Y,MAAL,IAAe,CAACrW,MAAM,CAACvD,KAA3B,EAAkC;AAC9Bc,wBAAU,CAACgZ,UAAX,CAAsB;AAAE9Z,qBAAK,EAAE,KAAK4Z;AAAd,eAAtB;AACH;;AACD,gBAAI,KAAKC,OAAL,IAAgB,CAACtW,MAAM,CAACzD,MAA5B,EAAoC;AAChCgB,wBAAU,CAACgZ,UAAX,CAAsB;AAAEha,sBAAM,EAAE,KAAK+Z;AAAf,eAAtB;AACH;;AACD/Y,sBAAU,CAAC8N,WAAX,CAAuB9P,SAAvB,CAAiCC,GAAjC,CAAqCoa,YAArC;AACA,iBAAKrK,WAAL,GAAmB,KAAnB;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,eAAgB;AAAA,gBAAZ/I,KAAY,uEAAJ,EAAI;AACZ,iBAAKwT,aAAL,GAAqB,EAArB;AACA,iBAAKD,UAAL,GAAkBvT,KAAlB;AACA,iBAAK2T,WAAL,GAAmB,YAAnB;AACA,mBAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,gBAAiB;AAAA,gBAAZ3T,KAAY,uEAAJ,EAAI;AACb,iBAAK0T,YAAL,GAAoB,EAApB;AACA,iBAAKD,WAAL,GAAmBzT,KAAnB;AACA,iBAAK4T,eAAL,GAAuB,YAAvB;AACA,mBAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,kBAAmB;AAAA,gBAAZ5T,KAAY,uEAAJ,EAAI;AACf,iBAAKuT,UAAL,GAAkB,EAAlB;AACA,iBAAKC,aAAL,GAAqBxT,KAArB;AACA,iBAAK2T,WAAL,GAAmB,UAAnB;AACA,mBAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,iBAAkB;AAAA,gBAAZ3T,KAAY,uEAAJ,EAAI;AACd,iBAAKyT,WAAL,GAAmB,EAAnB;AACA,iBAAKC,YAAL,GAAoB1T,KAApB;AACA,iBAAK4T,eAAL,GAAuB,UAAvB;AACA,mBAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;iBACI,iBAAkB;AAAA,gBAAZ5T,KAAY,uEAAJ,EAAI;;AACd,gBAAI,KAAKrF,WAAT,EAAsB;AAClB,mBAAKA,WAAL,CAAiBoZ,UAAjB,CAA4B;AAAE9Z,qBAAK,EAAE+F;AAAT,eAA5B;AACH,aAFD,MAGK;AACD,mBAAK6T,MAAL,GAAc7T,KAAd;AACH;;AACD,mBAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;iBACI,kBAAmB;AAAA,gBAAZA,KAAY,uEAAJ,EAAI;;AACf,gBAAI,KAAKrF,WAAT,EAAsB;AAClB,mBAAKA,WAAL,CAAiBoZ,UAAjB,CAA4B;AAAEha,sBAAM,EAAEiG;AAAV,eAA5B;AACH,aAFD,MAGK;AACD,mBAAK8T,OAAL,GAAe9T,KAAf;AACH;;AACD,mBAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;iBACI,8BAAgC;AAAA,gBAAbgM,MAAa,uEAAJ,EAAI;AAC5B,iBAAK1T,IAAL,CAAU0T,MAAV;AACA,iBAAK4H,eAAL,GAAuB,QAAvB;AACA,mBAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;iBACI,4BAA8B;AAAA,gBAAb5H,MAAa,uEAAJ,EAAI;AAC1B,iBAAK3T,GAAL,CAAS2T,MAAT;AACA,iBAAK2H,WAAL,GAAmB,QAAnB;AACA,mBAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,iBAAQ;AACJ;AACA;AACA;AACA,gBAAI,CAAC,KAAKhZ,WAAN,IAAqB,CAAC,KAAKA,WAAL,CAAiBC,WAAjB,EAA1B,EAA0D;AACtD;AACH;;AACD,gBAAM0U,MAAM,GAAG,KAAK3U,WAAL,CAAiBuC,cAAjB,CAAgCpE,KAA/C;AACA,gBAAMkb,YAAY,GAAG,KAAKrZ,WAAL,CAAiBkO,WAAjB,CAA6B/P,KAAlD;;AACA,gBAAM0E,MAAM,GAAG,KAAK7C,WAAL,CAAiB+S,SAAjB,EAAf;;AACA,gBAAQzT,KAAR,GAA+CuD,MAA/C,CAAQvD,KAAR;AAAA,gBAAeF,MAAf,GAA+CyD,MAA/C,CAAezD,MAAf;AAAA,gBAAuBoM,QAAvB,GAA+C3I,MAA/C,CAAuB2I,QAAvB;AAAA,gBAAiCC,SAAjC,GAA+C5I,MAA/C,CAAiC4I,SAAjC;AACA,gBAAM6N,yBAAyB,GAAG,CAACha,KAAK,KAAK,MAAV,IAAoBA,KAAK,KAAK,OAA/B,MAC7B,CAACkM,QAAD,IAAaA,QAAQ,KAAK,MAA1B,IAAoCA,QAAQ,KAAK,OADpB,CAAlC;AAEA,gBAAM+N,uBAAuB,GAAG,CAACna,MAAM,KAAK,MAAX,IAAqBA,MAAM,KAAK,OAAjC,MAC3B,CAACqM,SAAD,IAAcA,SAAS,KAAK,MAA5B,IAAsCA,SAAS,KAAK,OADzB,CAAhC;AAEAkJ,kBAAM,CAAC5E,QAAP,GAAkB,KAAK4I,YAAvB;AACAhE,kBAAM,CAAC6E,UAAP,GAAoBF,yBAAyB,GAAG,GAAH,GAAS,KAAKR,WAA3D;AACAnE,kBAAM,CAAC8E,SAAP,GAAmBF,uBAAuB,GAAG,GAAH,GAAS,KAAKX,UAAxD;AACAjE,kBAAM,CAAC+E,YAAP,GAAsB,KAAKb,aAA3B;AACAlE,kBAAM,CAACgF,WAAP,GAAqB,KAAKZ,YAA1B;;AACA,gBAAIO,yBAAJ,EAA+B;AAC3BD,0BAAY,CAAC1I,cAAb,GAA8B,YAA9B;AACH,aAFD,MAGK,IAAI,KAAKsI,eAAL,KAAyB,QAA7B,EAAuC;AACxCI,0BAAY,CAAC1I,cAAb,GAA8B,QAA9B;AACH,aAFI,MAGA,IAAI,KAAK3Q,WAAL,CAAiB+S,SAAjB,GAA6B5H,SAA7B,KAA2C,KAA/C,EAAsD;AACvD;AACA;AACA;AACA;AACA,kBAAI,KAAK8N,eAAL,KAAyB,YAA7B,EAA2C;AACvCI,4BAAY,CAAC1I,cAAb,GAA8B,UAA9B;AACH,eAFD,MAGK,IAAI,KAAKsI,eAAL,KAAyB,UAA7B,EAAyC;AAC1CI,4BAAY,CAAC1I,cAAb,GAA8B,YAA9B;AACH;AACJ,aAXI,MAYA;AACD0I,0BAAY,CAAC1I,cAAb,GAA8B,KAAKsI,eAAnC;AACH;;AACDI,wBAAY,CAAC3I,UAAb,GAA0B6I,uBAAuB,GAAG,YAAH,GAAkB,KAAKP,WAAxE;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,mBAAU;AACN,gBAAI,KAAK5K,WAAL,IAAoB,CAAC,KAAKpO,WAA9B,EAA2C;AACvC;AACH;;AACD,gBAAM2U,MAAM,GAAG,KAAK3U,WAAL,CAAiBuC,cAAjB,CAAgCpE,KAA/C;AACA,gBAAMyb,MAAM,GAAG,KAAK5Z,WAAL,CAAiBkO,WAAhC;AACA,gBAAMmL,YAAY,GAAGO,MAAM,CAACzb,KAA5B;AACAyb,kBAAM,CAACxb,SAAP,CAAiBS,MAAjB,CAAwB4Z,YAAxB;AACAY,wBAAY,CAAC1I,cAAb,GAA8B0I,YAAY,CAAC3I,UAAb,GAA0BiE,MAAM,CAAC8E,SAAP,GACpD9E,MAAM,CAAC+E,YAAP,GAAsB/E,MAAM,CAAC6E,UAAP,GAAoB7E,MAAM,CAACgF,WAAP,GAAqBhF,MAAM,CAAC5E,QAAP,GAAkB,EADrF;AAEA,iBAAK/P,WAAL,GAAmB,IAAnB;AACA,iBAAKoO,WAAL,GAAmB,IAAnB;AACH;;;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;UACMyL,sB;AACF,wCAAYtc,cAAZ,EAA4BM,SAA5B,EAAuC+I,SAAvC,EAAkDoG,iBAAlD,EAAqE;AAAA;;AACjE,eAAKzP,cAAL,GAAsBA,cAAtB;AACA,eAAKM,SAAL,GAAiBA,SAAjB;AACA,eAAK+I,SAAL,GAAiBA,SAAjB;AACA,eAAKoG,iBAAL,GAAyBA,iBAAzB;AACH;AACD;AACJ;AACA;;;;;iBACI,kBAAS;AACL,mBAAO,IAAI0L,sBAAJ,EAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACI,qBAAYoB,UAAZ,EAAwBtC,SAAxB,EAAmCC,UAAnC,EAA+C;AAC3C,mBAAO,IAAIF,yBAAJ,CAA8BC,SAA9B,EAAyCC,UAAzC,EAAqDqC,UAArD,EAAiE,KAAKvc,cAAtE,EAAsF,KAAKM,SAA3F,EAAsG,KAAK+I,SAA3G,EAAsH,KAAKoG,iBAA3H,CAAP;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,6BAAoBzI,MAApB,EAA4B;AACxB,mBAAO,IAAIuI,iCAAJ,CAAsCvI,MAAtC,EAA8C,KAAKhH,cAAnD,EAAmE,KAAKM,SAAxE,EAAmF,KAAK+I,SAAxF,EAAmG,KAAKoG,iBAAxG,CAAP;AACH;;;;;;AAEL6M,4BAAsB,CAAC7W,IAAvB,GAA8B,SAAS+W,8BAAT,CAAwC7W,CAAxC,EAA2C;AAAE,eAAO,KAAKA,CAAC,IAAI2W,sBAAV,EAAkC,uDAAgB,oEAAhB,CAAlC,EAAyE,uDAAgB,wDAAhB,CAAzE,EAAoG,uDAAgB,8DAAhB,CAApG,EAAsI,uDAAgBnS,gBAAhB,CAAtI,CAAP;AAAkL,OAA7P;;AACAmS,4BAAsB,CAAC1W,KAAvB,GAA+B,yEAAmB;AAAEC,eAAO,EAAE,SAAS2W,8BAAT,GAA0C;AAAE,iBAAO,IAAIF,sBAAJ,CAA2B,+DAAS,oEAAT,CAA3B,EAAoD,+DAAS,wDAAT,CAApD,EAAwE,+DAAS,8DAAT,CAAxE,EAA4F,+DAASnS,gBAAT,CAA5F,CAAP;AAAiI,SAAxL;AAA0LrE,aAAK,EAAEwW,sBAAjM;AAAyNvW,kBAAU,EAAE;AAArO,OAAnB,CAA/B;;AACAuW,4BAAsB,CAACtW,cAAvB,GAAwC;AAAA,eAAM,CAC1C;AAAEC,cAAI,EAAE;AAAR,SAD0C,EAE1C;AAAEA,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAAEF,gBAAI,EAAE,oDAAR;AAAgBG,gBAAI,EAAE,CAAC,wDAAD;AAAtB,WAAD;AAA/B,SAF0C,EAG1C;AAAEH,cAAI,EAAE;AAAR,SAH0C,EAI1C;AAAEA,cAAI,EAAEkE;AAAR,SAJ0C,CAAN;AAAA,OAAxC;AAMA;;;AAAc,OAAC,YAAY;AAAE,wEAAyBmS,sBAAzB,EAAiD,CAAC;AACvErW,cAAI,EAAE,wDADiE;AAEvEG,cAAI,EAAE,CAAC;AAAEL,sBAAU,EAAE;AAAd,WAAD;AAFiE,SAAD,CAAjD,EAGrB,YAAY;AAAE,iBAAO,CAAC;AAAEE,gBAAI,EAAE;AAAR,WAAD,EAAiC;AAAEA,gBAAI,EAAEC,SAAR;AAAmBC,sBAAU,EAAE,CAAC;AAC9EF,kBAAI,EAAE,oDADwE;AAE9EG,kBAAI,EAAE,CAAC,wDAAD;AAFwE,aAAD;AAA/B,WAAjC,EAGX;AAAEH,gBAAI,EAAE;AAAR,WAHW,EAGgB;AAAEA,gBAAI,EAAEkE;AAAR,WAHhB,CAAP;AAGqD,SAN9C,EAMgD,IANhD;AAMwD,OANvE;AAQd;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA,UAAIsS,YAAY,GAAG,CAAnB,C,CACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;UACMC,O;AACF;AACA;AACAC,wBAFA,EAEkBlN,iBAFlB,EAEqCmN,yBAFrC,EAEgEC,gBAFhE,EAEkFxR,mBAFlF,EAEuGyR,SAFvG,EAEkH1a,OAFlH,EAE2H9B,SAF3H,EAEsIyc,eAFtI,EAEuJzR,SAFvJ,EAEkKC,uBAFlK,EAE2L;AAAA;;AACvL,eAAKoR,gBAAL,GAAwBA,gBAAxB;AACA,eAAKlN,iBAAL,GAAyBA,iBAAzB;AACA,eAAKmN,yBAAL,GAAiCA,yBAAjC;AACA,eAAKC,gBAAL,GAAwBA,gBAAxB;AACA,eAAKxR,mBAAL,GAA2BA,mBAA3B;AACA,eAAKyR,SAAL,GAAiBA,SAAjB;AACA,eAAK1a,OAAL,GAAeA,OAAf;AACA,eAAK9B,SAAL,GAAiBA,SAAjB;AACA,eAAKyc,eAAL,GAAuBA,eAAvB;AACA,eAAKzR,SAAL,GAAiBA,SAAjB;AACA,eAAKC,uBAAL,GAA+BA,uBAA/B;AACH;AACD;AACJ;AACA;AACA;AACA;;;;;iBACI,gBAAOjG,MAAP,EAAe;AACX,gBAAM0X,IAAI,GAAG,KAAKC,kBAAL,EAAb;;AACA,gBAAMC,IAAI,GAAG,KAAKC,kBAAL,CAAwBH,IAAxB,CAAb;;AACA,gBAAMI,YAAY,GAAG,KAAKC,mBAAL,CAAyBH,IAAzB,CAArB;;AACA,gBAAMI,aAAa,GAAG,IAAIjX,aAAJ,CAAkBf,MAAlB,CAAtB;AACAgY,yBAAa,CAAC1P,SAAd,GAA0B0P,aAAa,CAAC1P,SAAd,IAA2B,KAAKmP,eAAL,CAAqBjV,KAA1E;AACA,mBAAO,IAAImD,UAAJ,CAAemS,YAAf,EAA6BJ,IAA7B,EAAmCE,IAAnC,EAAyCI,aAAzC,EAAwD,KAAKlb,OAA7D,EAAsE,KAAKiJ,mBAA3E,EAAgG,KAAK/K,SAArG,EAAgH,KAAKgL,SAArH,EAAgI,KAAKC,uBAArI,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,oBAAW;AACP,mBAAO,KAAKsR,gBAAZ;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,4BAAmBG,IAAnB,EAAyB;AACrB,gBAAME,IAAI,GAAG,KAAK5c,SAAL,CAAeuK,aAAf,CAA6B,KAA7B,CAAb;;AACAqS,gBAAI,CAACK,EAAL,yBAAyBd,YAAY,EAArC;AACAS,gBAAI,CAACrc,SAAL,CAAeC,GAAf,CAAmB,kBAAnB;AACAkc,gBAAI,CAACjS,WAAL,CAAiBmS,IAAjB;AACA,mBAAOA,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,8BAAqB;AACjB,gBAAMF,IAAI,GAAG,KAAK1c,SAAL,CAAeuK,aAAf,CAA6B,KAA7B,CAAb;;AACA,iBAAK4E,iBAAL,CAAuBsI,mBAAvB,GAA6ChN,WAA7C,CAAyDiS,IAAzD;;AACA,mBAAOA,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,6BAAoBE,IAApB,EAA0B;AACtB;AACA;AACA,gBAAI,CAAC,KAAKM,OAAV,EAAmB;AACf,mBAAKA,OAAL,GAAe,KAAKV,SAAL,CAAeW,GAAf,CAAmB,4DAAnB,CAAf;AACH;;AACD,mBAAO,IAAI,mEAAJ,CAAoBP,IAApB,EAA0B,KAAKN,yBAA/B,EAA0D,KAAKY,OAA/D,EAAwE,KAAKV,SAA7E,EAAwF,KAAKxc,SAA7F,CAAP;AACH;;;;;;AAELoc,aAAO,CAACjX,IAAR,GAAe,SAASiY,eAAT,CAAyB/X,CAAzB,EAA4B;AAAE,eAAO,KAAKA,CAAC,IAAI+W,OAAV,EAAmB,uDAAgBvX,qBAAhB,CAAnB,EAA2D,uDAAgBgF,gBAAhB,CAA3D,EAA8F,uDAAgB,sEAAhB,CAA9F,EAAgJ,uDAAgBmS,sBAAhB,CAAhJ,EAAyL,uDAAgB9T,yBAAhB,CAAzL,EAAqO,uDAAgB,sDAAhB,CAArO,EAAuQ,uDAAgB,oDAAhB,CAAvQ,EAAuS,uDAAgB,wDAAhB,CAAvS,EAAkU,uDAAgB,gEAAhB,CAAlU,EAA0W,uDAAgB,wDAAhB,CAA1W,EAA4Y,uDAAgBY,6BAAhB,CAA5Y,CAAP;AAAqc,OAAlf;;AACAsT,aAAO,CAAC9W,KAAR,GAAgB,iEAA0B;AAAEE,aAAK,EAAE4W,OAAT;AAAkB7W,eAAO,EAAE6W,OAAO,CAACjX;AAAnC,OAA1B,CAAhB;;AACAiX,aAAO,CAAC1W,cAAR,GAAyB;AAAA,eAAM,CAC3B;AAAEC,cAAI,EAAEd;AAAR,SAD2B,EAE3B;AAAEc,cAAI,EAAEkE;AAAR,SAF2B,EAG3B;AAAElE,cAAI,EAAE;AAAR,SAH2B,EAI3B;AAAEA,cAAI,EAAEqW;AAAR,SAJ2B,EAK3B;AAAErW,cAAI,EAAEuC;AAAR,SAL2B,EAM3B;AAAEvC,cAAI,EAAE;AAAR,SAN2B,EAO3B;AAAEA,cAAI,EAAE;AAAR,SAP2B,EAQ3B;AAAEA,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAAEF,gBAAI,EAAE,oDAAR;AAAgBG,gBAAI,EAAE,CAAC,wDAAD;AAAtB,WAAD;AAA/B,SAR2B,EAS3B;AAAEH,cAAI,EAAE;AAAR,SAT2B,EAU3B;AAAEA,cAAI,EAAE;AAAR,SAV2B,EAW3B;AAAEA,cAAI,EAAEmD;AAAR,SAX2B,CAAN;AAAA,OAAzB;AAaA;;;AAAc,OAAC,YAAY;AAAE,wEAAyBsT,OAAzB,EAAkC,CAAC;AACxDzW,cAAI,EAAE;AADkD,SAAD,CAAlC,EAErB,YAAY;AAAE,iBAAO,CAAC;AAAEA,gBAAI,EAAEd;AAAR,WAAD,EAAkC;AAAEc,gBAAI,EAAEkE;AAAR,WAAlC,EAA8D;AAAElE,gBAAI,EAAE;AAAR,WAA9D,EAAyG;AAAEA,gBAAI,EAAEqW;AAAR,WAAzG,EAA2I;AAAErW,gBAAI,EAAEuC;AAAR,WAA3I,EAAgL;AAAEvC,gBAAI,EAAE;AAAR,WAAhL,EAA2M;AAAEA,gBAAI,EAAE;AAAR,WAA3M,EAAoO;AAAEA,gBAAI,EAAEC,SAAR;AAAmBC,sBAAU,EAAE,CAAC;AACjRF,kBAAI,EAAE,oDAD2Q;AAEjRG,kBAAI,EAAE,CAAC,wDAAD;AAF2Q,aAAD;AAA/B,WAApO,EAGX;AAAEH,gBAAI,EAAE;AAAR,WAHW,EAGsB;AAAEA,gBAAI,EAAE;AAAR,WAHtB,EAGiD;AAAEA,gBAAI,EAAEmD;AAAR,WAHjD,CAAP;AAGmG,SAL5F,EAK8F,IAL9F;AAKsG,OALrH;AAOd;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA,UAAMuU,mBAAmB,GAAG,CACxB;AACIvW,eAAO,EAAE,OADb;AAEIC,eAAO,EAAE,QAFb;AAGIC,gBAAQ,EAAE,OAHd;AAIIC,gBAAQ,EAAE;AAJd,OADwB,EAOxB;AACIH,eAAO,EAAE,OADb;AAEIC,eAAO,EAAE,KAFb;AAGIC,gBAAQ,EAAE,OAHd;AAIIC,gBAAQ,EAAE;AAJd,OAPwB,EAaxB;AACIH,eAAO,EAAE,KADb;AAEIC,eAAO,EAAE,KAFb;AAGIC,gBAAQ,EAAE,KAHd;AAIIC,gBAAQ,EAAE;AAJd,OAbwB,EAmBxB;AACIH,eAAO,EAAE,KADb;AAEIC,eAAO,EAAE,QAFb;AAGIC,gBAAQ,EAAE,KAHd;AAIIC,gBAAQ,EAAE;AAJd,OAnBwB,CAA5B;AA0BA;;AACA,UAAMqW,qCAAqC,GAAG,IAAI,4DAAJ,CAAmB,uCAAnB,CAA9C;AACA;AACA;AACA;AACA;;UACMC,gB,GACF;AACA;AACAtB,gBAFA,EAEY;AAAA;;AACR,aAAKA,UAAL,GAAkBA,UAAlB;AACH,O;;AAELsB,sBAAgB,CAACpY,IAAjB,GAAwB,SAASqY,wBAAT,CAAkCnY,CAAlC,EAAqC;AAAE,eAAO,KAAKA,CAAC,IAAIkY,gBAAV,EAA4B,gEAAyB,wDAAzB,CAA5B,CAAP;AAAkF,OAAjJ;;AACAA,sBAAgB,CAACE,IAAjB,GAAwB,gEAAyB;AAAE9X,YAAI,EAAE4X,gBAAR;AAA0BG,iBAAS,EAAE,CAAC,CAAC,EAAD,EAAK,oBAAL,EAA2B,EAA3B,CAAD,EAAiC,CAAC,EAAD,EAAK,gBAAL,EAAuB,EAAvB,CAAjC,EAA6D,CAAC,EAAD,EAAK,kBAAL,EAAyB,EAAzB,CAA7D,CAArC;AAAiIC,gBAAQ,EAAE,CAAC,kBAAD;AAA3I,OAAzB,CAAxB;;AACAJ,sBAAgB,CAAC7X,cAAjB,GAAkC;AAAA,eAAM,CACpC;AAAEC,cAAI,EAAE;AAAR,SADoC,CAAN;AAAA,OAAlC;AAGA;;;AAAc,OAAC,YAAY;AAAE,wEAAyB4X,gBAAzB,EAA2C,CAAC;AACjE5X,cAAI,EAAE,uDAD2D;AAEjEG,cAAI,EAAE,CAAC;AACC2N,oBAAQ,EAAE,4DADX;AAECkK,oBAAQ,EAAE;AAFX,WAAD;AAF2D,SAAD,CAA3C,EAMrB,YAAY;AAAE,iBAAO,CAAC;AAAEhY,gBAAI,EAAE;AAAR,WAAD,CAAP;AAAuC,SANhC,EAMkC,IANlC;AAM0C,OANzD;AAOd;AACA;AACA;AACA;;;UACMiY,mB;AACF;AACA,qCAAYC,QAAZ,EAAsBC,WAAtB,EAAmCC,gBAAnC,EAAqDC,qBAArD,EAA4EC,IAA5E,EAAkF;AAAA;;AAC9E,eAAKJ,QAAL,GAAgBA,QAAhB;AACA,eAAKI,IAAL,GAAYA,IAAZ;AACA,eAAKC,YAAL,GAAoB,KAApB;AACA,eAAKC,aAAL,GAAqB,KAArB;AACA,eAAK5O,cAAL,GAAsB,KAAtB;AACA,eAAK6O,mBAAL,GAA2B,KAA3B;AACA,eAAKC,KAAL,GAAa,KAAb;AACA,eAAKC,qBAAL,GAA6B,kDAAa/S,KAA1C;AACA,eAAKgT,mBAAL,GAA2B,kDAAahT,KAAxC;AACA,eAAKiT,mBAAL,GAA2B,kDAAajT,KAAxC;AACA,eAAKkT,qBAAL,GAA6B,kDAAalT,KAA1C;AACA;;AACA,eAAKmT,cAAL,GAAsB,CAAtB;AACA;;AACA,eAAKC,IAAL,GAAY,KAAZ;AACA;;AACA,eAAKC,YAAL,GAAoB,KAApB;AACA;;AACA,eAAKC,aAAL,GAAqB,IAAI,0DAAJ,EAArB;AACA;;AACA,eAAKC,cAAL,GAAsB,IAAI,0DAAJ,EAAtB;AACA;;AACA,eAAKpT,MAAL,GAAc,IAAI,0DAAJ,EAAd;AACA;;AACA,eAAKpJ,MAAL,GAAc,IAAI,0DAAJ,EAAd;AACA;;AACA,eAAKyc,cAAL,GAAsB,IAAI,0DAAJ,EAAtB;AACA;;AACA,eAAKC,mBAAL,GAA2B,IAAI,0DAAJ,EAA3B;AACA,eAAKC,eAAL,GAAuB,IAAI,kEAAJ,CAAmBnB,WAAnB,EAAgCC,gBAAhC,CAAvB;AACA,eAAKmB,sBAAL,GAA8BlB,qBAA9B;AACA,eAAKhY,cAAL,GAAsB,KAAKkZ,sBAAL,EAAtB;AACH;AACD;;;;;eACA,eAAc;AAAE,mBAAO,KAAKnP,QAAZ;AAAuB,W;eACvC,aAAYnJ,OAAZ,EAAqB;AACjB,iBAAKmJ,QAAL,GAAgBnJ,OAAhB;;AACA,gBAAI,KAAKuY,SAAT,EAAoB;AAChB,mBAAKC,uBAAL,CAA6B,KAAKD,SAAlC;AACH;AACJ;AACD;;;;eACA,eAAc;AAAE,mBAAO,KAAKnP,QAAZ;AAAuB,W;eACvC,aAAYnJ,OAAZ,EAAqB;AACjB,iBAAKmJ,QAAL,GAAgBnJ,OAAhB;;AACA,gBAAI,KAAKsY,SAAT,EAAoB;AAChB,mBAAKC,uBAAL,CAA6B,KAAKD,SAAlC;AACH;AACJ;AACD;;;;eACA,eAAkB;AAAE,mBAAO,KAAKjB,YAAZ;AAA2B,W;eAC/C,aAAgB1W,KAAhB,EAAuB;AAAE,iBAAK0W,YAAL,GAAoB,oFAAsB1W,KAAtB,CAApB;AAAmD;AAC5E;;;;eACA,eAAmB;AAAE,mBAAO,KAAK2W,aAAZ;AAA4B,W;eACjD,aAAiB3W,KAAjB,EAAwB;AAAE,iBAAK2W,aAAL,GAAqB,oFAAsB3W,KAAtB,CAArB;AAAoD;AAC9E;;;;eACA,eAAyB;AAAE,mBAAO,KAAK4W,mBAAZ;AAAkC,W;eAC7D,aAAuB5W,KAAvB,EAA8B;AAC1B,iBAAK4W,mBAAL,GAA2B,oFAAsB5W,KAAtB,CAA3B;AACH;AACD;;;;eACA,eAAoB;AAAE,mBAAO,KAAK+H,cAAZ;AAA6B,W;eACnD,aAAkB/H,KAAlB,EAAyB;AAAE,iBAAK+H,cAAL,GAAsB,oFAAsB/H,KAAtB,CAAtB;AAAqD;AAChF;;;;eACA,eAAW;AAAE,mBAAO,KAAK6W,KAAZ;AAAoB,W;eACjC,aAAS7W,KAAT,EAAgB;AAAE,iBAAK6W,KAAL,GAAa,oFAAsB7W,KAAtB,CAAb;AAA4C;AAC9D;;;;eACA,eAAiB;AACb,mBAAO,KAAKrF,WAAZ;AACH;AACD;;;;eACA,eAAU;AACN,mBAAO,KAAK8b,IAAL,GAAY,KAAKA,IAAL,CAAUzW,KAAtB,GAA8B,KAArC;AACH;;;iBACD,uBAAc;AACV,iBAAK+W,mBAAL,CAAyBrb,WAAzB;;AACA,iBAAKsb,mBAAL,CAAyBtb,WAAzB;;AACA,iBAAKob,qBAAL,CAA2Bpb,WAA3B;;AACA,iBAAKub,qBAAL,CAA2Bvb,WAA3B;;AACA,gBAAI,KAAKf,WAAT,EAAsB;AAClB,mBAAKA,WAAL,CAAiBuK,OAAjB;AACH;AACJ;;;iBACD,qBAAY2S,OAAZ,EAAqB;AACjB,gBAAI,KAAKF,SAAT,EAAoB;AAChB,mBAAKC,uBAAL,CAA6B,KAAKD,SAAlC;;AACA,mBAAKhd,WAAL,CAAiBoZ,UAAjB,CAA4B;AACxB9Z,qBAAK,EAAE,KAAKA,KADY;AAExBgM,wBAAQ,EAAE,KAAKA,QAFS;AAGxBlM,sBAAM,EAAE,KAAKA,MAHW;AAIxBmM,yBAAS,EAAE,KAAKA;AAJQ,eAA5B;;AAMA,kBAAI2R,OAAO,CAAC,QAAD,CAAP,IAAqB,KAAKV,IAA9B,EAAoC;AAChC,qBAAKQ,SAAL,CAAelS,KAAf;AACH;AACJ;;AACD,gBAAIoS,OAAO,CAAC,MAAD,CAAX,EAAqB;AACjB,mBAAKV,IAAL,GAAY,KAAKW,cAAL,EAAZ,GAAoC,KAAKC,cAAL,EAApC;AACH;AACJ;AACD;;;;iBACA,0BAAiB;AAAA;;AACb,gBAAI,CAAC,KAAKtM,SAAN,IAAmB,CAAC,KAAKA,SAAL,CAAejL,MAAvC,EAA+C;AAC3C,mBAAKiL,SAAL,GAAiBoK,mBAAjB;AACH;;AACD,gBAAM9a,UAAU,GAAG,KAAKJ,WAAL,GAAmB,KAAK0b,QAAL,CAAc2B,MAAd,CAAqB,KAAKC,YAAL,EAArB,CAAtC;;AACA,iBAAKlB,mBAAL,GAA2Bhc,UAAU,CAACmd,WAAX,GAAyB7c,SAAzB,CAAmC;AAAA,qBAAM,OAAI,CAAC6I,MAAL,CAAYiU,IAAZ,EAAN;AAAA,aAAnC,CAA3B;AACA,iBAAKnB,mBAAL,GAA2Bjc,UAAU,CAACqd,WAAX,GAAyB/c,SAAzB,CAAmC;AAAA,qBAAM,OAAI,CAACP,MAAL,CAAYqd,IAAZ,EAAN;AAAA,aAAnC,CAA3B;AACApd,sBAAU,CAACsd,aAAX,GAA2Bhd,SAA3B,CAAqC,UAACuF,KAAD,EAAW;AAC5C,qBAAI,CAAC2W,cAAL,CAAoBtW,IAApB,CAAyBL,KAAzB;;AACA,kBAAIA,KAAK,CAAC0X,OAAN,KAAkB,4DAAlB,IAA4B,CAAC,OAAI,CAAClB,YAAlC,IAAkD,CAAC,6EAAexW,KAAf,CAAvD,EAA8E;AAC1EA,qBAAK,CAAC2X,cAAN;;AACA,uBAAI,CAACR,cAAL;AACH;AACJ,aAND;;AAOA,iBAAKpd,WAAL,CAAiB6d,oBAAjB,GAAwCnd,SAAxC,CAAkD,UAACuF,KAAD,EAAW;AACzD,qBAAI,CAAC4W,mBAAL,CAAyBvW,IAAzB,CAA8BL,KAA9B;AACH,aAFD;AAGH;AACD;;;;iBACA,wBAAe;AACX,gBAAMwD,gBAAgB,GAAG,KAAKuT,SAAL,GACrB,KAAKvT,gBAAL,IAAyB,KAAKqU,uBAAL,EAD7B;;AAEA,gBAAMjD,aAAa,GAAG,IAAIjX,aAAJ,CAAkB;AACpCuH,uBAAS,EAAE,KAAK2Q,IADoB;AAEpCrS,8BAAgB,EAAhBA,gBAFoC;AAGpC5F,4BAAc,EAAE,KAAKA,cAHe;AAIpCE,yBAAW,EAAE,KAAKA;AAJkB,aAAlB,CAAtB;;AAMA,gBAAI,KAAKzE,KAAL,IAAc,KAAKA,KAAL,KAAe,CAAjC,EAAoC;AAChCub,2BAAa,CAACvb,KAAd,GAAsB,KAAKA,KAA3B;AACH;;AACD,gBAAI,KAAKF,MAAL,IAAe,KAAKA,MAAL,KAAgB,CAAnC,EAAsC;AAClCyb,2BAAa,CAACzb,MAAd,GAAuB,KAAKA,MAA5B;AACH;;AACD,gBAAI,KAAKkM,QAAL,IAAiB,KAAKA,QAAL,KAAkB,CAAvC,EAA0C;AACtCuP,2BAAa,CAACvP,QAAd,GAAyB,KAAKA,QAA9B;AACH;;AACD,gBAAI,KAAKC,SAAL,IAAkB,KAAKA,SAAL,KAAmB,CAAzC,EAA4C;AACxCsP,2BAAa,CAACtP,SAAd,GAA0B,KAAKA,SAA/B;AACH;;AACD,gBAAI,KAAKvH,aAAT,EAAwB;AACpB6W,2BAAa,CAAC7W,aAAd,GAA8B,KAAKA,aAAnC;AACH;;AACD,gBAAI,KAAKF,UAAT,EAAqB;AACjB+W,2BAAa,CAAC/W,UAAd,GAA2B,KAAKA,UAAhC;AACH;;AACD,mBAAO+W,aAAP;AACH;AACD;;;;iBACA,iCAAwBpR,gBAAxB,EAA0C;AAAA;;AACtC,gBAAMqH,SAAS,GAAG,KAAKA,SAAL,CAAeiF,GAAf,CAAmB,UAAAgI,eAAe;AAAA,qBAAK;AACrDpZ,uBAAO,EAAEoZ,eAAe,CAACpZ,OAD4B;AAErDC,uBAAO,EAAEmZ,eAAe,CAACnZ,OAF4B;AAGrDC,wBAAQ,EAAEkZ,eAAe,CAAClZ,QAH2B;AAIrDC,wBAAQ,EAAEiZ,eAAe,CAACjZ,QAJ2B;AAKrDL,uBAAO,EAAEsZ,eAAe,CAACtZ,OAAhB,IAA2B,OAAI,CAACA,OALY;AAMrDC,uBAAO,EAAEqZ,eAAe,CAACrZ,OAAhB,IAA2B,OAAI,CAACA,OANY;AAOrDZ,0BAAU,EAAEia,eAAe,CAACja,UAAhB,IAA8BL;AAPW,eAAL;AAAA,aAAlC,CAAlB;AASA,mBAAOgG,gBAAgB,CAClBuE,SADE,CACQ,KAAKzJ,MAAL,CAAYuV,UADpB,EAEFzB,aAFE,CAEYvH,SAFZ,EAGF+G,sBAHE,CAGqB,KAAK7G,kBAH1B,EAIF8G,QAJE,CAIO,KAAKrS,IAJZ,EAKFuY,iBALE,CAKgB,KAAK/M,aALrB,EAMF8G,kBANE,CAMiB,KAAKwE,cANtB,EAOF/D,kBAPE,CAOiB,KAAKyF,YAPtB,EAQFC,qBARE,CAQoB,KAAKC,uBARzB,CAAP;AASH;AACD;;;;iBACA,mCAA0B;AACtB,gBAAMpT,QAAQ,GAAG,KAAK2Q,QAAL,CAAc3L,QAAd,GAAyBqO,mBAAzB,CAA6C,KAAK7Z,MAAL,CAAYuV,UAAzD,CAAjB;;AACA,iBAAKmD,uBAAL,CAA6BlS,QAA7B;;AACA,mBAAOA,QAAP;AACH;AACD;;;;iBACA,0BAAiB;AAAA;;AACb,gBAAI,CAAC,KAAK/K,WAAV,EAAuB;AACnB,mBAAKqe,cAAL;AACH,aAFD,MAGK;AACD;AACA,mBAAKre,WAAL,CAAiB+S,SAAjB,GAA6BhP,WAA7B,GAA2C,KAAKA,WAAhD;AACH;;AACD,gBAAI,CAAC,KAAK/D,WAAL,CAAiBC,WAAjB,EAAL,EAAqC;AACjC,mBAAKD,WAAL,CAAiBuJ,MAAjB,CAAwB,KAAKuT,eAA7B;AACH;;AACD,gBAAI,KAAK/Y,WAAT,EAAsB;AAClB,mBAAKoY,qBAAL,GAA6B,KAAKnc,WAAL,CAAiB0c,aAAjB,GAAiChc,SAAjC,CAA2C,UAAAuF,KAAK,EAAI;AAC7E,uBAAI,CAACyW,aAAL,CAAmBc,IAAnB,CAAwBvX,KAAxB;AACH,eAF4B,CAA7B;AAGH,aAJD,MAKK;AACD,mBAAKkW,qBAAL,CAA2Bpb,WAA3B;AACH;;AACD,iBAAKub,qBAAL,CAA2Bvb,WAA3B,GAnBa,CAoBb;AACA;;;AACA,gBAAI,KAAK4b,cAAL,CAAoBtW,SAApB,CAA8BR,MAA9B,GAAuC,CAA3C,EAA8C;AAC1C,mBAAKyW,qBAAL,GAA6B,KAAKU,SAAL,CAAejP,eAAf,CACxB5D,IADwB,CACnB,iEAAU;AAAA,uBAAM,OAAI,CAACwS,cAAL,CAAoBtW,SAApB,CAA8BR,MAA9B,GAAuC,CAA7C;AAAA,eAAV,CADmB,EAExBnF,SAFwB,CAEd,UAAAqP,QAAQ,EAAI;AACvB,uBAAI,CAAC4M,cAAL,CAAoBa,IAApB,CAAyBzN,QAAzB;;AACA,oBAAI,OAAI,CAAC4M,cAAL,CAAoBtW,SAApB,CAA8BR,MAA9B,KAAyC,CAA7C,EAAgD;AAC5C,yBAAI,CAACyW,qBAAL,CAA2Bvb,WAA3B;AACH;AACJ,eAP4B,CAA7B;AAQH;AACJ;AACD;;;;iBACA,0BAAiB;AACb,gBAAI,KAAKf,WAAT,EAAsB;AAClB,mBAAKA,WAAL,CAAiBG,MAAjB;AACH;;AACD,iBAAKgc,qBAAL,CAA2Bpb,WAA3B;;AACA,iBAAKub,qBAAL,CAA2Bvb,WAA3B;AACH;;;;;;AAEL0a,yBAAmB,CAACzY,IAApB,GAA2B,SAASsb,2BAAT,CAAqCpb,CAArC,EAAwC;AAAE,eAAO,KAAKA,CAAC,IAAIuY,mBAAV,EAA+B,gEAAyBxB,OAAzB,CAA/B,EAAkE,gEAAyB,yDAAzB,CAAlE,EAAgH,gEAAyB,8DAAzB,CAAhH,EAAmK,gEAAyBkB,qCAAzB,CAAnK,EAAoO,gEAAyB,gEAAzB,EAAgD,CAAhD,CAApO,CAAP;AAAiS,OAAtW;;AACAM,yBAAmB,CAACH,IAApB,GAA2B,gEAAyB;AAAE9X,YAAI,EAAEiY,mBAAR;AAA6BF,iBAAS,EAAE,CAAC,CAAC,EAAD,EAAK,uBAAL,EAA8B,EAA9B,CAAD,EAAoC,CAAC,EAAD,EAAK,mBAAL,EAA0B,EAA1B,CAApC,EAAmE,CAAC,EAAD,EAAK,qBAAL,EAA4B,EAA5B,CAAnE,CAAxC;AAA6IgD,cAAM,EAAE;AAAEhC,wBAAc,EAAE,CAAC,mCAAD,EAAsC,gBAAtC,CAAlB;AAA2EC,cAAI,EAAE,CAAC,yBAAD,EAA4B,MAA5B,CAAjF;AAAsHC,sBAAY,EAAE,CAAC,iCAAD,EAAoC,cAApC,CAApI;AAAyL5Y,wBAAc,EAAE,CAAC,mCAAD,EAAsC,gBAAtC,CAAzM;AAAkQY,iBAAO,EAAE,CAAC,4BAAD,EAA+B,SAA/B,CAA3Q;AAAsTC,iBAAO,EAAE,CAAC,4BAAD,EAA+B,SAA/B,CAA/T;AAA0WX,qBAAW,EAAE,CAAC,gCAAD,EAAmC,aAAnC,CAAvX;AAA0aka,sBAAY,EAAE,CAAC,iCAAD,EAAoC,cAApC,CAAxb;AAA6ejN,4BAAkB,EAAE,CAAC,uCAAD,EAA0C,oBAA1C,CAAjgB;AAAkkBC,uBAAa,EAAE,CAAC,kCAAD,EAAqC,eAArC,CAAjlB;AAAwoBxL,cAAI,EAAE,CAAC,yBAAD,EAA4B,MAA5B,CAA9oB;AAAmrBqL,mBAAS,EAAE,CAAC,8BAAD,EAAiC,WAAjC,CAA9rB;AAA6uBvM,gBAAM,EAAE,CAAC,2BAAD,EAA8B,QAA9B,CAArvB;AAA8xBkF,0BAAgB,EAAE,CAAC,qCAAD,EAAwC,kBAAxC,CAAhzB;AAA62BnK,eAAK,EAAE,CAAC,0BAAD,EAA6B,OAA7B,CAAp3B;AAA25BF,gBAAM,EAAE,CAAC,2BAAD,EAA8B,QAA9B,CAAn6B;AAA48BkM,kBAAQ,EAAE,CAAC,6BAAD,EAAgC,UAAhC,CAAt9B;AAAmgCC,mBAAS,EAAE,CAAC,8BAAD,EAAiC,WAAjC,CAA9gC;AAA6jCvH,uBAAa,EAAE,CAAC,kCAAD,EAAqC,eAArC,CAA5kC;AAAmoCF,oBAAU,EAAE,CAAC,+BAAD,EAAkC,YAAlC,CAA/oC;AAAgsCqa,iCAAuB,EAAE,CAAC,sCAAD,EAAyC,yBAAzC;AAAztC,SAArJ;AAAq7CK,eAAO,EAAE;AAAE9B,uBAAa,EAAE,eAAjB;AAAkCC,wBAAc,EAAE,gBAAlD;AAAoEpT,gBAAM,EAAE,QAA5E;AAAsFpJ,gBAAM,EAAE,QAA9F;AAAwGyc,wBAAc,EAAE,gBAAxH;AAA0IC,6BAAmB,EAAE;AAA/J,SAA97C;AAAsnDrB,gBAAQ,EAAE,CAAC,qBAAD,CAAhoD;AAAypDiD,gBAAQ,EAAE,CAAC,kEAAD;AAAnqD,OAAzB,CAA3B;;AACAhD,yBAAmB,CAAClY,cAApB,GAAqC;AAAA,eAAM,CACvC;AAAEC,cAAI,EAAEyW;AAAR,SADuC,EAEvC;AAAEzW,cAAI,EAAE;AAAR,SAFuC,EAGvC;AAAEA,cAAI,EAAE;AAAR,SAHuC,EAIvC;AAAEA,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAAEF,gBAAI,EAAE,oDAAR;AAAgBG,gBAAI,EAAE,CAACwX,qCAAD;AAAtB,WAAD;AAA/B,SAJuC,EAKvC;AAAE3X,cAAI,EAAE,gEAAR;AAAwBE,oBAAU,EAAE,CAAC;AAAEF,gBAAI,EAAE;AAAR,WAAD;AAApC,SALuC,CAAN;AAAA,OAArC;;AAOAiY,yBAAmB,CAACiD,cAApB,GAAqC;AACjCna,cAAM,EAAE,CAAC;AAAEf,cAAI,EAAE,mDAAR;AAAeG,cAAI,EAAE,CAAC,2BAAD;AAArB,SAAD,CADyB;AAEjCmN,iBAAS,EAAE,CAAC;AAAEtN,cAAI,EAAE,mDAAR;AAAeG,cAAI,EAAE,CAAC,8BAAD;AAArB,SAAD,CAFsB;AAGjC8F,wBAAgB,EAAE,CAAC;AAAEjG,cAAI,EAAE,mDAAR;AAAeG,cAAI,EAAE,CAAC,qCAAD;AAArB,SAAD,CAHe;AAIjCc,eAAO,EAAE,CAAC;AAAEjB,cAAI,EAAE,mDAAR;AAAeG,cAAI,EAAE,CAAC,4BAAD;AAArB,SAAD,CAJwB;AAKjCe,eAAO,EAAE,CAAC;AAAElB,cAAI,EAAE,mDAAR;AAAeG,cAAI,EAAE,CAAC,4BAAD;AAArB,SAAD,CALwB;AAMjCrE,aAAK,EAAE,CAAC;AAAEkE,cAAI,EAAE,mDAAR;AAAeG,cAAI,EAAE,CAAC,0BAAD;AAArB,SAAD,CAN0B;AAOjCvE,cAAM,EAAE,CAAC;AAAEoE,cAAI,EAAE,mDAAR;AAAeG,cAAI,EAAE,CAAC,2BAAD;AAArB,SAAD,CAPyB;AAQjC2H,gBAAQ,EAAE,CAAC;AAAE9H,cAAI,EAAE,mDAAR;AAAeG,cAAI,EAAE,CAAC,6BAAD;AAArB,SAAD,CARuB;AASjC4H,iBAAS,EAAE,CAAC;AAAE/H,cAAI,EAAE,mDAAR;AAAeG,cAAI,EAAE,CAAC,8BAAD;AAArB,SAAD,CATsB;AAUjCK,qBAAa,EAAE,CAAC;AAAER,cAAI,EAAE,mDAAR;AAAeG,cAAI,EAAE,CAAC,kCAAD;AAArB,SAAD,CAVkB;AAWjCG,kBAAU,EAAE,CAAC;AAAEN,cAAI,EAAE,mDAAR;AAAeG,cAAI,EAAE,CAAC,+BAAD;AAArB,SAAD,CAXqB;AAYjC4Y,sBAAc,EAAE,CAAC;AAAE/Y,cAAI,EAAE,mDAAR;AAAeG,cAAI,EAAE,CAAC,mCAAD;AAArB,SAAD,CAZiB;AAajCE,sBAAc,EAAE,CAAC;AAAEL,cAAI,EAAE,mDAAR;AAAeG,cAAI,EAAE,CAAC,mCAAD;AAArB,SAAD,CAbiB;AAcjC6Y,YAAI,EAAE,CAAC;AAAEhZ,cAAI,EAAE,mDAAR;AAAeG,cAAI,EAAE,CAAC,yBAAD;AAArB,SAAD,CAd2B;AAejC8Y,oBAAY,EAAE,CAAC;AAAEjZ,cAAI,EAAE,mDAAR;AAAeG,cAAI,EAAE,CAAC,iCAAD;AAArB,SAAD,CAfmB;AAgBjCwa,+BAAuB,EAAE,CAAC;AAAE3a,cAAI,EAAE,mDAAR;AAAeG,cAAI,EAAE,CAAC,sCAAD;AAArB,SAAD,CAhBQ;AAiBjCI,mBAAW,EAAE,CAAC;AAAEP,cAAI,EAAE,mDAAR;AAAeG,cAAI,EAAE,CAAC,gCAAD;AAArB,SAAD,CAjBoB;AAkBjCsa,oBAAY,EAAE,CAAC;AAAEza,cAAI,EAAE,mDAAR;AAAeG,cAAI,EAAE,CAAC,iCAAD;AAArB,SAAD,CAlBmB;AAmBjCqN,0BAAkB,EAAE,CAAC;AAAExN,cAAI,EAAE,mDAAR;AAAeG,cAAI,EAAE,CAAC,uCAAD;AAArB,SAAD,CAnBa;AAoBjCsN,qBAAa,EAAE,CAAC;AAAEzN,cAAI,EAAE,mDAAR;AAAeG,cAAI,EAAE,CAAC,kCAAD;AAArB,SAAD,CApBkB;AAqBjC8B,YAAI,EAAE,CAAC;AAAEjC,cAAI,EAAE,mDAAR;AAAeG,cAAI,EAAE,CAAC,yBAAD;AAArB,SAAD,CArB2B;AAsBjC+Y,qBAAa,EAAE,CAAC;AAAElZ,cAAI,EAAE;AAAR,SAAD,CAtBkB;AAuBjCmZ,sBAAc,EAAE,CAAC;AAAEnZ,cAAI,EAAE;AAAR,SAAD,CAvBiB;AAwBjC+F,cAAM,EAAE,CAAC;AAAE/F,cAAI,EAAE;AAAR,SAAD,CAxByB;AAyBjCrD,cAAM,EAAE,CAAC;AAAEqD,cAAI,EAAE;AAAR,SAAD,CAzByB;AA0BjCoZ,sBAAc,EAAE,CAAC;AAAEpZ,cAAI,EAAE;AAAR,SAAD,CA1BiB;AA2BjCqZ,2BAAmB,EAAE,CAAC;AAAErZ,cAAI,EAAE;AAAR,SAAD;AA3BY,OAArC;AA6BA;;AAAc,OAAC,YAAY;AAAE,wEAAyBiY,mBAAzB,EAA8C,CAAC;AACpEjY,cAAI,EAAE,uDAD8D;AAEpEG,cAAI,EAAE,CAAC;AACC2N,oBAAQ,EAAE,qEADX;AAECkK,oBAAQ,EAAE;AAFX,WAAD;AAF8D,SAAD,CAA9C,EAMrB,YAAY;AAAE,iBAAO,CAAC;AAAEhY,gBAAI,EAAEyW;AAAR,WAAD,EAAoB;AAAEzW,gBAAI,EAAE;AAAR,WAApB,EAAkD;AAAEA,gBAAI,EAAE;AAAR,WAAlD,EAAqF;AAAEA,gBAAI,EAAEC,SAAR;AAAmBC,sBAAU,EAAE,CAAC;AAClIF,kBAAI,EAAE,oDAD4H;AAElIG,kBAAI,EAAE,CAACwX,qCAAD;AAF4H,aAAD;AAA/B,WAArF,EAGX;AAAE3X,gBAAI,EAAE,gEAAR;AAA+BE,sBAAU,EAAE,CAAC;AAC9CF,kBAAI,EAAE;AADwC,aAAD;AAA3C,WAHW,CAAP;AAKF,SAXS,EAWP;AAAE+Y,wBAAc,EAAE,CAAC;AAC7B/Y,gBAAI,EAAE,mDADuB;AAE7BG,gBAAI,EAAE,CAAC,mCAAD;AAFuB,WAAD,CAAlB;AAGV6Y,cAAI,EAAE,CAAC;AACPhZ,gBAAI,EAAE,mDADC;AAEPG,gBAAI,EAAE,CAAC,yBAAD;AAFC,WAAD,CAHI;AAMV8Y,sBAAY,EAAE,CAAC;AACfjZ,gBAAI,EAAE,mDADS;AAEfG,gBAAI,EAAE,CAAC,iCAAD;AAFS,WAAD,CANJ;AASV+Y,uBAAa,EAAE,CAAC;AAChBlZ,gBAAI,EAAE;AADU,WAAD,CATL;AAWVmZ,wBAAc,EAAE,CAAC;AACjBnZ,gBAAI,EAAE;AADW,WAAD,CAXN;AAaV+F,gBAAM,EAAE,CAAC;AACT/F,gBAAI,EAAE;AADG,WAAD,CAbE;AAeVrD,gBAAM,EAAE,CAAC;AACTqD,gBAAI,EAAE;AADG,WAAD,CAfE;AAiBVoZ,wBAAc,EAAE,CAAC;AACjBpZ,gBAAI,EAAE;AADW,WAAD,CAjBN;AAmBVqZ,6BAAmB,EAAE,CAAC;AACtBrZ,gBAAI,EAAE;AADgB,WAAD,CAnBX;AAqBVK,wBAAc,EAAE,CAAC;AACjBL,gBAAI,EAAE,mDADW;AAEjBG,gBAAI,EAAE,CAAC,mCAAD;AAFW,WAAD,CArBN;AAwBVc,iBAAO,EAAE,CAAC;AACVjB,gBAAI,EAAE,mDADI;AAEVG,gBAAI,EAAE,CAAC,4BAAD;AAFI,WAAD,CAxBC;AA2BVe,iBAAO,EAAE,CAAC;AACVlB,gBAAI,EAAE,mDADI;AAEVG,gBAAI,EAAE,CAAC,4BAAD;AAFI,WAAD,CA3BC;AA8BVI,qBAAW,EAAE,CAAC;AACdP,gBAAI,EAAE,mDADQ;AAEdG,gBAAI,EAAE,CAAC,gCAAD;AAFQ,WAAD,CA9BH;AAiCVsa,sBAAY,EAAE,CAAC;AACfza,gBAAI,EAAE,mDADS;AAEfG,gBAAI,EAAE,CAAC,iCAAD;AAFS,WAAD,CAjCJ;AAoCVqN,4BAAkB,EAAE,CAAC;AACrBxN,gBAAI,EAAE,mDADe;AAErBG,gBAAI,EAAE,CAAC,uCAAD;AAFe,WAAD,CApCV;AAuCVsN,uBAAa,EAAE,CAAC;AAChBzN,gBAAI,EAAE,mDADU;AAEhBG,gBAAI,EAAE,CAAC,kCAAD;AAFU,WAAD,CAvCL;AA0CV8B,cAAI,EAAE,CAAC;AACPjC,gBAAI,EAAE,mDADC;AAEPG,gBAAI,EAAE,CAAC,yBAAD;AAFC,WAAD,CA1CI;AA6CVmN,mBAAS,EAAE,CAAC;AACZtN,gBAAI,EAAE,mDADM;AAEZG,gBAAI,EAAE,CAAC,8BAAD;AAFM,WAAD,CA7CD;AAgDVY,gBAAM,EAAE,CAAC;AACTf,gBAAI,EAAE,mDADG;AAETG,gBAAI,EAAE,CAAC,2BAAD;AAFG,WAAD,CAhDE;AAmDV8F,0BAAgB,EAAE,CAAC;AACnBjG,gBAAI,EAAE,mDADa;AAEnBG,gBAAI,EAAE,CAAC,qCAAD;AAFa,WAAD,CAnDR;AAsDVrE,eAAK,EAAE,CAAC;AACRkE,gBAAI,EAAE,mDADE;AAERG,gBAAI,EAAE,CAAC,0BAAD;AAFE,WAAD,CAtDG;AAyDVvE,gBAAM,EAAE,CAAC;AACToE,gBAAI,EAAE,mDADG;AAETG,gBAAI,EAAE,CAAC,2BAAD;AAFG,WAAD,CAzDE;AA4DV2H,kBAAQ,EAAE,CAAC;AACX9H,gBAAI,EAAE,mDADK;AAEXG,gBAAI,EAAE,CAAC,6BAAD;AAFK,WAAD,CA5DA;AA+DV4H,mBAAS,EAAE,CAAC;AACZ/H,gBAAI,EAAE,mDADM;AAEZG,gBAAI,EAAE,CAAC,8BAAD;AAFM,WAAD,CA/DD;AAkEVK,uBAAa,EAAE,CAAC;AAChBR,gBAAI,EAAE,mDADU;AAEhBG,gBAAI,EAAE,CAAC,kCAAD;AAFU,WAAD,CAlEL;AAqEVG,oBAAU,EAAE,CAAC;AACbN,gBAAI,EAAE,mDADO;AAEbG,gBAAI,EAAE,CAAC,+BAAD;AAFO,WAAD,CArEF;AAwEVwa,iCAAuB,EAAE,CAAC;AAC1B3a,gBAAI,EAAE,mDADoB;AAE1BG,gBAAI,EAAE,CAAC,sCAAD;AAFoB,WAAD;AAxEf,SAXO;AAsFb,OAtFF;AAuFd;;;AACA,eAASgb,sDAAT,CAAgEna,OAAhE,EAAyE;AACrE,eAAO;AAAA,iBAAMA,OAAO,CAAC0V,gBAAR,CAAyBnX,UAAzB,EAAN;AAAA,SAAP;AACH;AACD;;;AACA,UAAM6b,8CAA8C,GAAG;AACnDC,eAAO,EAAE1D,qCAD0C;AAEnD2D,YAAI,EAAE,CAAC7E,OAAD,CAF6C;AAGnD8E,kBAAU,EAAEJ;AAHuC,OAAvD;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;;UACMK,a;;;;AAENA,mBAAa,CAACC,IAAd,GAAqB,+DAAwB;AAAEzb,YAAI,EAAEwb;AAAR,OAAxB,CAArB;AACAA,mBAAa,CAACE,IAAd,GAAqB,+DAAwB;AAAE9b,eAAO,EAAE,SAAS+b,qBAAT,CAA+Bjc,CAA/B,EAAkC;AAAE,iBAAO,KAAKA,CAAC,IAAI8b,aAAV,GAAP;AAAoC,SAAnF;AAAqFI,iBAAS,EAAE,CACrInF,OADqI,EAErI2E,8CAFqI,CAAhG;AAGtCS,eAAO,EAAE,CAAC,CAAC,4DAAD,EAAa,gEAAb,EAA2B,sEAA3B,CAAD,EAA8C,sEAA9C;AAH6B,OAAxB,CAArB;;AAIA,OAAC,YAAY;AAAE,SAAC,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0BN,aAA1B,EAAyC;AAAEO,sBAAY,EAAE,wBAAY;AAAE,mBAAO,CAAC9D,mBAAD,EAAsBL,gBAAtB,CAAP;AAAiD,WAA/E;AAAiFiE,iBAAO,EAAE,mBAAY;AAAE,mBAAO,CAAC,4DAAD,EAAa,gEAAb,EAA2B,sEAA3B,CAAP;AAAqD,WAA7J;AAA+JG,iBAAO,EAAE,mBAAY;AAAE,mBAAO,CAAC/D,mBAAD,EAAsBL,gBAAtB,EAAwC,sEAAxC,CAAP;AAAkE;AAAxP,SAAzC,CAAnD;AAA0V,OAAzW;AACA;;;AAAc,OAAC,YAAY;AAAE,wEAAyB4D,aAAzB,EAAwC,CAAC;AAC9Dxb,cAAI,EAAE,sDADwD;AAE9DG,cAAI,EAAE,CAAC;AACC0b,mBAAO,EAAE,CAAC,4DAAD,EAAa,gEAAb,EAA2B,sEAA3B,CADV;AAECG,mBAAO,EAAE,CAAC/D,mBAAD,EAAsBL,gBAAtB,EAAwC,sEAAxC,CAFV;AAGCmE,wBAAY,EAAE,CAAC9D,mBAAD,EAAsBL,gBAAtB,CAHf;AAICgE,qBAAS,EAAE,CACPnF,OADO,EAEP2E,8CAFO;AAJZ,WAAD;AAFwD,SAAD,CAAxC,EAWrB,IAXqB,EAWf,IAXe;AAWP,OAXR;AAad;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;UACMa,0B;;;;;AACF,4CAAY5hB,SAAZ,EAAuB8Z,QAAvB,EAAiC;AAAA;;AAAA,oCACvB9Z,SADuB,EACZ8Z,QADY;AAEhC;;;;iBACD,uBAAc;AACV;;AACA,gBAAI,KAAK+H,oBAAL,IAA6B,KAAKC,mBAAtC,EAA2D;AACvD,mBAAK9hB,SAAL,CAAe4I,mBAAf,CAAmC,KAAKiZ,oBAAxC,EAA8D,KAAKC,mBAAnE;AACH;AACJ;;;iBACD,4BAAmB;AAAA;;AACf;;AACA,iBAAKC,gCAAL;;AACA,iBAAKC,4BAAL,CAAkC;AAAA,qBAAM,OAAI,CAACD,gCAAL,EAAN;AAAA,aAAlC;AACH;;;iBACD,4CAAmC;AAC/B,gBAAI,CAAC,KAAKhY,iBAAV,EAA6B;AACzB;AACH;;AACD,gBAAMkY,iBAAiB,GAAG,KAAKC,oBAAL,EAA1B;AACA,gBAAMnG,MAAM,GAAGkG,iBAAiB,IAAI,KAAKjiB,SAAL,CAAeU,IAAnD;AACAqb,kBAAM,CAACtR,WAAP,CAAmB,KAAKV,iBAAxB;AACH;;;iBACD,sCAA6BoY,EAA7B,EAAiC;AAC7B,gBAAMC,SAAS,GAAG,KAAKC,aAAL,EAAlB;;AACA,gBAAID,SAAJ,EAAe;AACX,kBAAI,KAAKN,mBAAT,EAA8B;AAC1B,qBAAK9hB,SAAL,CAAe4I,mBAAf,CAAmCwZ,SAAnC,EAA8C,KAAKN,mBAAnD;AACH;;AACD,mBAAK9hB,SAAL,CAAe2I,gBAAf,CAAgCyZ,SAAhC,EAA2CD,EAA3C;;AACA,mBAAKL,mBAAL,GAA2BK,EAA3B;AACH;AACJ;;;iBACD,yBAAgB;AACZ,gBAAI,CAAC,KAAKN,oBAAV,EAAgC;AAC5B,kBAAM7hB,SAAS,GAAG,KAAKA,SAAvB;;AACA,kBAAIA,SAAS,CAACsiB,iBAAd,EAAiC;AAC7B,qBAAKT,oBAAL,GAA4B,kBAA5B;AACH,eAFD,MAGK,IAAI7hB,SAAS,CAACuiB,uBAAd,EAAuC;AACxC,qBAAKV,oBAAL,GAA4B,wBAA5B;AACH,eAFI,MAGA,IAAI7hB,SAAS,CAACwiB,oBAAd,EAAoC;AACrC,qBAAKX,oBAAL,GAA4B,qBAA5B;AACH,eAFI,MAGA,IAAI7hB,SAAS,CAACyiB,mBAAd,EAAmC;AACpC,qBAAKZ,oBAAL,GAA4B,oBAA5B;AACH;AACJ;;AACD,mBAAO,KAAKA,oBAAZ;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,gCAAuB;AACnB,gBAAM7hB,SAAS,GAAG,KAAKA,SAAvB;AACA,mBAAOA,SAAS,CAACiiB,iBAAV,IACHjiB,SAAS,CAAC0iB,uBADP,IAEH1iB,SAAS,CAAC2iB,oBAFP,IAGH3iB,SAAS,CAAC4iB,mBAHP,IAIH,IAJJ;AAKH;;;;QA9DoC/Y,gB;;AAgEzC+X,gCAA0B,CAACzc,IAA3B,GAAkC,SAAS0d,kCAAT,CAA4Cxd,CAA5C,EAA+C;AAAE,eAAO,KAAKA,CAAC,IAAIuc,0BAAV,EAAsC,uDAAgB,wDAAhB,CAAtC,EAAiE,uDAAgB,8DAAhB,CAAjE,CAAP;AAA4G,OAA/L;;AACAA,gCAA0B,CAACtc,KAA3B,GAAmC,yEAAmB;AAAEC,eAAO,EAAE,SAASsd,kCAAT,GAA8C;AAAE,iBAAO,IAAIjB,0BAAJ,CAA+B,+DAAS,wDAAT,CAA/B,EAAmD,+DAAS,8DAAT,CAAnD,CAAP;AAAgF,SAA3I;AAA6Ipc,aAAK,EAAEoc,0BAApJ;AAAgLnc,kBAAU,EAAE;AAA5L,OAAnB,CAAnC;;AACAmc,gCAA0B,CAAClc,cAA3B,GAA4C;AAAA,eAAM,CAC9C;AAAEC,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAAEF,gBAAI,EAAE,oDAAR;AAAgBG,gBAAI,EAAE,CAAC,wDAAD;AAAtB,WAAD;AAA/B,SAD8C,EAE9C;AAAEH,cAAI,EAAE;AAAR,SAF8C,CAAN;AAAA,OAA5C;AAIA;;;AAAc,OAAC,YAAY;AAAE,wEAAyBic,0BAAzB,EAAqD,CAAC;AAC3Ejc,cAAI,EAAE,wDADqE;AAE3EG,cAAI,EAAE,CAAC;AAAEL,sBAAU,EAAE;AAAd,WAAD;AAFqE,SAAD,CAArD,EAGrB,YAAY;AAAE,iBAAO,CAAC;AAAEE,gBAAI,EAAEC,SAAR;AAAmBC,sBAAU,EAAE,CAAC;AAC9CF,kBAAI,EAAE,oDADwC;AAE9CG,kBAAI,EAAE,CAAC,wDAAD;AAFwC,aAAD;AAA/B,WAAD,EAGX;AAAEH,gBAAI,EAAE;AAAR,WAHW,CAAP;AAGyB,SANlB,EAMoB,IANpB;AAM4B,OAN3C;AAQd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAIA;;;;;;;;;;;;;;;;;;AC9oGA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAkBO,UAAMmd,wBAAwB,GAAoC;AACvEC,uBAAe,EAAE;AADsD,OAAlE;;UA4BMC,U;;;;;cAAAA;;;;2BAAAA,U;AAAU,S;AAAA,kBAfZ,CACP,4DADO,EAEP,yDAAaC,OAAb,EAFO,EAGP,2EAHO,EAIP,sEAJO,EAKP,0DALO,EAMP,kEANO,EAOP,qEAPO,EAQP,yEARO,EASP,6EATO,EAUP,6DAVO,EAWP,2DAAcA,OAAd,EAXO,CAeY;;;;4HAAVD,U,EAAU;AAAA,yBArBnB,qEAqBmB,EApBnB,0FAoBmB,EAnBnB,kGAmBmB,EAlBnB,wEAkBmB,EAjBnB,6DAiBmB;AAjBN,oBAGb,4DAHa,EAGD,wDAHC,EAKb,2EALa,EAMb,sEANa,EAOb,0DAPa,EAQb,kEARa,EASb,qEATa,EAUb,yEAVa,EAWb,6EAXa,EAYb,6DAZa,EAYG,0DAZH;AAiBM,S;AALH,O;;;;;wEAKPA,U,EAAU;gBAvBtB,sDAuBsB;iBAvBb;AACRtB,wBAAY,EAAE,CACZ,qEADY,EAEZ,0FAFY,EAGZ,kGAHY,EAIZ,wEAJY,EAKZ,6DALY,CADN;AAQRF,mBAAO,EAAE,CACP,4DADO,EAEP,yDAAayB,OAAb,EAFO,EAGP,2EAHO,EAIP,sEAJO,EAKP,0DALO,EAMP,kEANO,EAOP,qEAPO,EAQP,yEARO,EASP,6EATO,EAUP,6DAVO,EAWP,2DAAcA,OAAd,EAXO;AARD,W;AAuBa,U;;;;;;;;;;;;;;;;;;AC9CvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACsBI;;AACE;;AAGE;;AAAwB;;AAAsC;;AAChE;;AACF;;;;;;AA8KE;;AAME;;AACE;;AACE;;AACF;;AACF;;AACF;;;;;;AAuCA;;AACE;;AACF;;;;;;AAcJ;;AAGE;;AACE;;AACE;;AACF;;AACF;;AACF;;;;;;AAHM;;AAAA;;;;;;AALN;;;;;;;AACG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UD/PQC,qB;AAQX,uCACUC,EADV,EAEUC,WAFV,EAGUC,MAHV,EAGwB;AAAA;;AAFd,eAAAF,EAAA,GAAAA,EAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAC,MAAA,GAAAA,MAAA,CAAc,CANxB;;AACQ,eAAAngB,WAAA,GAA8B,EAA9B,CAKgB,CALkB;;AAOxC,eAAKogB,UAAL,GAAkB,KAAKF,WAAL,CAAiBE,UAAnC,CAFsB,CAGtB;;AACA,cAAI,KAAKF,WAAL,CAAiBG,gBAArB,EAAuC;AACrC,iBAAKF,MAAL,CAAYG,QAAZ,CAAqB,CAAC,GAAD,CAArB;AACD;AACF;;;;iBAED,oBAAQ;AACN,iBAAKC,QAAL;AACD,W,CAED;;;;eACA,eAAQ;AACN,mBAAO,KAAKC,gBAAL,CAAsBC,QAA7B;AACD;;;iBAED,oBAAW;AACT,iBAAKD,gBAAL,GAAwB,KAAKP,EAAL,CAAQS,KAAR,CACtB;AACEC,sBAAQ,EAAE,CACR,EADQ,EAER,0DAAWC,OAAX,CAAmB,CACjB,0DAAWC,QADM,EAEjB,0DAAWC,SAAX,CAAqB,CAArB,CAFiB,EAGjB,0DAAWC,SAAX,CAAqB,GAArB,CAHiB,CAAnB,CAFQ,CADZ;AASEC,mBAAK,EAAE,CACL,aADK,EAEL,0DAAWJ,OAAX,CAAmB,CACjB,0DAAWC,QADM,EAEjB,0DAAWG,KAFM,EAGjB,0DAAWF,SAAX,CAAqB,CAArB,CAHiB,EAIjB,0DAAWC,SAAX,CAAqB,GAArB,CAJiB,CAAnB,CAFK,CATT;AAkBEE,sBAAQ,EAAE,CACR,EADQ,EAER,0DAAWL,OAAX,CAAmB,CACjB,0DAAWC,QADM,EAEjB,0DAAWC,SAAX,CAAqB,CAArB,CAFiB,EAGjB,0DAAWC,SAAX,CAAqB,GAArB,CAHiB,CAAnB,CAFQ,CAlBZ;AA0BEG,uBAAS,EAAE,CACT,EADS,EAET,0DAAWN,OAAX,CAAmB,CACjB,0DAAWC,QADM,EAEjB,0DAAWC,SAAX,CAAqB,CAArB,CAFiB,EAGjB,0DAAWC,SAAX,CAAqB,GAArB,CAHiB,CAAnB,CAFS,CA1Bb;AAkCEI,mBAAK,EAAE,CAAC,KAAD,EAAQ,0DAAWP,OAAX,CAAmB,CAAC,0DAAWC,QAAZ,CAAnB,CAAR;AAlCT,aADsB,EAqCtB;AACEO,uBAAS,EAAE,qFAAyBC;AADtC,aArCsB,CAAxB;AAyCD;;;iBAED,kBAAS;AAAA;;AACP,iBAAKC,QAAL,GAAgB,KAAhB;AACA,gBAAMC,MAAM,GAAG,EAAf;AACAne,kBAAM,CAACC,IAAP,CAAY,KAAKme,CAAjB,EAAoB/V,OAApB,CAA4B,UAAAnI,GAAG,EAAI;AACjCie,oBAAM,CAACje,GAAD,CAAN,GAAc,OAAI,CAACke,CAAL,CAAOle,GAAP,EAAYgB,KAA1B;AACD,aAFD;AAGA,gBAAMmd,OAAO,GAAG,IAAI,4DAAJ,EAAhB;AACAA,mBAAO,CAACC,OAAR,CAAgBH,MAAhB;AACA,gBAAMI,kBAAkB,GAAG,KAAKzB,WAAL,CACxB0B,YADwB,CACXH,OADW,EAExBrY,IAFwB,CAEnB,8DAFmB,EAGxBzJ,SAHwB,CAGd,UAACkiB,IAAD,EAAqB;AAC9B,kBAAIA,IAAJ,EAAU;AACR,uBAAI,CAAC1B,MAAL,CAAYG,QAAZ,CAAqB,CAAC,GAAD,CAArB;AACD,eAFD,MAEO;AACL,uBAAI,CAACgB,QAAL,GAAgB,IAAhB;AACD;AACF,aATwB,CAA3B;AAUA,iBAAKthB,WAAL,CAAiB0E,IAAjB,CAAsBid,kBAAtB;AACD;;;iBAED,uBAAc;AACZ,iBAAK3hB,WAAL,CAAiByL,OAAjB,CAAyB,UAACqW,EAAD;AAAA,qBAAQA,EAAE,CAAC9hB,WAAH,EAAR;AAAA,aAAzB;AACD;;;;;;;yBAhGUggB,qB,EAAqB,2H,EAAA,mI,EAAA,uH;AAAA,O;;;cAArBA,qB;AAAqB,yC;AAAA,iB;AAAA,gB;AAAA,yrE;AAAA;AAAA;ACblC;;AAEE;;AAKE;AAAA,qBAAY,IAAA+B,MAAA,EAAZ;AAAoB,aAApB;;AAGA;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AAIA;;AAUA;;AACE;;AAAyD;;AAAQ;;AACjE;;AAWA;;AAQA;;AAQA;;AAQF;;AAIA;;AACE;;AAAyD;;AAAK;;AAC9D;;AASA;;AAQA;;AAQA;;AAQA;;AAQF;;AAIA;;AACE;;AACG;;AAAQ;;AAEX;;AAWA;;AAQA;;AAQA;;AAQF;;AAIA;;AACE;;AACG;;AAAgB;;AAEnB;;AAWA;;AAQA;;AAQA;;AAQA;;AAYF;;AAIA;;AACE;;AACE;;AAA8D;;AAC/C;;AAGZ;;AAAoB;;AACtB;;AACD;;AACF;;AACF;;AAIA;;AACE;;AAQE;;AACF;;AACA;;AAME;;AACF;;AAEA;;;;AAGF;;AAEF;;AAEF;;AAGA;;;;;;AA/PI;;AAAA;;AAee;;AAAA;;AAmBX;;AAAA;;AAKA;;AAAA,8FAA8B,yBAA9B,EAA8B,iHAA9B;;AAQA;;AAAA,8FAA8B,yBAA9B,EAA8B,iHAA9B;;AAQA;;AAAA,8FAA8B,yBAA9B,EAA8B,iHAA9B;;AAoBA;;AAAA;;AAGA;;AAAA,8FAA8B,yBAA9B,EAA8B,8GAA9B;;AAQA;;AAAA,8FAA8B,yBAA9B,EAA8B,8GAA9B;;AAQA;;AAAA,8FAA8B,yBAA9B,EAA8B,8GAA9B;;AAQA;;AAAA,8FAA8B,yBAA9B,EAA8B,8GAA9B;;AAsBA;;AAAA;;AAKA;;AAAA,8FAA8B,yBAA9B,EAA8B,iHAA9B;;AAQA;;AAAA,8FAA8B,yBAA9B,EAA8B,iHAA9B;;AAQA;;AAAA,8FAA8B,yBAA9B,EAA8B,kHAA9B;;AAsBA;;AAAA;;AAKA;;AAAA,8FAA8B,yBAA9B,EAA8B,mHAA9B;;AAQA;;AAAA,8FAA8B,yBAA9B,EAA8B,mHAA9B;;AAQA;;AAAA,8FAA8B,yBAA9B,EAA8B,mHAA9B;;AAQC;;AAAA;;AAiCD;;AAAA;;AAgBa;;AAAA;;;;;;;;;;wED9OR/B,qB,EAAqB;gBALjC,uDAKiC;iBALvB;AACTzP,oBAAQ,EAAE,kBADD;AAETyR,uBAAW,EAAE,+BAFJ;AAGTC,qBAAS,EAAE,CAAC,+BAAD;AAHF,W;AAKuB,U;;;;;;;;;;;;;;;;;;;;;;;;;;AETlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACWY;;AAAsD;AAAA;;AAAA;;AAAA;AAAA;;AAEtD;;AACF;;;;;;AAuBA;;AAEE;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACF;;;;;;;;AAEE;;AACE;;AAA4B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC1B;;AAEE;;AACA;;AACE;;AAAiB;;AACrB;;AACF;;AACF;;;;;;AAPS;;AAAA;;AAID;;AAAA;;;;;;;;AAUV;;AACE;;AACA;AAAA;;AAAA;;AAAA;AAAA;;AAA2B;;AAAS;;AACtC;;;;;;;;AAEE;;AACA;AAAA;;AAAA;;AAAA;AAAA;;AAAkB;;AAAe;;;;;;AAhEvC;;AAEE;;AACE;;AACE;;AAQA;;AAA4E;;AAAW;;AACzF;;AACC;;AACC;;AAAkC;AAAA;AAAA,wBAAW,aAAX;AAAwB,WAAxB;;AAElC;;AACF;;AACA;;AAGA;;AACF;;AACA;;AAAuD;AAAA;AAAA,wBAAW,aAAX;AAAwB,WAAxB;;AACrD;;AAAyB;;AAAO;;AAClC;;AACF;;AACA;;AACE;;AACE;;AAWA;;AACE;;AAUF;;AACF;;AACF;;AACA;;AACE;;AACE;AAAA;AAAA,wBAAW,aAAX;AAAwB,WAAxB;;AAA4B;;AAAK;;AACjC;;AAIA;;AAOF;;;;;;;;AAjEa;;AAAA;;AAgBX;;AAAA;;AAUM;;AAAA;;AAY8B;;AAAA;;AAgBrB;;AAAA,iGAAqB,UAArB,EAAqB,IAArB;;;;;;AAiDrB;;AACE;;AACE;;AAAwB;;AAA+B;;AACzD;;AACF;;;;;;AAKA;;AACE;;AAAwB;;AAC4C;;AAEpE;;AACE;;AAAI;;AAAO;;AAAqB;;AAAS;;AAAyB;;AACpE;;AAEF;;;;;;AAP+B;;AAAA;;AAIc;;AAAA;;;;;;AAsE3C;;AACE;;AACF;;;;;;AASJ;;AACE;;AACE;;AACE;;AACF;;AACF;;AACF;;;;;;AAHM;;AAAA;;;;;;AAHN;;;;;;;AAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UD3LJC,c;AA2BX,gCACUpgB,MADV,EAEUme,EAFV,EAGUE,MAHV,EAIUgC,YAJV,EAKUC,YALV,EAMUC,YANV,EAOUC,MAPV,EAQUC,OARV,EASUC,EATV,EAUUC,WAVV,EAWUC,cAXV,EAWwC;AAAA;;AAAA;;AAV9B,eAAA5gB,MAAA,GAAAA,MAAA;AACA,eAAAme,EAAA,GAAAA,EAAA;AACA,eAAAE,MAAA,GAAAA,MAAA;AACA,eAAAgC,YAAA,GAAAA,YAAA;AACA,eAAAC,YAAA,GAAAA,YAAA;AACA,eAAAC,YAAA,GAAAA,YAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,OAAA,GAAAA,OAAA;AACA,eAAAC,EAAA,GAAAA,EAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AArCH,eAAAC,aAAA,GAAgB,KAAKR,YAAL,CAAkBS,aAAlC;AACP,eAAAC,WAAA,GAAmB;AACjB7B,iBAAK,EAAE,EADU;AAEjBC,oBAAQ,EAAE;AAFO,WAAnB;AAWA,eAAA6B,YAAA,GAAuB,EAAvB;AACA,eAAAC,aAAA,GAAyB,KAAzB;AACA,eAAAC,WAAA,GAAuB,KAAvB;AACA,eAAAC,WAAA,GAAuB,KAAvB;AACA,eAAAC,YAAA,GAAwB,KAAxB;AAGA,eAAA5S,MAAA,GAAiB,CAAjB;AACA,eAAA6S,KAAA,GAAgB,EAAhB;AACA,eAAAC,aAAA,GAAgB,IAAI,0DAAJ,EAAhB;AACA,eAAAC,QAAA,GAAW,IAAI,4CAAJ,EAAX;AAiBEvhB,gBAAM,CAACwhB,QAAP,GAAkB,QAAlB;AACAxhB,gBAAM,CAACyhB,QAAP,GAAkB,KAAlB;AACA,eAAKC,IAAL,GAAY,CAAZ;AACA,eAAKC,SAAL,GAAiB,KAAjB;AAGA,eAAKL,aAAL,CAAmBM,YAAnB,CAAgCta,IAAhC,CAAqC,iEAAU,KAAKia,QAAf,CAArC,EAA8D,oEAAa,IAAb,CAA9D,EACC1jB,SADD,CACW,UAAAgkB,QAAQ,EAAI;AACrB,gBAAIA,QAAQ,CAACvP,IAAT,GAAgBtP,MAAhB,IAA0B,CAA1B,IAA+B6e,QAAQ,IAAI,EAA/C,EAAoD;AAClD,kBAAG,OAAI,CAACT,YAAL,IAAqB,IAAxB,EAA8B;AAC5B,uBAAI,CAACF,WAAL,GAAmB,KAAnB;;AACA,uBAAI,CAACY,eAAL;AACD,eAHD,MAIK;AACH,uBAAI,CAACZ,WAAL,GAAmB,KAAnB;;AACA,uBAAI,CAACa,WAAL;AACD;AAEF,aAVD,MAUO;AACL,qBAAI,CAACC,UAAL,CAAgBH,QAAhB;AACD;AACF,WAfD;AAgBD;;;;iBAED,oBAAQ;AACN,iBAAKpB,OAAL,CAAawB,IAAb;AACA,iBAAKC,aAAL;AACA,iBAAKH,WAAL;AACD;;;iBAED,mBAAU;AACR,iBAAKnB,cAAL,CAAoBuB,SAApB,CACI;AAAEC,mBAAK,EAAE,CAAC,WAAD,EAAc,YAAd;AAAT,aADJ,CAC2C;AAD3C;AAGH;;;iBAEC,yBAAgB;AACd,iBAAKC,SAAL,GAAiB,KAAKlE,EAAL,CAAQS,KAAR,CAAc;AAC7BM,mBAAK,EAAE,CACL,KAAK6B,WAAL,CAAiB7B,KADZ,EAEL,0DAAWJ,OAAX,CAAmB,CACjB,0DAAWC,QADM,EAEjB,0DAAWG,KAFM,EAGjB,0DAAWF,SAAX,CAAqB,CAArB,CAHiB,EAIjB,0DAAWC,SAAX,CAAqB,GAArB,CAJiB,CAAnB,CAFK,CADsB;AAU7BE,sBAAQ,EAAE,CACR,KAAK4B,WAAL,CAAiB5B,QADT,EAER,0DAAWL,OAAX,CAAmB,CACjB,0DAAWC,QADM,EAEjB,0DAAWC,SAAX,CAAqB,CAArB,CAFiB,EAGjB,0DAAWC,SAAX,CAAqB,GAArB,CAHiB,CAAnB,CAFQ;AAVmB,aAAd,CAAjB;AAmBD;;;iBAED,wBAAeqD,IAAf,EAAqB;AACnB,iBAAKjC,YAAL,CAAkBkC,UAAlB,CAA6BD,IAA7B,EAAmCzkB,SAAnC,CAA6C,UAAA2kB,IAAI,EAAI,CACpD,CADD;AAED;;;iBAGD,6BAAoB;AAElB,gBAAG,KAAKpB,YAAL,IAAqB,IAAxB,EAA6B;AAC3B,mBAAKqB,QAAL;AACD,aAFD,MAGK;AACH,mBAAKrB,YAAL,GAAoB,KAApB;AACA,mBAAKF,WAAL,GAAmB,KAAnB;AACA,mBAAKC,WAAL,GAAmB,KAAnB;AACA,mBAAKY,WAAL;AACD;AAEF;;;iBAGD,oBAAW;AAET,gBAAG,KAAKL,IAAL,IAAa,CAAhB,EAAkB;AAChB,mBAAKN,YAAL,GAAoB,KAApB;AACA,mBAAKF,WAAL,GAAmB,KAAnB;AACA,mBAAKC,WAAL,GAAmB,KAAnB;AACA,mBAAKY,WAAL;AACD,aALD,MAMK;AACH,mBAAKL,IAAL;AACA,mBAAKI,eAAL;AACD;AAEF;;;iBAGD,wBAAe;AAAA;;AACb,gBAAIY,IAAI,GAAG,IAAX;;AACA,gBAAI,CAAC,KAAKrC,YAAL,CAAkBsC,YAAvB,EAAqC;AACnC,mBAAKnC,MAAL,CAAYoC,KAAZ,CAAkB,oBAAlB,EAAwC,YAAxC;AACA;AACD;;AAED,gBAAMC,OAAO,GAAgB;AAC3BC,oBAAM,EAAE,KAAKzC,YAAL,CAAkBsC,YAAlB,CAA+B1K,EADZ;AAE3BiH,mBAAK,EAAE,KAAKmD,SAAL,CAAe7f,KAAf,CAAqB0c,KAFD;AAG3BC,sBAAQ,EAAE,KAAKkD,SAAL,CAAe7f,KAAf,CAAqB2c;AAHJ,aAA7B;;AAMA,gBAAI,KAAKkB,YAAL,CAAkBsC,YAAlB,CAA+BI,UAAnC,EAA+C;AAC7CF,qBAAO,CAACC,MAAR,GAAiB,KAAKzC,YAAL,CAAkBsC,YAAlB,CAA+BK,aAAhD;AACAH,qBAAO,CAACI,YAAR,GAAuB,KAAK5C,YAAL,CAAkBsC,YAAlB,CAA+B1K,EAAtD;AACA4K,qBAAO,CAACK,QAAR,GAAmB,KAAK7C,YAAL,CAAkBsC,YAAlB,CAA+BO,QAAlD;AACD;;AAED,iBAAKzC,OAAL,CAAa0C,IAAb;;AACA,iBAAK7C,YAAL,CAAkB8C,YAAlB,CAA+BP,OAA/B,EAAwChlB,SAAxC,CAAkD,UAACwlB,GAAD,EAAoC;;;AACpF,kBAAI,CAACA,GAAG,CAACC,SAAJ,EAAL,EAAsB;AACpB,oBAAI,CAAJ,KAAID,GAAG,CAACb,IAAJ,MAAQ,IAAR,IAAQ,aAAR,GAAQ,MAAR,GAAQ,GAAE7C,OAAd,EAAuB;AACrB4D,8BAAY,CAACC,OAAb,CAAqB,SAArB,EAAgC,MAAhC;AACD;;AACD,oBAAI,CAAJ,KAAIH,GAAG,CAACb,IAAJ,MAAQ,IAAR,IAAQ,aAAR,GAAQ,MAAR,GAAQ,GAAEzC,IAAF,CAAO0D,KAAnB,EAA0B;AACxB,yBAAI,CAAChD,OAAL,CAAawB,IAAb;;AACA,yBAAI,CAACzB,MAAL,CAAYkD,OAAZ,gCAA4CL,GAAG,CAACb,IAAJ,CAASzC,IAAT,CAAc4D,QAA1D,QAAuE,UAAvE;;AACA,yBAAI,CAACtF,MAAL,CAAYuF,aAAZ,CAA0B,kBAA1B,EAA8CC,IAA9C,CAAmD,UAAAC,GAAG,EAAG,CAAE,CAA3D;AACD,iBAJD,MAKK;AACH,yBAAI,CAACrD,OAAL,CAAawB,IAAb;;AACA,yBAAI,CAACzB,MAAL,CAAYoC,KAAZ,CAAkB,oCAAlB,EAAwD,gBAAxD;;AACA;AACD;AACF,eAdD,MAeK;AACH,uBAAI,CAACnC,OAAL,CAAawB,IAAb;;AACA,oBAAIoB,GAAG,CAACU,MAAR,EAAgB;AACd,yBAAI,CAACvD,MAAL,CAAYwD,OAAZ,CAAoB,CAAD,WAACX,GAAG,SAAH,IAAAA,GAAG,WAAH,GAAG,MAAH,GAAAA,GAAG,CAAEU,MAAL,CAAY,CAAZ,CAAD,MAAc,IAAd,IAAc,aAAd,GAAc,MAAd,GAAc,GAAGnB,KAAhB,MAAqB,IAArB,IAAqB,aAArB,GAAqB,MAArB,GAAqB,GAAEqB,OAA3C,EAAoD,UAApD;;AACA;AACD;AACF;AACF,aAvBD;AAwBD;;;iBAGD,uBAAc;AAAA;;AACZ,gBAAI,KAAKtC,SAAT,EAAoB;AACpB,iBAAKA,SAAL,GAAiB,IAAjB;;AACA,iBAAKtB,YAAL,CAAkB0B,WAAlB,CAA8B,KAAKL,IAAnC,EAAyC7jB,SAAzC,CAAmD,UAACwlB,GAAD,EAAkC;AACnF,kBAAG,CAACA,GAAG,CAACC,SAAJ,EAAJ,EAAqB;AACnB,uBAAI,CAACY,QAAL,GAAgBb,GAAG,CAACb,IAApB;AACA,uBAAI,CAAC2B,SAAL,GAAiBd,GAAG,CAACb,IAArB;AACA4B,uBAAO,CAACC,GAAR,CAAY,OAAI,CAACH,QAAjB;;AACA,oBAAG,OAAI,CAACA,QAAL,CAAcI,IAAd,CAAmB,UAAAhC,IAAI,EAAI;AAAD;;AAAC,yBAAAA,IAAI,CAACrK,EAAL,KAAO,MAAI,OAAI,CAACoI,YAAL,CAAkBsC,YAAtB,MAAkC,IAAlC,IAAkC,aAAlC,GAAkC,MAAlC,GAAkC,GAAE1K,EAA3C;AAA6C,iBAAxE,CAAH,EAA8E;AAC5E,sBAAG,OAAI,CAACkJ,WAAR,EACE,OAAI,CAACoD,cAAL,CAAoB,OAAI,CAAClE,YAAL,CAAkBsC,YAAtC;AACH;AACF;;AACD,qBAAI,CAAChB,SAAL,GAAiB,KAAjB;AACD,aAXD,EAWG,UAACiB,KAAD,EAAW;AACZ,qBAAI,CAACpC,MAAL,CAAYoC,KAAZ,CAAkBA,KAAK,CAACqB,OAAxB;AACD,aAbD;AAcD;;;iBAED,gCAAuBO,OAAvB,EAAgC;AAC9B,iBAAKjE,YAAL,CAAkB5G,IAAlB,CAAuB6K,OAAvB,EAAgC;AAAEC,sBAAQ,EAAE,IAAZ;AAAkBC,kBAAI,EAAE;AAAxB,aAAhC;AACA,iBAAKxD,WAAL,GAAmB,KAAnB,CAF8B,CAG9B;;AACA,iBAAKgD,QAAL,GAAgB,KAAKC,SAArB;AAED;;;iBAED,oBAAWnD,YAAX,EAAiC;AAAA;;AAC/B,gBAAG,KAAKI,YAAR,EAAsB;AACpB,mBAAKD,WAAL,GAAmB,IAAnB;;AACA,kBAAIH,YAAY,CAAC1O,IAAb,GAAoBtP,MAApB,IAA8B,CAA9B,IAAmCge,YAAY,IAAI,EAAvD,EAA2D;AACzD,qBAAKE,WAAL,GAAmB,KAAnB;AACA,qBAAKR,EAAL,CAAQiE,aAAR;AACA;AACD,eAJD,MAKK;AACH,qBAAKtE,YAAL,CAAkBuE,yBAAlB,CAA4C5D,YAA5C,EAA0D,KAAKxS,MAA/D,EAAuE,KAAK6S,KAA5E,EAAmFxjB,SAAnF,CAA6F,UAACwlB,GAAD,EAAkC;AAE7H,sBAAI,CAACA,GAAG,CAACC,SAAJ,EAAL,EAAsB;AACpB,wBAAID,GAAG,CAACb,IAAJ,CAASxf,MAAT,IAAmB,CAAvB,EAA0B;AACxB,6BAAI,CAACke,WAAL,GAAmB,IAAnB;AACA,6BAAI,CAACgD,QAAL,GAAgBb,GAAG,CAACb,IAApB;AACA;AACD,qBAJD,MAKK,IAAIa,GAAG,CAACb,IAAJ,CAASxf,MAAT,GAAkB,CAAtB,EAAyB;AAE5BqgB,yBAAG,CAACb,IAAJ,CAAStP,GAAT,CAAa,UAAA2R,IAAI,EAAI;AACnBA,4BAAI,CAAC9B,UAAL,GAAkB,IAAlB;AACA8B,4BAAI,CAACC,OAAL,GAAe,OAAI,CAACzE,YAAL,CAAkBsC,YAAlB,CAA+BmC,OAA9C;AACAD,4BAAI,CAAC7B,aAAL,GAAqB,OAAI,CAAC3C,YAAL,CAAkBsC,YAAlB,CAA+B1K,EAApD;AAED,uBALD;AAMA,6BAAI,CAACiM,QAAL,GAAgBb,GAAG,CAACb,IAApB;AACA,6BAAI,CAACtB,WAAL,GAAmB,KAAnB;;AACA,6BAAI,CAACR,EAAL,CAAQiE,aAAR;AACD;;AACD,2BAAI,CAACjE,EAAL,CAAQiE,aAAR;AACD;AACF,iBAtBD;AAuBD;AACF,aAhCD,MAiCO;AACL,mBAAKxD,WAAL,GAAiB,KAAjB;;AACA,kBAAIH,YAAY,CAAC1O,IAAb,GAAoBtP,MAApB,IAA8B,CAA9B,IAAmCge,YAAY,IAAI,EAAvD,EAA2D;AACzD,qBAAKE,WAAL,GAAmB,KAAnB;AACA,qBAAKR,EAAL,CAAQiE,aAAR;AACA;AACD,eAJD,MAKK;AACH,qBAAKtE,YAAL,CAAkB0E,gBAAlB,CAAmC/D,YAAnC,EAAiD,KAAKxS,MAAtD,EAA8D,KAAK6S,KAAnE,EAA0ExjB,SAA1E,CAAoF,UAACwlB,GAAD,EAAkC;AACpH,sBAAI,CAACA,GAAG,CAACC,SAAJ,EAAL,EAAsB;AACpB,wBAAID,GAAG,CAACb,IAAJ,CAASxf,MAAT,IAAmB,CAAnB,IAAwBge,YAAY,CAAC1O,IAAb,GAAoBtP,MAApB,KAA+B,CAA3D,EAA8D;AAC5D,6BAAI,CAACke,WAAL,GAAmB,IAAnB;AACA,6BAAI,CAACgD,QAAL,GAAgBb,GAAG,CAACb,IAApB;AAEA;AACD,qBALD,MAMK,IAAIa,GAAG,CAACb,IAAJ,CAASxf,MAAT,GAAkB,CAAtB,EAAyB;AAC5B,6BAAI,CAACkhB,QAAL,GAAgBb,GAAG,CAACb,IAApB;AACA,6BAAI,CAACtB,WAAL,GAAmB,KAAnB;;AACA,6BAAI,CAACR,EAAL,CAAQiE,aAAR;AACD;;AACD,2BAAI,CAACjE,EAAL,CAAQiE,aAAR;AACD;AACF,iBAfD;AAgBD;AACF;AACF;;;iBAKD,wBAAerC,IAAf,EAAqB;AACnB,gBAAI,CAACA,IAAI,CAAC0C,QAAV,EAAoB;AAClB,mBAAK5D,YAAL,GAAoB,KAApB;AACA,mBAAKb,YAAL,CAAkB0E,UAAlB;AACD;;AACD,iBAAK5E,YAAL,CAAkBsC,YAAlB,GAAiCL,IAAjC;AACA,4EAAU4C,UAAV,GAAuB5C,IAAI,CAACwC,OAA5B;AACA,iBAAK1D,YAAL,GAAoB,IAApB;;AACA,gBAAI,KAAKf,YAAL,CAAkBsC,YAAlB,CAA+BqC,QAAnC,EAA6C;AAC3C,mBAAK7D,WAAL,GAAmB,IAAnB;AACA,mBAAKW,eAAL;AACD,aAHD,MAIK;AACH,qBAAO,gDAAG,IAAH,CAAP;AACD;AACF;;;iBAED,yBAAgB;AACd,iBAAKJ,IAAL;AACA,iBAAKK,WAAL;AACD;;;iBAED,gBAAO;AACL,iBAAKL,IAAL;AACA,iBAAKI,eAAL;AACD;;;iBAED,2BAAkB;AAAA;;AAChB,iBAAKzB,YAAL,CAAkByB,eAAlB,CAAkC,KAAKJ,IAAvC,EAA8Cpa,IAA9C,CAAmD,4DAAK,CAAL,CAAnD,EAA4DzJ,SAA5D,CAAsE,UAACwlB,GAAD,EAAkC;AACtG,kBAAG,CAACA,GAAG,CAACC,SAAJ,EAAJ,EAAqB;AACnB,oBAAID,GAAG,CAACb,IAAJ,CAASxf,MAAT,IAAmB,CAAvB,EAA0B;AACxB,yBAAI,CAACkhB,QAAL,GAAgB,EAAhB;AACA,yBAAI,CAAChD,WAAL,GAAmB,IAAnB;AACA;AACD;;AACDmC,mBAAG,CAACb,IAAJ,CAAStP,GAAT,CAAa,UAAA2R,IAAI,EAAI;AACnBA,sBAAI,CAAC9B,UAAL,GAAkB,IAAlB;AACA8B,sBAAI,CAACC,OAAL,GAAe,OAAI,CAACzE,YAAL,CAAkBsC,YAAlB,CAA+BmC,OAA9C;AACAD,sBAAI,CAAC7B,aAAL,GAAqB,OAAI,CAAC3C,YAAL,CAAkBsC,YAAlB,CAA+B1K,EAApD;AACD,iBAJD;AAKA,uBAAI,CAACiM,QAAL,GAAgBb,GAAG,CAACb,IAApB;AACA,uBAAI,CAAC2B,SAAL,GAAiBd,GAAG,CAACb,IAArB;AACD;AACF,aAfD,EAeG,UAAAI,KAAK,EAAI;AACV,qBAAI,CAACpC,MAAL,CAAYoC,KAAZ,CAAkBA,KAAK,CAACqB,OAAxB;AACD,aAjBD;AAkBD;;;iBAED,uBAAW;AACT,iBAAK1C,QAAL,CAAcvZ,QAAd;AACA,iBAAKuZ,QAAL,CAAcrjB,WAAd;AACD;;;;;;;yBArUUkiB,c,EAAc,0I,EAAA,2H,EAAA,uH,EAAA,wI,EAAA,4I,EAAA,oI,EAAA,yH,EAAA,+H,EAAA,gI,EAAA,0I,EAAA,4H;AAAA,O;;;cAAdA,c;AAAc,kC;AAAA,oFAFd,CAAC,yEAAD,EAAiB,mEAAjB,EAA2B,yEAA3B,CAEc,E;AAF4B,iB;AAAA,gB;AAAA,00M;AAAA;AAAA;;;ACvBvD;;AACE;;AAAwB;;AAAa;;AACvC;;AAEA;;AACE;;AACE;;AACF;;AACA;;AACE;;AAyEA;;AACE;AAAA;;AAAA;;AAAA,qBAAS,IAAA+E,sBAAA,KAAT;AAAyC,aAAzC;;AAEA;;AACC;;AAAA;;AAEG;;AACE;;AACA;;AAGA;;AAGF;;AACF;;AAEF;;AACA;;AAAA;;AAAkJ;;AAAuB;;AAE3K;;AACF;;AAOA;;AACE;AAAA,qBAAY,IAAA/B,YAAA,EAAZ;AAA0B,aAA1B;;AAEA;;AAIA;;AASA;;;;AAWA;;AACE;;AAAyD;;AAAK;;AAC9D;;AAGA;;AAKA;;AAKA;;AAKA;;AAKF;;AAEA;;AACE;;AACE;;AAA8D;;AAAQ;;AAExE;;AAEA;;AAIA;;AAKA;;AAKA;;AAKF;;AAIA;;AACE;;AAEE;;AACF;;AAIA;;;;AAGF;;AAEF;;AAEF;;AAGA;;;;;;AAnNuF;;AA8GlE;;AAAA;;AAOF;;AAAA;;AAS+D;;AAAA;;AAc/B;;AAAA;;AAE/B;;AAAA,8FAA8B,yBAA9B,EAA8B,uGAA9B;;AAKA;;AAAA,8FAA8B,yBAA9B,EAA8B,uGAA9B;;AAKA;;AAAA,8FAA8B,yBAA9B,EAA8B,uGAA9B;;AAKA;;AAAA,8FAA8B,yBAA9B,EAA8B,uGAA9B;;AAeZ;;AAAA;;AAEY;;AAAA,8FAA8B,yBAA9B,EAA8B,0GAA9B;;AAKA;;AAAA,8FAA8B,yBAA9B,EAA8B,0GAA9B;;AAKA;;AAAA,8FAA8B,yBAA9B,EAA8B,0GAA9B;;AAWZ;;AAAA;;AAMa;;AAAA;;;;;;;;;;wEDhLRhD,c,EAAc;gBAN1B,uDAM0B;iBANhB;AACT3R,oBAAQ,EAAE,WADD;AAETyR,uBAAW,EAAE,wBAFJ;AAGTC,qBAAS,EAAE,CAAC,wBAAD,CAHF;AAIT5D,qBAAS,EAAE,CAAC,yEAAD,EAAiB,mEAAjB,EAA2B,yEAA3B;AAJF,W;AAMgB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE3B3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQa6I,e;AACX,iCAAoBhH,WAApB,EAA8C;AAAA;;AAA1B,eAAAA,WAAA,GAAAA,WAAA;AAClB,eAAKA,WAAL,CAAiBiH,MAAjB;AACD;;;;iBAED,oBAAQ,CAAW;;;;;;;yBALRD,e,EAAe,mI;AAAA,O;;;cAAfA,e;AAAe,mC;AAAA,gB;AAAA,e;AAAA;AAAA;ACR5B;;AAAG;;AAAa;;;;;;;;wEDQHA,e,EAAe;gBAL3B,uDAK2B;iBALjB;AACT3W,oBAAQ,EAAE,YADD;AAETyR,uBAAW,EAAE,yBAFJ;AAGTC,qBAAS,EAAE,CAAC,yBAAD;AAHF,W;AAKiB,U;;;;;;;;;;;;;;;;;;;;;;AER5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAUamF,a;AAKX,+BAAoBjF,YAApB,EAAgD;AAAA;;AAA5B,eAAAA,YAAA,GAAAA,YAAA;AAHpB,eAAAkF,KAAA,GAAc,IAAIC,IAAJ,EAAd;AACA,eAAAtB,QAAA,GAAwB,EAAxB;AAGE,eAAKxC,IAAL,GAAY,CAAZ;AACD;;;;iBAED,oBAAQ,CAEP;;;iBAGD,uBAAc;AAAA;;AACZ,iBAAKrB,YAAL,CAAkB0B,WAAlB,CAA8B,KAAKL,IAAnC,EAAyC7jB,SAAzC,CAAmD,UAACwlB,GAAD,EAAkC;AACnF,kBAAG,CAACA,GAAG,CAACC,SAAJ,EAAJ,EAAqB;AACnB,uBAAI,CAACY,QAAL,GAAgBb,GAAG,CAACb,IAApB;;AACA,uBAAI,CAACiD,cAAL;AACD;AACF,aALD,EAKG,UAAC7C,KAAD,EAAW,CACb,CAND;AAOD;;;iBAED,0BAAiB;AACf,gBAAI8C,SAAS,GAAG,KAAKrF,YAAL,CAAkBsC,YAAlC;;AACA,gBAAI,CAAC+C,SAAL,EAAgB;AACd,mBAAKrF,YAAL,CAAkBsC,YAAlB,GAAiC,KAAKuB,QAAL,CAAc,CAAd,CAAjC;AACA;AACD;AACF;;;;;;;yBA9BUoB,a,EAAa,wI;AAAA,O;;;cAAbA,a;AAAa,iC;AAAA,iB;AAAA,e;AAAA,kpC;AAAA;AAAA;ACI1B;;AAEE;;AAEE;;AAEE;;AAEE;;AACE;;AACF;;AAIA;;AACE;;AAEF;;AAEA;;AAAyH;;AAAoB;;AAE/I;;AAIA;;AAGF;;AAIA;;AAGE;;AACE;;AACF;;AAUF;;AAEF;;AAEF;;;;;;;;;wEDvDaA,a,EAAa;gBALzB,uDAKyB;iBALf;AACT7W,oBAAQ,EAAE,UADD;AAETyR,uBAAW,EAAE,uBAFJ;AAGTC,qBAAS,EAAE,CAAC,uBAAD;AAHF,W;AAKe,U;;;;;;;;;;;;;;;;;;;;;;AER1B;AAAA;;;AAAA;AAAA;AAAA;;UAAawF,wB;;;;;;;;AACX;;;;AAIA,iCAAqBC,OAArB,EAA+C;AAC7C,gBAAMzG,QAAQ,GAAGyG,OAAO,CAACzN,GAAR,CAAY,UAAZ,EAAwB3V,KAAzC;AAEA,gBAAMqjB,eAAe,GAAGD,OAAO,CAACzN,GAAR,CAAY,WAAZ,EAAyB3V,KAAjD;;AAEA,gBAAI2c,QAAQ,KAAK0G,eAAjB,EAAkC;AAChCD,qBAAO,CAACzN,GAAR,CAAY,WAAZ,EAAyB2N,SAAzB,CAAmC;AAAEC,+BAAe,EAAE;AAAnB,eAAnC;AACD,aAFD,MAEO;AACL,qBAAO,IAAP;AACD;AACF;;;;;;;;;;;;;;;;;;;;;ACjBH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACwBI;;AACE;;AAGE;;AAAwB;;AAA6B;;AACvD;;AACF;;;;;;AAoEE;;AACE;;AACF;;;;;;AAOJ;;AACE;;AAWE;;AACE;;AACE;;AAA+C;;AAAiB;;AAChE;;AACE;;AAAmC;;AACnC;;AAAa;;AACf;;AACA;;AAIE;;AACF;;AACF;;AACF;;AAEF;;AACF;;;;;;AASA;;AAGE;;AACE;;AACE;;AACF;;AACF;;AACF;;;;;;AAHM;;AAAA;;;;;;AALN;;;;;;;AACG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AD5IL,UAAKC,WAAL;;AAAA,iBAAKA,WAAL,EAAgB;AACd;AACA;AACA;AACD,OAJD,EAAKA,WAAW,KAAXA,WAAW,MAAhB;;UAWaC,uB;AAQX,yCACU9H,EADV,EAEUC,WAFV,EAEkC;AAAA;;AADxB,eAAAD,EAAA,GAAAA,EAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AARV,eAAA8H,UAAA,GAA0BF,WAAW,CAACG,YAAtC;AACA,eAAAC,WAAA,GAAcJ,WAAd,CAOkC,CAJlC;;AACQ,eAAA9nB,WAAA,GAA8B,EAA9B,CAG0B,CAHQ;;AAKxC,eAAKogB,UAAL,GAAkB,KAAKF,WAAL,CAAiBE,UAAnC;AACD;;;;iBAED,oBAAQ;AACN,iBAAKG,QAAL;AACD,W,CAED;;;;eACA,eAAQ;AACN,mBAAO,KAAK4H,kBAAL,CAAwB1H,QAA/B;AACD;;;iBAED,oBAAW;AACT,iBAAK0H,kBAAL,GAA0B,KAAKlI,EAAL,CAAQS,KAAR,CAAc;AACtCM,mBAAK,EAAE,CACL,gBADK,EAEL,0DAAWJ,OAAX,CAAmB,CACjB,0DAAWC,QADM,EAEjB,0DAAWG,KAFM,EAGjB,0DAAWF,SAAX,CAAqB,CAArB,CAHiB,EAIjB,0DAAWC,SAAX,CAAqB,GAArB,CAJiB,CAAnB,CAFK;AAD+B,aAAd,CAA1B;AAWD;;;iBAED,kBAAS;AAAA;;AACP,iBAAKiH,UAAL,GAAkBF,WAAW,CAACG,YAA9B;AACA,gBAAMG,oBAAoB,GAAG,KAAKlI,WAAL,CAC1BmI,cAD0B,CACX,KAAK7G,CAAL,CAAOR,KAAP,CAAa1c,KADF,EAE1B8E,IAF0B,CAErB,8DAFqB,EAG1BzJ,SAH0B,CAGhB,UAAC4hB,MAAD,EAAqB;AAC9B,qBAAI,CAACyG,UAAL,GAAkBzG,MAAM,GAAGuG,WAAW,CAACQ,OAAf,GAAyBR,WAAW,CAACS,QAA7D;AACD,aAL0B,CAA7B;AAMA,iBAAKvoB,WAAL,CAAiB0E,IAAjB,CAAsB0jB,oBAAtB;AACD;;;;;;;yBA/CUL,uB,EAAuB,2H,EAAA,mI;AAAA,O;;;cAAvBA,uB;AAAuB,4C;AAAA,iB;AAAA,gB;AAAA,0wD;AAAA;AAAA;ACjBpC;;AAEE;;AAIE;AAAA,qBAAY,IAAAhG,MAAA,EAAZ;AAAoB,aAApB;;AAOA;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AAIA;;AAUA;;AACE;;AAYA;;AAQA;;AAQA;;AAQA;;AAQF;;AAGA;;AACE;;AAKE;;AACF;;AACA;;AAKE;;AACF;;AAEA;;;;AAGF;;AAEA;;AACF;;AAGA;;AA8BF;;AAEA;;;;;;AAtII;;AAAA,0GAAgC,SAAhC,EAAgC,qIAAhC;;AAmBe;;AAAA;;AAkBX;;AAAA;;AAMA;;AAAA,8FAA8B,yBAA9B,EAA8B,gHAA9B;;AAQA;;AAAA,8FAA8B,yBAA9B,EAA8B,gHAA9B;;AAQA;;AAAA,8FAA8B,yBAA9B,EAA8B,gHAA9B;;AAQA;;AAAA,8FAA8B,yBAA9B,EAA8B,gHAA9B;;AA0Ba;;AAAA;;AASJ;;AAAA;;;;;;;;;;wED1FJgG,uB,EAAuB;gBALnC,uDAKmC;iBALzB;AACTxX,oBAAQ,EAAE,qBADD;AAETyR,uBAAW,EAAE,kCAFJ;AAGTC,qBAAS,EAAE,CAAC,kCAAD;AAHF,W;AAKyB,U;;;;;;;;;;;;;;;;;;;;;;;;AEjBpgBA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAWA,UAAMuG,GAAG,GAAG,CAAC,SAAD,CAAZ;AACA,UAAMC,GAAG,GAAG,CAAC,OAAD,CAAZ;;AACA,eAASC,yBAAT,CAAmCC,EAAnC,EAAuCC,GAAvC,EAA4C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACtD,uEAAsB,CAAtB,EAAyB,MAAzB,EAAiC,CAAjC;;AACA,+DAAc,CAAd;;AACA;AACH;;AAAC,YAAIA,EAAE,GAAG,CAAT,EAAY;AACV,cAAME,MAAM,GAAG,6DAAf;;AACA,kEAAiB,CAAjB;;AACA,0EAAyBA,MAAM,CAACC,WAAhC;AACH;AAAE;;AACH,eAASC,gCAAT,CAA0CJ,EAA1C,EAA8CC,GAA9C,EAAmD;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC7D,uEAAsB,CAAtB,EAAyB,MAAzB,EAAiC,EAAjC;;AACA,+DAAc,CAAd;;AACA;AACH;;AAAC,YAAIA,EAAE,GAAG,CAAT,EAAY;AACV,cAAMK,MAAM,GAAG,4DAAqB,CAArB,CAAf;;AACA,kEAAiB,CAAjB;;AACA,0EAAyBA,MAAM,CAACC,YAAhC;AACH;AAAE;;AACH,eAASC,sCAAT,CAAgDP,EAAhD,EAAoDC,GAApD,EAAyD;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACnE,qEAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAAC,eAAD,EAAkB,MAAlB,CAA1B;AACH;AAAE;;AACH,eAASQ,yBAAT,CAAmCR,EAAnC,EAAuCC,GAAvC,EAA4C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACtD,uEAAsB,CAAtB,EAAyB,MAAzB,EAAiC,CAAjC;;AACA,mEAAkB,CAAlB,EAAqBI,gCAArB,EAAuD,CAAvD,EAA0D,CAA1D,EAA6D,MAA7D,EAAqE,EAArE;;AACA,mEAAkB,CAAlB,EAAqBG,sCAArB,EAA6D,CAA7D,EAAgE,CAAhE,EAAmE,YAAnE,EAAiF,EAAjF;;AACA;AACH;;AAAC,YAAIP,EAAE,GAAG,CAAT,EAAY;AACV,cAAMS,MAAM,GAAG,6DAAf;;AACA,mEAAkB,UAAlB,EAA8B,CAAC,CAACA,MAAM,CAACC,aAAvC;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,cAAlB,EAAkC,IAAlC;AACH;AAAE;;AACH,eAASC,gCAAT,CAA0CX,EAA1C,EAA8CC,GAA9C,EAAmD;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC7D,cAAMY,GAAG,GAAG,gEAAZ;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC,EAAoC,EAApC;;AACA,mEAAkB,sBAAlB,EAA0C,SAASC,6EAAT,CAAuFC,MAAvF,EAA+F;AAAE,wEAAqBF,GAArB;;AAA2B,gBAAMG,MAAM,GAAG,6DAAf;;AAAuC,mBAAOA,MAAM,CAACC,yBAAP,CAAiCpkB,IAAjC,CAAsCkkB,MAAM,CAACG,OAA7C,CAAP;AAA+D,WAA5Q,EAA8Q,SAA9Q,EAAyR,SAASC,uDAAT,CAAiEJ,MAAjE,EAAyE;AAAE,wEAAqBF,GAArB;;AAA2B,gBAAMO,OAAO,GAAG,6DAAhB;;AAAwC,mBAAOA,OAAO,CAACC,cAAR,CAAuBN,MAAvB,CAAP;AAAwC,WAA/c;;AACA,qEAAoB,CAApB,EAAuB,CAAvB;;AACA;;AACA;AACH;;AAAC,YAAId,EAAE,GAAG,CAAT,EAAY;AACV,cAAMqB,MAAM,GAAG,6DAAf;;AACA,mEAAkB,qBAAlB,EAAyCtnB,SAAzC;;AACA,kEAAiB,CAAjB;;AACA,+EAA8B,mBAA9B,EAAmDsnB,MAAM,CAACC,cAAP,EAAnD,EAA4E,EAA5E;;AACA,oEAAmB,kBAAnB,EAAuCD,MAAM,CAACE,gBAA9C,EAAgE,WAAhE,EAA6EF,MAAM,CAACG,gBAApF,EAAsG,IAAtG;;AACA,mEAAkB,SAAlB,EAA6BH,MAAM,CAACjnB,UAApC,EAAgD,iBAAhD,EAAmEinB,MAAM,CAACI,QAAP,GAAkB,kBAAlB,GAAuC,SAA1G;;AACA,oEAAmB,IAAnB,EAAyBJ,MAAM,CAACjQ,EAAP,GAAY,QAArC,EAA+C,sBAA/C,EAAuEiQ,MAAM,CAACI,QAA9E,EAAwF,YAAxF,EAAsGJ,MAAM,CAACK,SAAP,IAAoB,IAA1H,EAAgI,iBAAhI,EAAmJL,MAAM,CAACM,uBAAP,EAAnJ;AACH;AAAE;;AACH,UAAMC,GAAG,GAAG,CAAC,CAAC,CAAC,oBAAD,CAAD,CAAD,EAA2B,GAA3B,CAAZ;AACA,UAAMC,GAAG,GAAG,CAAC,oBAAD,EAAuB,GAAvB,CAAZ;AACA,UAAMC,mBAAmB,GAAG;AACxB;AACJ;AACA;AACA;AACA;AACIC,0BAAkB,EAAE,qEAAQ,oBAAR,EAA8B,CAC9C,wEAAW,WAAX,EAAwB,mEAAM,iBAAN,EAAyB,CAAC,2EAAD,CAAzB,EAA2C;AAAEC,kBAAQ,EAAE;AAAZ,SAA3C,CAAxB,CAD8C,CAA9B,CANI;;AASxB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIC,sBAAc,EAAE,qEAAQ,gBAAR,EAA0B,CACtC,mEAAM,MAAN,EAAc,mEAAM;AAChB9W,mBAAS,EAAE,aADK;AAEhBvJ,kBAAQ,EAAE,MAFM;AAGhBsgB,iBAAO,EAAE;AAHO,SAAN,CAAd,CADsC,EAMtC,mEAAM,SAAN,EAAiB,mEAAM;AACnBA,iBAAO,EAAE,CADU;AAEnBtgB,kBAAQ,EAAE,mBAFS;AAGnBuJ,mBAAS,EAAE;AAHQ,SAAN,CAAjB,CANsC,EAWtC,mEAAM,kBAAN,EAA0B,mEAAM;AAC5B+W,iBAAO,EAAE,CADmB;AAE5BtgB,kBAAQ,EAAE,mBAFkB;AAG5BuJ,mBAAS,EAAE;AAHiB,SAAN,CAA1B,CAXsC,EAgBtC,wEAAW,WAAX,EAAwB,qEAAQ,kCAAR,CAAxB,CAhBsC,EAiBtC,wEAAW,WAAX,EAAwB,qEAAQ,mBAAR,EAA6B,mEAAM;AAAE+W,iBAAO,EAAE;AAAX,SAAN,CAA7B,CAAxB,CAjBsC,CAA1B;AAlBQ,OAA5B;AAuCA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA,eAASC,gCAAT,GAA4C;AACxC,eAAOrsB,KAAK,CAAC,+DAAD,CAAZ;AACH;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,eAASssB,8BAAT,GAA0C;AACtC,eAAOtsB,KAAK,CAAC,oDAAD,CAAZ;AACH;AACD;AACA;AACA;AACA;AACA;;;AACA,eAASusB,iCAAT,GAA6C;AACzC,eAAOvsB,KAAK,CAAC,mCAAD,CAAZ;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,UAAIwa,YAAY,GAAG,CAAnB;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA,UAAMgS,uBAAuB,GAAG,GAAhC;AACA;AACA;AACA;AACA;AACA;;AACA,UAAMC,sBAAsB,GAAG,EAA/B;AACA;AACA;AACA;AACA;AACA;;AACA,UAAMC,6BAA6B,GAAGD,sBAAsB,GAAG,CAA/D;AACA;AACA;AACA;AACA;AACA;;AACA,UAAME,qBAAqB,GAAG,CAA9B,C,CACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,UAAMC,+BAA+B,GAAGH,sBAAsB,GAAG,GAAzB,GAA+B,EAAvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,UAAMI,6BAA6B,GAAG,CAAtC;AACA;;AACA,UAAMC,0BAA0B,GAAG,IAAI,4DAAJ,CAAmB,4BAAnB,CAAnC;AACA;;AACA,eAASC,2CAAT,CAAqD/nB,OAArD,EAA8D;AAC1D,eAAO;AAAA,iBAAMA,OAAO,CAAC0V,gBAAR,CAAyBnX,UAAzB,EAAN;AAAA,SAAP;AACH;AACD;;;AACA,UAAMypB,iBAAiB,GAAG,IAAI,4DAAJ,CAAmB,mBAAnB,CAA1B;AACA;;AACA,UAAMC,mCAAmC,GAAG;AACxC5N,eAAO,EAAEyN,0BAD+B;AAExCxN,YAAI,EAAE,CAAC,4DAAD,CAFkC;AAGxCC,kBAAU,EAAEwN;AAH4B,OAA5C;AAKA;;UACMG,e,GACF;AACA;AACA3V,YAFA;AAGA;AACA1R,WAJA,EAIO;AAAA;;AACH,aAAK0R,MAAL,GAAcA,MAAd;AACA,aAAK1R,KAAL,GAAaA,KAAb;AACH,O,EAEL;;AACA;;;UACMsnB,a,GACF,uBAAYC,WAAZ,EAAyBC,yBAAzB,EAAoDC,WAApD,EAAiEC,gBAAjE,EAAmFC,SAAnF,EAA8F;AAAA;;AAC1F,aAAKJ,WAAL,GAAmBA,WAAnB;AACA,aAAKC,yBAAL,GAAiCA,yBAAjC;AACA,aAAKC,WAAL,GAAmBA,WAAnB;AACA,aAAKC,gBAAL,GAAwBA,gBAAxB;AACA,aAAKC,SAAL,GAAiBA,SAAjB;AACH,O;;AAEL,UAAMC,mBAAmB,GAAG,kFAAmB,6EAAc,6EAAc,+EAAgBN,aAAhB,CAAd,CAAd,CAAnB,CAA5B;AACA;AACA;AACA;AACA;AACA;;;AACA,UAAMO,kBAAkB,GAAG,IAAI,4DAAJ,CAAmB,kBAAnB,CAA3B;AACA;AACA;AACA;;UACMC,gB;;;;AAENA,sBAAgB,CAACnqB,IAAjB,GAAwB,SAASoqB,wBAAT,CAAkClqB,CAAlC,EAAqC;AAAE,eAAO,KAAKA,CAAC,IAAIiqB,gBAAV,GAAP;AAAuC,OAAtG;;AACAA,sBAAgB,CAAC7R,IAAjB,GAAwB,gEAAyB;AAAE9X,YAAI,EAAE2pB,gBAAR;AAA0B5R,iBAAS,EAAE,CAAC,CAAC,oBAAD,CAAD,CAArC;AAA+DkD,gBAAQ,EAAE,CAAC,iEAA0B,CAAC;AAAEI,iBAAO,EAAEqO,kBAAX;AAA+BG,qBAAW,EAAEF;AAA5C,SAAD,CAA1B,CAAD;AAAzE,OAAzB,CAAxB;AACA;;AAAc,OAAC,YAAY;AAAE,wEAAyBA,gBAAzB,EAA2C,CAAC;AACjE3pB,cAAI,EAAE,uDAD2D;AAEjEG,cAAI,EAAE,CAAC;AACC2N,oBAAQ,EAAE,oBADX;AAEC8N,qBAAS,EAAE,CAAC;AAAEP,qBAAO,EAAEqO,kBAAX;AAA+BG,yBAAW,EAAEF;AAA5C,aAAD;AAFZ,WAAD;AAF2D,SAAD,CAA3C,EAMrB,IANqB,EAMf,IANe;AAMP,OANR;AAOd;;;UACMG,c;;;;;AACF,gCAAY/vB,cAAZ,EAA4BgwB,kBAA5B,EAAgD5tB,OAAhD,EAAyDktB,yBAAzD,EAAoF/S,UAApF,EAAgGgC,IAAhG,EAAsGgR,WAAtG,EAAmHC,gBAAnH,EAAqIS,gBAArI,EAAuJR,SAAvJ,EAAkKS,QAAlK,EAA4K5R,qBAA5K,EAAmM6R,cAAnM,EAAmNC,eAAnN,EAAoO;AAAA;;AAAA;;AAChO,cAAIC,EAAJ,EAAQC,EAAR,EAAYC,EAAZ;;AACA,uCAAMhU,UAAN,EAAkB+S,yBAAlB,EAA6CC,WAA7C,EAA0DC,gBAA1D,EAA4EC,SAA5E;AACA,kBAAKzvB,cAAL,GAAsBA,cAAtB;AACA,kBAAKgwB,kBAAL,GAA0BA,kBAA1B;AACA,kBAAK5tB,OAAL,GAAeA,OAAf;AACA,kBAAKmc,IAAL,GAAYA,IAAZ;AACA,kBAAK0R,gBAAL,GAAwBA,gBAAxB;AACA,kBAAKR,SAAL,GAAiBA,SAAjB;AACA,kBAAKU,cAAL,GAAsBA,cAAtB;AACA,kBAAKC,eAAL,GAAuBA,eAAvB;AACA;;AACA,kBAAKI,UAAL,GAAkB,KAAlB;AACA;;AACA,kBAAKC,YAAL,GAAoB,UAACC,EAAD,EAAKC,EAAL;AAAA,mBAAYD,EAAE,KAAKC,EAAnB;AAAA,WAApB;AACA;;;AACA,kBAAKC,IAAL,wBAA0BnU,YAAY,EAAtC;AACA;;AACA,kBAAKoU,sBAAL,GAA8B,IAA9B;AACA;;AACA,kBAAKC,QAAL,GAAgB,IAAI,6CAAJ,EAAhB;AACA;;AACA,kBAAKC,SAAL,GAAiB,YAAM,CAAG,CAA1B;AACA;;;AACA,kBAAKC,UAAL,GAAkB,YAAM,CAAG,CAA3B;AACA;;;AACA,kBAAKC,QAAL,8BAAoCxU,YAAY,EAAhD;AACA;;AACA,kBAAK0Q,yBAAL,GAAiC,IAAI,6CAAJ,EAAjC;AACA,kBAAK+D,kBAAL,GAA0B,CAAC,CAACb,EAAE,GAAG,QAAKD,eAAX,MAAgC,IAAhC,IAAwCC,EAAE,KAAK,KAAK,CAApD,GAAwD,KAAK,CAA7D,GAAiEA,EAAE,CAACc,iBAArE,KAA2F,EAArH;AACA,kBAAKC,QAAL,GAAgB,KAAhB;AACA;;AACA,kBAAKC,WAAL,GAAmB,YAAnB;AACA,kBAAKC,SAAL,GAAiB,KAAjB;AACA,kBAAKC,SAAL,GAAiB,KAAjB;AACA,kBAAKC,uBAAL,GAA+B,CAACjB,EAAE,GAAG,CAACD,EAAE,GAAG,QAAKF,eAAX,MAAgC,IAAhC,IAAwCE,EAAE,KAAK,KAAK,CAApD,GAAwD,KAAK,CAA7D,GAAiEA,EAAE,CAACmB,sBAA1E,MAAsG,IAAtG,IAA8GlB,EAAE,KAAK,KAAK,CAA1H,GAA8HA,EAA9H,GAAmI,KAAlK;AACA;;AACA,kBAAK1C,SAAL,GAAiB,EAAjB;AACA;;AACA,kBAAK6D,sBAAL,GAA8B,oDAAM,YAAM;AACtC,gBAAMC,OAAO,GAAG,QAAKA,OAArB;;AACA,gBAAIA,OAAJ,EAAa;AACT,qBAAOA,OAAO,CAAChS,OAAR,CAAgB/S,IAAhB,CAAqB,kEAAU+kB,OAAV,CAArB,EAAyC,kEAAU;AAAA,uBAAM,qFAASA,OAAO,CAACnZ,GAAR,CAAY,UAAAoZ,MAAM;AAAA,yBAAIA,MAAM,CAACC,iBAAX;AAAA,iBAAlB,CAAT,EAAN;AAAA,eAAV,CAAzC,CAAP;AACH;;AACD,mBAAO,QAAKzvB,OAAL,CAAauK,QAAb,CACFC,IADE,CACG,6DAAK,CAAL,CADH,EACY,kEAAU;AAAA,qBAAM,QAAK8kB,sBAAX;AAAA,aAAV,CADZ,CAAP;AAEH,WAP6B,CAA9B;AAQA;;AACA,kBAAKI,YAAL,GAAoB,IAAI,0DAAJ,EAApB;AACA;;AACA,kBAAKC,aAAL,GAAqB,QAAKD,YAAL,CAAkBllB,IAAlB,CAAuB,+DAAO,UAAAolB,CAAC;AAAA,mBAAIA,CAAJ;AAAA,WAAR,CAAvB,EAAuC,4DAAI,YAAM,CAAG,CAAb,CAAvC,CAArB;AACA;;AACA,kBAAKC,aAAL,GAAqB,QAAKH,YAAL,CAAkBllB,IAAlB,CAAuB,+DAAO,UAAAolB,CAAC;AAAA,mBAAI,CAACA,CAAL;AAAA,WAAR,CAAvB,EAAwC,4DAAI,YAAM,CAAG,CAAb,CAAxC,CAArB;AACA;;AACA,kBAAKE,eAAL,GAAuB,IAAI,0DAAJ,EAAvB;AACA;AACR;AACA;AACA;AACA;;AACQ,kBAAKC,WAAL,GAAmB,IAAI,0DAAJ,EAAnB;;AACA,cAAI,QAAK1C,SAAT,EAAoB;AAChB;AACA;AACA,oBAAKA,SAAL,CAAe2C,aAAf;AACH,WAjE+N,CAkEhO;AACA;;;AACA,cAAI,CAAChC,eAAe,KAAK,IAApB,IAA4BA,eAAe,KAAK,KAAK,CAArD,GAAyD,KAAK,CAA9D,GAAkEA,eAAe,CAACiC,yBAAnF,KAAiH,IAArH,EAA2H;AACvH,oBAAKC,0BAAL,GAAkClC,eAAe,CAACiC,yBAAlD;AACH;;AACD,kBAAK7S,sBAAL,GAA8BlB,qBAA9B;AACA,kBAAKvS,eAAL,GAAuB,QAAKyT,sBAAL,EAAvB;AACA,kBAAK0Q,QAAL,GAAgBqC,QAAQ,CAACrC,QAAD,CAAR,IAAsB,CAAtC,CAzEgO,CA0EhO;;AACA,kBAAK3S,EAAL,GAAU,QAAKA,EAAf;AA3EgO;AA4EnO;AACD;;;;;eACA,eAAc;AACV,mBAAO,KAAK6T,QAAL,IAAiB,KAAKZ,UAA7B;AACH;AACD;;;;eACA,eAAkB;AAAE,mBAAO,KAAKgC,YAAZ;AAA2B,W;eAC/C,aAAgB1qB,KAAhB,EAAuB;AACnB,iBAAK0qB,YAAL,GAAoB1qB,KAApB;AACA,iBAAK2qB,YAAL,CAAkB1pB,IAAlB;AACH;AACD;;;;eACA,eAAe;AAAE,mBAAO,KAAKuoB,SAAZ;AAAwB,W;eACzC,aAAaxpB,KAAb,EAAoB;AAChB,iBAAKwpB,SAAL,GAAiB,oFAAsBxpB,KAAtB,CAAjB;AACA,iBAAK2qB,YAAL,CAAkB1pB,IAAlB;AACH;AACD;;;;eACA,eAAe;AAAE,mBAAO,KAAKwoB,SAAZ;AAAwB,W;eACzC,aAAazpB,KAAb,EAAoB;AAChB,gBAAI,KAAK4qB,eAAL,KAAyB,OAAO5vB,SAAP,KAAqB,WAArB,IAAoCA,SAA7D,CAAJ,EAA6E;AACzE,oBAAMwrB,gCAAgC,EAAtC;AACH;;AACD,iBAAKiD,SAAL,GAAiB,oFAAsBzpB,KAAtB,CAAjB;AACH;AACD;;;;eACA,eAA6B;AAAE,mBAAO,KAAK0pB,uBAAZ;AAAsC,W;eACrE,aAA2B1pB,KAA3B,EAAkC;AAC9B,iBAAK0pB,uBAAL,GAA+B,oFAAsB1pB,KAAtB,CAA/B;AACH;AACD;AACJ;AACA;AACA;AACA;;;;eACI,eAAkB;AAAE,mBAAO,KAAK2oB,YAAZ;AAA2B,W;eAC/C,aAAgBhO,EAAhB,EAAoB;AAChB,gBAAI,OAAOA,EAAP,KAAc,UAAd,KAA6B,OAAO3f,SAAP,KAAqB,WAArB,IAAoCA,SAAjE,CAAJ,EAAiF;AAC7E,oBAAM0rB,iCAAiC,EAAvC;AACH;;AACD,iBAAKiC,YAAL,GAAoBhO,EAApB;;AACA,gBAAI,KAAKiQ,eAAT,EAA0B;AACtB;AACA,mBAAKC,oBAAL;AACH;AACJ;AACD;;;;eACA,eAAY;AAAE,mBAAO,KAAKC,MAAZ;AAAqB,W;eACnC,aAAUzL,QAAV,EAAoB;AAChB;AACA,gBAAIA,QAAQ,KAAK,KAAKyL,MAAlB,IAA6B,KAAKrB,SAAL,IAAkBsB,KAAK,CAACC,OAAN,CAAc3L,QAAd,CAAnD,EAA6E;AACzE,kBAAI,KAAKwK,OAAT,EAAkB;AACd,qBAAKoB,oBAAL,CAA0B5L,QAA1B;AACH;;AACD,mBAAKyL,MAAL,GAAczL,QAAd;AACH;AACJ;AACD;;;;eACA,eAAgC;AAAE,mBAAO,KAAKmL,0BAAZ;AAAyC,W;eAC3E,aAA8BxqB,KAA9B,EAAqC;AACjC,iBAAKwqB,0BAAL,GAAkC,mFAAqBxqB,KAArB,CAAlC;AACH;AACD;;;;eACA,eAAS;AAAE,mBAAO,KAAKkrB,GAAZ;AAAkB,W;eAC7B,aAAOlrB,KAAP,EAAc;AACV,iBAAKkrB,GAAL,GAAWlrB,KAAK,IAAI,KAAK8oB,IAAzB;AACA,iBAAK6B,YAAL,CAAkB1pB,IAAlB;AACH;;;iBACD,oBAAW;AAAA;;AACP,iBAAK2pB,eAAL,GAAuB,IAAI,uEAAJ,CAAmB,KAAK9E,QAAxB,CAAvB;AACA,iBAAK6E,YAAL,CAAkB1pB,IAAlB,GAFO,CAGP;AACA;AACA;;AACA,iBAAKokB,yBAAL,CACKvgB,IADL,CACU,8EADV,EACkC,kEAAU,KAAKkkB,QAAf,CADlC,EAEK3tB,SAFL,CAEe;AAAA,qBAAM,OAAI,CAAC8vB,mBAAL,CAAyB,OAAI,CAACC,SAA9B,CAAN;AAAA,aAFf;AAGH;;;iBACD,8BAAqB;AAAA;;AACjB,iBAAKC,eAAL;;AACA,iBAAKT,eAAL,CAAqBU,OAArB,CAA6BxmB,IAA7B,CAAkC,kEAAU,KAAKkkB,QAAf,CAAlC,EAA4D3tB,SAA5D,CAAsE,UAAAuF,KAAK,EAAI;AAC3EA,mBAAK,CAAC2qB,KAAN,CAAYpkB,OAAZ,CAAoB,UAAA2iB,MAAM;AAAA,uBAAIA,MAAM,CAAC0B,MAAP,EAAJ;AAAA,eAA1B;AACA5qB,mBAAK,CAAC6qB,OAAN,CAActkB,OAAd,CAAsB,UAAA2iB,MAAM;AAAA,uBAAIA,MAAM,CAAC4B,QAAP,EAAJ;AAAA,eAA5B;AACH,aAHD;;AAIA,iBAAK7B,OAAL,CAAahS,OAAb,CAAqB/S,IAArB,CAA0B,kEAAU,IAAV,CAA1B,EAA2C,kEAAU,KAAKkkB,QAAf,CAA3C,EAAqE3tB,SAArE,CAA+E,YAAM;AACjF,qBAAI,CAACswB,aAAL;;AACA,qBAAI,CAACd,oBAAL;AACH,aAHD;AAIH;;;iBACD,qBAAY;AACR,gBAAMe,iBAAiB,GAAG,KAAKC,yBAAL,EAA1B,CADQ,CAER;AACA;AACA;;;AACA,gBAAID,iBAAiB,KAAK,KAAK7C,sBAA/B,EAAuD;AACnD,kBAAMltB,OAAO,GAAG,KAAK0rB,WAAL,CAAiB1W,aAAjC;AACA,mBAAKkY,sBAAL,GAA8B6C,iBAA9B;;AACA,kBAAIA,iBAAJ,EAAuB;AACnB/vB,uBAAO,CAACmH,YAAR,CAAqB,iBAArB,EAAwC4oB,iBAAxC;AACH,eAFD,MAGK;AACD/vB,uBAAO,CAACiwB,eAAR,CAAwB,iBAAxB;AACH;AACJ;;AACD,gBAAI,KAAKnE,SAAT,EAAoB;AAChB,mBAAKoE,gBAAL;AACH;AACJ;;;iBACD,qBAAYlU,OAAZ,EAAqB;AACjB;AACA;AACA,gBAAIA,OAAO,CAAC,UAAD,CAAX,EAAyB;AACrB,mBAAK8S,YAAL,CAAkB1pB,IAAlB;AACH;;AACD,gBAAI4W,OAAO,CAAC,2BAAD,CAAP,IAAwC,KAAKmU,WAAjD,EAA8D;AAC1D,mBAAKA,WAAL,CAAiBC,aAAjB,CAA+B,KAAKzB,0BAApC;AACH;AACJ;;;iBACD,uBAAc;AACV,iBAAKxB,QAAL,CAAc/nB,IAAd;;AACA,iBAAK+nB,QAAL,CAAcxjB,QAAd;;AACA,iBAAKmlB,YAAL,CAAkBnlB,QAAlB;AACH;AACD;;;;iBACA,kBAAS;AACL,iBAAK4lB,SAAL,GAAiB,KAAK7tB,KAAL,EAAjB,GAAgC,KAAK4Z,IAAL,EAAhC;AACH;AACD;;;;iBACA,gBAAO;AACH,gBAAI,KAAK+U,QAAL,EAAJ,EAAqB;AACjB,mBAAKxD,UAAL,GAAkB,IAAlB;;AACA,mBAAKsD,WAAL,CAAiBG,yBAAjB,CAA2C,IAA3C;;AACA,mBAAKC,uBAAL;;AACA,mBAAKlE,kBAAL,CAAwBmE,YAAxB;AACH;AACJ;AACD;;;;iBACA,iBAAQ;AACJ,gBAAI,KAAK3D,UAAT,EAAqB;AACjB,mBAAKA,UAAL,GAAkB,KAAlB;;AACA,mBAAKsD,WAAL,CAAiBG,yBAAjB,CAA2C,KAAK9f,MAAL,KAAgB,KAAhB,GAAwB,KAAnE;;AACA,mBAAK6b,kBAAL,CAAwBmE,YAAxB;;AACA,mBAAKnD,UAAL;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;;;;iBACI,oBAAWlpB,KAAX,EAAkB;AACd,iBAAKA,KAAL,GAAaA,KAAb;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;;iBACI,0BAAiB2a,EAAjB,EAAqB;AACjB,iBAAKsO,SAAL,GAAiBtO,EAAjB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;;iBACI,2BAAkBA,EAAlB,EAAsB;AAClB,iBAAKuO,UAAL,GAAkBvO,EAAlB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;iBACI,0BAAiB2R,UAAjB,EAA6B;AACzB,iBAAKC,QAAL,GAAgBD,UAAhB;;AACA,iBAAKpE,kBAAL,CAAwBmE,YAAxB;;AACA,iBAAK1B,YAAL,CAAkB1pB,IAAlB;AACH;AACD;;;;eACA,eAAgB;AACZ,mBAAO,KAAKynB,UAAZ;AACH;AACD;;;;eACA,eAAe;AACX,mBAAO,KAAK5C,QAAL,GAAgB,KAAK8E,eAAL,CAAqB4B,QAArC,GAAgD,KAAK5B,eAAL,CAAqB4B,QAArB,CAA8B,CAA9B,CAAvD;AACH;AACD;;;;eACA,eAAmB;AACf,gBAAI,KAAKC,KAAT,EAAgB;AACZ,qBAAO,EAAP;AACH;;AACD,gBAAI,KAAKhD,SAAT,EAAoB;AAChB,kBAAMiD,eAAe,GAAG,KAAK9B,eAAL,CAAqB4B,QAArB,CAA8B9b,GAA9B,CAAkC,UAAAoZ,MAAM;AAAA,uBAAIA,MAAM,CAAC6C,SAAX;AAAA,eAAxC,CAAxB;;AACA,kBAAI,KAAKtgB,MAAL,EAAJ,EAAmB;AACfqgB,+BAAe,CAACE,OAAhB;AACH,eAJe,CAKhB;;;AACA,qBAAOF,eAAe,CAACG,IAAhB,CAAqB,IAArB,CAAP;AACH;;AACD,mBAAO,KAAKjC,eAAL,CAAqB4B,QAArB,CAA8B,CAA9B,EAAiCG,SAAxC;AACH;AACD;;;;iBACA,kBAAS;AACL,mBAAO,KAAKlW,IAAL,GAAY,KAAKA,IAAL,CAAUzW,KAAV,KAAoB,KAAhC,GAAwC,KAA/C;AACH;AACD;;;;iBACA,wBAAeY,KAAf,EAAsB;AAClB,gBAAI,CAAC,KAAK2rB,QAAV,EAAoB;AAChB,mBAAKnB,SAAL,GAAiB,KAAK0B,kBAAL,CAAwBlsB,KAAxB,CAAjB,GAAkD,KAAKmsB,oBAAL,CAA0BnsB,KAA1B,CAAlD;AACH;AACJ;AACD;;;;iBACA,8BAAqBA,KAArB,EAA4B;AACxB,gBAAM0X,OAAO,GAAG1X,KAAK,CAAC0X,OAAtB;AACA,gBAAM0U,UAAU,GAAG1U,OAAO,KAAK,iEAAZ,IAA0BA,OAAO,KAAK,+DAAtC,IACfA,OAAO,KAAK,iEADG,IACWA,OAAO,KAAK,kEAD1C;AAEA,gBAAM2U,SAAS,GAAG3U,OAAO,KAAK,4DAAZ,IAAqBA,OAAO,KAAK,4DAAnD;AACA,gBAAM4U,OAAO,GAAG,KAAKlB,WAArB,CALwB,CAMxB;;AACA,gBAAI,CAACkB,OAAO,CAACC,QAAR,EAAD,IAAwBF,SAAS,IAAI,CAAC,8EAAersB,KAAf,CAAtC,IACC,CAAC,KAAKklB,QAAL,IAAiBllB,KAAK,CAACwsB,MAAxB,KAAmCJ,UADxC,EACqD;AACjDpsB,mBAAK,CAAC2X,cAAN,GADiD,CACzB;;AACxB,mBAAKpB,IAAL;AACH,aAJD,MAKK,IAAI,CAAC,KAAK2O,QAAV,EAAoB;AACrB,kBAAMuH,wBAAwB,GAAG,KAAKb,QAAtC;AACAU,qBAAO,CAACI,SAAR,CAAkB1sB,KAAlB;AACA,kBAAM2sB,cAAc,GAAG,KAAKf,QAA5B,CAHqB,CAIrB;;AACA,kBAAIe,cAAc,IAAIF,wBAAwB,KAAKE,cAAnD,EAAmE;AAC/D;AACA;AACA,qBAAKlF,cAAL,CAAoBmF,QAApB,CAA6BD,cAAc,CAACZ,SAA5C,EAAuD,KAAvD;AACH;AACJ;AACJ;AACD;;;;iBACA,4BAAmB/rB,KAAnB,EAA0B;AACtB,gBAAMssB,OAAO,GAAG,KAAKlB,WAArB;AACA,gBAAM1T,OAAO,GAAG1X,KAAK,CAAC0X,OAAtB;AACA,gBAAM0U,UAAU,GAAG1U,OAAO,KAAK,iEAAZ,IAA0BA,OAAO,KAAK,+DAAzD;AACA,gBAAM6U,QAAQ,GAAGD,OAAO,CAACC,QAAR,EAAjB;;AACA,gBAAIH,UAAU,IAAIpsB,KAAK,CAACwsB,MAAxB,EAAgC;AAC5B;AACAxsB,mBAAK,CAAC2X,cAAN;AACA,mBAAKhb,KAAL,GAH4B,CAI5B;AACA;AACH,aAND,MAOK,IAAI,CAAC4vB,QAAD,KAAc7U,OAAO,KAAK,4DAAZ,IAAqBA,OAAO,KAAK,4DAA/C,KAAyD4U,OAAO,CAACO,UAAjE,IACL,CAAC,8EAAe7sB,KAAf,CADA,EACuB;AACxBA,mBAAK,CAAC2X,cAAN;;AACA2U,qBAAO,CAACO,UAAR,CAAmBC,qBAAnB;AACH,aAJI,MAKA,IAAI,CAACP,QAAD,IAAa,KAAK1D,SAAlB,IAA+BnR,OAAO,KAAK,wDAA3C,IAAgD1X,KAAK,CAAC+sB,OAA1D,EAAmE;AACpE/sB,mBAAK,CAAC2X,cAAN;AACA,kBAAMqV,oBAAoB,GAAG,KAAK/D,OAAL,CAAa9tB,IAAb,CAAkB,UAAA8xB,GAAG;AAAA,uBAAI,CAACA,GAAG,CAACtB,QAAL,IAAiB,CAACsB,GAAG,CAACrB,QAA1B;AAAA,eAArB,CAA7B;AACA,mBAAK3C,OAAL,CAAa1iB,OAAb,CAAqB,UAAA2iB,MAAM,EAAI;AAC3B,oBAAI,CAACA,MAAM,CAACyC,QAAZ,EAAsB;AAClBqB,sCAAoB,GAAG9D,MAAM,CAAC0B,MAAP,EAAH,GAAqB1B,MAAM,CAAC4B,QAAP,EAAzC;AACH;AACJ,eAJD;AAKH,aARI,MASA;AACD,kBAAMoC,sBAAsB,GAAGZ,OAAO,CAACa,eAAvC;AACAb,qBAAO,CAACI,SAAR,CAAkB1sB,KAAlB;;AACA,kBAAI,KAAK6oB,SAAL,IAAkBuD,UAAlB,IAAgCpsB,KAAK,CAACotB,QAAtC,IAAkDd,OAAO,CAACO,UAA1D,IACAP,OAAO,CAACa,eAAR,KAA4BD,sBADhC,EACwD;AACpDZ,uBAAO,CAACO,UAAR,CAAmBC,qBAAnB;AACH;AACJ;AACJ;;;iBACD,oBAAW;AACP,gBAAI,CAAC,KAAKnB,QAAV,EAAoB;AAChB,mBAAKjD,QAAL,GAAgB,IAAhB;AACA,mBAAKqB,YAAL,CAAkB1pB,IAAlB;AACH;AACJ;AACD;AACJ;AACA;AACA;;;;iBACI,mBAAU;AACN,iBAAKqoB,QAAL,GAAgB,KAAhB;;AACA,gBAAI,CAAC,KAAKiD,QAAN,IAAkB,CAAC,KAAKnB,SAA5B,EAAuC;AACnC,mBAAKlC,UAAL;;AACA,mBAAKhB,kBAAL,CAAwBmE,YAAxB;;AACA,mBAAK1B,YAAL,CAAkB1pB,IAAlB;AACH;AACJ;AACD;AACJ;AACA;;;;iBACI,uBAAc;AAAA;;AACV,iBAAKgtB,UAAL,CAAgB3W,cAAhB,CAA+BxS,IAA/B,CAAoC,6DAAK,CAAL,CAApC,EAA6CzJ,SAA7C,CAAuD,YAAM;AACzD,qBAAI,CAAC6sB,kBAAL,CAAwB/F,aAAxB;;AACA,qBAAI,CAAC+L,mBAAL;AACH,aAHD;AAIH;AACD;;;;iBACA,0BAAiB;AACb,mBAAO,KAAK/F,gBAAL,iBAA+B,KAAKA,gBAAL,CAAsBgG,KAArD,IAA+D,EAAtE;AACH;AACD;;;;eACA,eAAY;AACR,mBAAO,CAAC,KAAKvD,eAAN,IAAyB,KAAKA,eAAL,CAAqBwD,OAArB,EAAhC;AACH;;;iBACD,gCAAuB;AAAA;;AACnB;AACA;AACAC,mBAAO,CAACC,OAAR,GAAkBjN,IAAlB,CAAuB,YAAM;AACzB,qBAAI,CAAC4J,oBAAL,CAA0B,OAAI,CAACtD,SAAL,GAAiB,OAAI,CAACA,SAAL,CAAe3nB,KAAhC,GAAwC,OAAI,CAAC8qB,MAAvE;;AACA,qBAAI,CAACH,YAAL,CAAkB1pB,IAAlB;AACH,aAHD;AAIH;AACD;AACJ;AACA;AACA;;;;iBACI,8BAAqBjB,KAArB,EAA4B;AAAA;;AACxB,iBAAK4qB,eAAL,CAAqB4B,QAArB,CAA8BrlB,OAA9B,CAAsC,UAAA2iB,MAAM;AAAA,qBAAIA,MAAM,CAACyE,iBAAP,EAAJ;AAAA,aAA5C;;AACA,iBAAK3D,eAAL,CAAqB4D,KAArB;;AACA,gBAAI,KAAK1I,QAAL,IAAiB9lB,KAArB,EAA4B;AACxB,kBAAI,CAAC+qB,KAAK,CAACC,OAAN,CAAchrB,KAAd,CAAD,KAA0B,OAAOhF,SAAP,KAAqB,WAArB,IAAoCA,SAA9D,CAAJ,EAA8E;AAC1E,sBAAMyrB,8BAA8B,EAApC;AACH;;AACDzmB,mBAAK,CAACmH,OAAN,CAAc,UAACiK,YAAD;AAAA,uBAAkB,OAAI,CAACqd,YAAL,CAAkBrd,YAAlB,CAAlB;AAAA,eAAd;;AACA,mBAAKsd,WAAL;AACH,aAND,MAOK;AACD,kBAAMC,mBAAmB,GAAG,KAAKF,YAAL,CAAkBzuB,KAAlB,CAA5B,CADC,CAED;AACA;;;AACA,kBAAI2uB,mBAAJ,EAAyB;AACrB,qBAAK3C,WAAL,CAAiB4C,gBAAjB,CAAkCD,mBAAlC;AACH,eAFD,MAGK,IAAI,CAAC,KAAKvD,SAAV,EAAqB;AACtB;AACA;AACA,qBAAKY,WAAL,CAAiB4C,gBAAjB,CAAkC,CAAC,CAAnC;AACH;AACJ;;AACD,iBAAK1G,kBAAL,CAAwBmE,YAAxB;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,sBAAarsB,KAAb,EAAoB;AAAA;;AAChB,gBAAM2uB,mBAAmB,GAAG,KAAK9E,OAAL,CAAa/H,IAAb,CAAkB,UAACgI,MAAD,EAAY;AACtD;AACA;AACA,kBAAI,OAAI,CAACc,eAAL,CAAqBiE,UAArB,CAAgC/E,MAAhC,CAAJ,EAA6C;AACzC,uBAAO,KAAP;AACH;;AACD,kBAAI;AACA;AACA,uBAAOA,MAAM,CAAC9pB,KAAP,IAAgB,IAAhB,IAAwB,OAAI,CAAC2oB,YAAL,CAAkBmB,MAAM,CAAC9pB,KAAzB,EAAgCA,KAAhC,CAA/B;AACH,eAHD,CAIA,OAAOogB,KAAP,EAAc;AACV,oBAAI,OAAOplB,SAAP,KAAqB,WAArB,IAAoCA,SAAxC,EAAmD;AAC/C;AACA4mB,yBAAO,CAACkN,IAAR,CAAa1O,KAAb;AACH;;AACD,uBAAO,KAAP;AACH;AACJ,aAjB2B,CAA5B;;AAkBA,gBAAIuO,mBAAJ,EAAyB;AACrB,mBAAK/D,eAAL,CAAqBY,MAArB,CAA4BmD,mBAA5B;AACH;;AACD,mBAAOA,mBAAP;AACH;AACD;;;;iBACA,2BAAkB;AAAA;;AACd,iBAAK3C,WAAL,GAAmB,IAAI,4EAAJ,CAA+B,KAAKnC,OAApC,EACdoC,aADc,CACA,KAAKzB,0BADL,EAEduE,uBAFc,GAGd5C,yBAHc,CAGY,KAAK9f,MAAL,KAAgB,KAAhB,GAAwB,KAHpC,EAId2iB,cAJc,GAKdC,uBALc,CAKU,CAAC,UAAD,CALV,CAAnB;;AAMA,iBAAKjD,WAAL,CAAiBkD,MAAjB,CAAwBpqB,IAAxB,CAA6B,kEAAU,KAAKkkB,QAAf,CAA7B,EAAuD3tB,SAAvD,CAAiE,YAAM;AACnE,kBAAI,OAAI,CAAC+vB,SAAT,EAAoB;AAChB;AACA;AACA,oBAAI,CAAC,OAAI,CAACtF,QAAN,IAAkB,OAAI,CAACkG,WAAL,CAAiByB,UAAvC,EAAmD;AAC/C,yBAAI,CAACzB,WAAL,CAAiByB,UAAjB,CAA4BC,qBAA5B;AACH,iBALe,CAMhB;AACA;;;AACA,uBAAI,CAACyB,KAAL;;AACA,uBAAI,CAAC5xB,KAAL;AACH;AACJ,aAZD;;AAaA,iBAAKyuB,WAAL,CAAiB9iB,MAAjB,CAAwBpE,IAAxB,CAA6B,kEAAU,KAAKkkB,QAAf,CAA7B,EAAuD3tB,SAAvD,CAAiE,YAAM;AACnE,kBAAI,OAAI,CAACqtB,UAAL,IAAmB,OAAI,CAAC0G,KAA5B,EAAmC;AAC/B,uBAAI,CAACC,qBAAL,CAA2B,OAAI,CAACrD,WAAL,CAAiB+B,eAAjB,IAAoC,CAA/D;AACH,eAFD,MAGK,IAAI,CAAC,OAAI,CAACrF,UAAN,IAAoB,CAAC,OAAI,CAAC5C,QAA1B,IAAsC,OAAI,CAACkG,WAAL,CAAiByB,UAA3D,EAAuE;AACxE,uBAAI,CAACzB,WAAL,CAAiByB,UAAjB,CAA4BC,qBAA5B;AACH;AACJ,aAPD;AAQH;AACD;;;;iBACA,yBAAgB;AAAA;;AACZ,gBAAM4B,kBAAkB,GAAG,oDAAM,KAAKzF,OAAL,CAAahS,OAAnB,EAA4B,KAAKmR,QAAjC,CAA3B;AACA,iBAAKY,sBAAL,CAA4B9kB,IAA5B,CAAiC,kEAAUwqB,kBAAV,CAAjC,EAAgEj0B,SAAhE,CAA0E,UAAAuF,KAAK,EAAI;AAC/E,qBAAI,CAAC2uB,SAAL,CAAe3uB,KAAK,CAAC8Q,MAArB,EAA6B9Q,KAAK,CAAC4uB,WAAnC;;AACA,kBAAI5uB,KAAK,CAAC4uB,WAAN,IAAqB,CAAC,OAAI,CAAC1J,QAA3B,IAAuC,OAAI,CAAC4C,UAAhD,EAA4D;AACxD,uBAAI,CAACnrB,KAAL;;AACA,uBAAI,CAAC4xB,KAAL;AACH;AACJ,aAND,EAFY,CASZ;AACA;;AACA,iGAAS,KAAKtF,OAAL,CAAanZ,GAAb,CAAiB,UAAAoZ,MAAM;AAAA,qBAAIA,MAAM,CAAC2F,aAAX;AAAA,aAAvB,CAAT,GACK3qB,IADL,CACU,kEAAUwqB,kBAAV,CADV,EAEKj0B,SAFL,CAEe,YAAM;AACjB,qBAAI,CAAC6sB,kBAAL,CAAwBmE,YAAxB;;AACA,qBAAI,CAAC1B,YAAL,CAAkB1pB,IAAlB;AACH,aALD;AAMH;AACD;;;;iBACA,mBAAU6oB,MAAV,EAAkB0F,WAAlB,EAA+B;AAC3B,gBAAME,WAAW,GAAG,KAAK9E,eAAL,CAAqBiE,UAArB,CAAgC/E,MAAhC,CAApB;;AACA,gBAAIA,MAAM,CAAC9pB,KAAP,IAAgB,IAAhB,IAAwB,CAAC,KAAKypB,SAAlC,EAA6C;AACzCK,oBAAM,CAAC4B,QAAP;;AACA,mBAAKd,eAAL,CAAqB4D,KAArB;;AACA,kBAAI,KAAKxuB,KAAL,IAAc,IAAlB,EAAwB;AACpB,qBAAK2vB,iBAAL,CAAuB7F,MAAM,CAAC9pB,KAA9B;AACH;AACJ,aAND,MAOK;AACD,kBAAI0vB,WAAW,KAAK5F,MAAM,CAAC0C,QAA3B,EAAqC;AACjC1C,sBAAM,CAAC0C,QAAP,GAAkB,KAAK5B,eAAL,CAAqBY,MAArB,CAA4B1B,MAA5B,CAAlB,GACI,KAAKc,eAAL,CAAqBc,QAArB,CAA8B5B,MAA9B,CADJ;AAEH;;AACD,kBAAI0F,WAAJ,EAAiB;AACb,qBAAKxD,WAAL,CAAiB4D,aAAjB,CAA+B9F,MAA/B;AACH;;AACD,kBAAI,KAAKhE,QAAT,EAAmB;AACf,qBAAK4I,WAAL;;AACA,oBAAIc,WAAJ,EAAiB;AACb;AACA;AACA;AACA;AACA,uBAAKL,KAAL;AACH;AACJ;AACJ;;AACD,gBAAIO,WAAW,KAAK,KAAK9E,eAAL,CAAqBiE,UAArB,CAAgC/E,MAAhC,CAApB,EAA6D;AACzD,mBAAK6F,iBAAL;AACH;;AACD,iBAAKhF,YAAL,CAAkB1pB,IAAlB;AACH;AACD;;;;iBACA,uBAAc;AAAA;;AACV,gBAAI,KAAK6kB,QAAT,EAAmB;AACf,kBAAM+D,OAAO,GAAG,KAAKA,OAAL,CAAagG,OAAb,EAAhB;;AACA,mBAAKjF,eAAL,CAAqBkF,IAArB,CAA0B,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAChC,uBAAO,OAAI,CAACC,cAAL,GAAsB,OAAI,CAACA,cAAL,CAAoBF,CAApB,EAAuBC,CAAvB,EAA0BnG,OAA1B,CAAtB,GACHA,OAAO,CAACvpB,OAAR,CAAgByvB,CAAhB,IAAqBlG,OAAO,CAACvpB,OAAR,CAAgB0vB,CAAhB,CADzB;AAEH,eAHD;;AAIA,mBAAKrF,YAAL,CAAkB1pB,IAAlB;AACH;AACJ;AACD;;;;iBACA,2BAAkBivB,aAAlB,EAAiC;AAC7B,gBAAIC,WAAW,GAAG,IAAlB;;AACA,gBAAI,KAAKrK,QAAT,EAAmB;AACfqK,yBAAW,GAAG,KAAK3D,QAAL,CAAc9b,GAAd,CAAkB,UAAAoZ,MAAM;AAAA,uBAAIA,MAAM,CAAC9pB,KAAX;AAAA,eAAxB,CAAd;AACH,aAFD,MAGK;AACDmwB,yBAAW,GAAG,KAAK3D,QAAL,GAAgB,KAAKA,QAAL,CAAcxsB,KAA9B,GAAsCkwB,aAApD;AACH;;AACD,iBAAKpF,MAAL,GAAcqF,WAAd;AACA,iBAAK9F,WAAL,CAAiBlS,IAAjB,CAAsBgY,WAAtB;;AACA,iBAAKlH,SAAL,CAAekH,WAAf;;AACA,iBAAK/F,eAAL,CAAqBjS,IAArB,CAA0B,KAAKiY,eAAL,CAAqBD,WAArB,CAA1B;;AACA,iBAAKjI,kBAAL,CAAwBmE,YAAxB;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,mCAA0B;AACtB,gBAAI,KAAKL,WAAT,EAAsB;AAClB,kBAAI,KAAKS,KAAT,EAAgB;AACZ,qBAAKT,WAAL,CAAiBqE,kBAAjB;AACH,eAFD,MAGK;AACD,qBAAKrE,WAAL,CAAiB4D,aAAjB,CAA+B,KAAKhF,eAAL,CAAqB4B,QAArB,CAA8B,CAA9B,CAA/B;AACH;AACJ;AACJ;AACD;;;;iBACA,oBAAW;AACP,gBAAIjE,EAAJ;;AACA,mBAAO,CAAC,KAAKG,UAAN,IAAoB,CAAC,KAAK6D,QAA1B,IAAsC,CAAC,CAAChE,EAAE,GAAG,KAAKsB,OAAX,MAAwB,IAAxB,IAAgCtB,EAAE,KAAK,KAAK,CAA5C,GAAgD,KAAK,CAArD,GAAyDA,EAAE,CAAC/nB,MAA7D,IAAuE,CAApH;AACH;AACD;;;;iBACA,eAAMqpB,OAAN,EAAe;AACX,iBAAKtC,WAAL,CAAiB1W,aAAjB,CAA+Bse,KAA/B,CAAqCtF,OAArC;AACH;AACD;;;;iBACA,mCAA0B;AACtB,gBAAItB,EAAJ;;AACA,gBAAI,KAAKxC,SAAT,EAAoB;AAChB,qBAAO,IAAP;AACH;;AACD,gBAAMuK,OAAO,GAAG,CAAC/H,EAAE,GAAG,KAAKJ,gBAAX,MAAiC,IAAjC,IAAyCI,EAAE,KAAK,KAAK,CAArD,GAAyD,KAAK,CAA9D,GAAkEA,EAAE,CAACgI,UAAH,EAAlF;AACA,gBAAMC,eAAe,GAAIF,OAAO,GAAGA,OAAO,GAAG,GAAb,GAAmB,EAAnD;AACA,mBAAO,KAAKG,cAAL,GAAsBD,eAAe,GAAG,KAAKC,cAA7C,GAA8DH,OAArE;AACH;AACD;;;;iBACA,oCAA2B;AACvB,gBAAI,KAAKlF,SAAL,IAAkB,KAAKY,WAAvB,IAAsC,KAAKA,WAAL,CAAiByB,UAA3D,EAAuE;AACnE,qBAAO,KAAKzB,WAAL,CAAiByB,UAAjB,CAA4BhY,EAAnC;AACH;;AACD,mBAAO,IAAP;AACH;AACD;;;;iBACA,qCAA4B;AACxB,gBAAI8S,EAAJ;;AACA,gBAAI,KAAKxC,SAAT,EAAoB;AAChB,qBAAO,IAAP;AACH;;AACD,gBAAMuK,OAAO,GAAG,CAAC/H,EAAE,GAAG,KAAKJ,gBAAX,MAAiC,IAAjC,IAAyCI,EAAE,KAAK,KAAK,CAArD,GAAyD,KAAK,CAA9D,GAAkEA,EAAE,CAACgI,UAAH,EAAlF;AACA,gBAAIvwB,KAAK,GAAG,CAACswB,OAAO,GAAGA,OAAO,GAAG,GAAb,GAAmB,EAA3B,IAAiC,KAAKnH,QAAlD;;AACA,gBAAI,KAAKsH,cAAT,EAAyB;AACrBzwB,mBAAK,IAAI,MAAM,KAAKywB,cAApB;AACH;;AACD,mBAAOzwB,KAAP;AACH;AACD;;;;iBACA,6BAAoB0wB,MAApB,EAA4B;AACxB,iBAAK1G,YAAL,CAAkB7R,IAAlB,CAAuBuY,MAAvB;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,2BAAkBC,GAAlB,EAAuB;AACnB,iBAAKC,gBAAL,GAAwBD,GAAG,CAAC9D,IAAJ,CAAS,GAAT,CAAxB;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,4BAAmB;AACf,iBAAKsC,KAAL;AACA,iBAAKhY,IAAL;AACH;AACD;AACJ;AACA;AACA;;;;eACI,eAAuB;AACnB,mBAAO,KAAKuR,UAAL,IAAmB,CAAC,KAAK+D,KAAzB,IAAmC,KAAKnD,QAAL,IAAiB,CAAC,CAAC,KAAKoB,YAAlE;AACH;;;;QAnoBwB9C,mB;;AAqoB7BK,oBAAc,CAACtqB,IAAf,GAAsB,SAASkzB,sBAAT,CAAgChzB,CAAhC,EAAmC;AAAE,eAAO,KAAKA,CAAC,IAAIoqB,cAAV,EAA0B,gEAAyB,oEAAzB,CAA1B,EAA0E,gEAAyB,+DAAzB,CAA1E,EAA8H,gEAAyB,oDAAzB,CAA9H,EAAuK,gEAAyB,wEAAzB,CAAvK,EAA2N,gEAAyB,wDAAzB,CAA3N,EAAwQ,gEAAyB,gEAAzB,EAAgD,CAAhD,CAAxQ,EAA4T,gEAAyB,sDAAzB,EAAwC,CAAxC,CAA5T,EAAwW,gEAAyB,kEAAzB,EAAoD,CAApD,CAAxW,EAAga,gEAAyB,2EAAzB,EAAyC,CAAzC,CAAha,EAA6c,gEAAyB,yDAAzB,EAA2C,EAA3C,CAA7c,EAA6f,gEAAyB,UAAzB,CAA7f,EAAmiB,gEAAyBhB,0BAAzB,CAAniB,EAAylB,gEAAyB,+DAAzB,CAAzlB,EAAyoB,gEAAyBE,iBAAzB,EAA4C,CAA5C,CAAzoB,CAAP;AAAksB,OAA7vB;;AACAc,oBAAc,CAAChS,IAAf,GAAsB,gEAAyB;AAAE9X,YAAI,EAAE8pB,cAAR;AAAwB6I,iBAAS,EAAE,SAASC,oBAAT,CAA8B1M,EAA9B,EAAkCC,GAAlC,EAAuC;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AAC/H,sEAAmBH,GAAnB,EAAwB,IAAxB;;AACA,sEAAmBC,GAAnB,EAAwB,IAAxB;;AACA,sEAAmB,wEAAnB,EAAwC,IAAxC;AACH;;AAAC,cAAIE,EAAE,GAAG,CAAT,EAAY;AACV,gBAAI2M,EAAJ;;AACA,yEAAsBA,EAAE,GAAG,2DAA3B,MAAqD1M,GAAG,CAAC2M,OAAJ,GAAcD,EAAE,CAACE,KAAtE;AACA,yEAAsBF,EAAE,GAAG,2DAA3B,MAAqD1M,GAAG,CAAC8K,KAAJ,GAAY4B,EAAE,CAACE,KAApE;AACA,yEAAsBF,EAAE,GAAG,2DAA3B,MAAqD1M,GAAG,CAAC2J,UAAJ,GAAiB+C,EAAE,CAACE,KAAzE;AACH;AAAE,SATwC;AAStChY,cAAM,EAAE;AAAE6M,mBAAS,EAAE,CAAC,YAAD,EAAe,WAAf,CAAb;AAA0CtQ,YAAE,EAAE,IAA9C;AAAoD+O,qBAAW,EAAE,aAAjE;AAAgFjI,kBAAQ,EAAE,UAA1F;AAAsGuJ,kBAAQ,EAAE,UAAhH;AAA4H6D,gCAAsB,EAAE,wBAApJ;AAA8KwH,qBAAW,EAAE,aAA3L;AAA0MnxB,eAAK,EAAE,OAAjN;AAA0NuqB,mCAAyB,EAAE,2BAArP;AAAkR9rB,oBAAU,EAAE,YAA9R;AAA4SgyB,wBAAc,EAAE,CAAC,iBAAD,EAAoB,gBAApB,CAA5T;AAAmWW,2BAAiB,EAAE,mBAAtX;AAA2YnB,wBAAc,EAAE;AAA3Z,SAT8B;AASiZ9W,eAAO,EAAE;AAAE6Q,sBAAY,EAAE,cAAhB;AAAgCC,uBAAa,EAAE,QAA/C;AAAyDE,uBAAa,EAAE,QAAxE;AAAkFC,yBAAe,EAAE,iBAAnG;AAAsHC,qBAAW,EAAE;AAAnI,SAT1Z;AAS8iBjR,gBAAQ,EAAE,CAAC,wEAAD,EAAoC,kEAApC;AATxjB,OAAzB,CAAtB;;AAUA6O,oBAAc,CAAC/pB,cAAf,GAAgC;AAAA,eAAM,CAClC;AAAEC,cAAI,EAAE;AAAR,SADkC,EAElC;AAAEA,cAAI,EAAE;AAAR,SAFkC,EAGlC;AAAEA,cAAI,EAAE;AAAR,SAHkC,EAIlC;AAAEA,cAAI,EAAE;AAAR,SAJkC,EAKlC;AAAEA,cAAI,EAAE;AAAR,SALkC,EAMlC;AAAEA,cAAI,EAAE,gEAAR;AAAwBE,oBAAU,EAAE,CAAC;AAAEF,gBAAI,EAAE;AAAR,WAAD;AAApC,SANkC,EAOlC;AAAEA,cAAI,EAAE,sDAAR;AAAgBE,oBAAU,EAAE,CAAC;AAAEF,gBAAI,EAAE;AAAR,WAAD;AAA5B,SAPkC,EAQlC;AAAEA,cAAI,EAAE,kEAAR;AAA4BE,oBAAU,EAAE,CAAC;AAAEF,gBAAI,EAAE;AAAR,WAAD;AAAxC,SARkC,EASlC;AAAEA,cAAI,EAAE,yEAAR;AAAsBE,oBAAU,EAAE,CAAC;AAAEF,gBAAI,EAAE;AAAR,WAAD,EAAqB;AAAEA,gBAAI,EAAE,oDAAR;AAAgBG,gBAAI,EAAE,CAAC,2EAAD;AAAtB,WAArB;AAAlC,SATkC,EAUlC;AAAEH,cAAI,EAAE,yDAAR;AAAmBE,oBAAU,EAAE,CAAC;AAAEF,gBAAI,EAAE;AAAR,WAAD,EAAiB;AAAEA,gBAAI,EAAE;AAAR,WAAjB;AAA/B,SAVkC,EAWlC;AAAEA,cAAI,EAAEkzB,MAAR;AAAgBhzB,oBAAU,EAAE,CAAC;AAAEF,gBAAI,EAAE,uDAAR;AAAmBG,gBAAI,EAAE,CAAC,UAAD;AAAzB,WAAD;AAA5B,SAXkC,EAYlC;AAAEH,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAAEF,gBAAI,EAAE,oDAAR;AAAgBG,gBAAI,EAAE,CAAC2oB,0BAAD;AAAtB,WAAD;AAA/B,SAZkC,EAalC;AAAE9oB,cAAI,EAAE;AAAR,SAbkC,EAclC;AAAEA,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAAEF,gBAAI,EAAE;AAAR,WAAD,EAAqB;AAAEA,gBAAI,EAAE,oDAAR;AAAgBG,gBAAI,EAAE,CAAC6oB,iBAAD;AAAtB,WAArB;AAA/B,SAdkC,CAAN;AAAA,OAAhC;;AAgBAc,oBAAc,CAAC5O,cAAf,GAAgC;AAC5B4X,eAAO,EAAE,CAAC;AAAE9yB,cAAI,EAAE,uDAAR;AAAmBG,cAAI,EAAE,CAAC,SAAD;AAAzB,SAAD,CADmB;AAE5B8wB,aAAK,EAAE,CAAC;AAAEjxB,cAAI,EAAE,uDAAR;AAAmBG,cAAI,EAAE,CAAC,OAAD;AAAzB,SAAD,CAFqB;AAG5B2vB,kBAAU,EAAE,CAAC;AAAE9vB,cAAI,EAAE,uDAAR;AAAmBG,cAAI,EAAE,CAAC,wEAAD;AAAzB,SAAD,CAHgB;AAI5BG,kBAAU,EAAE,CAAC;AAAEN,cAAI,EAAE;AAAR,SAAD,CAJgB;AAK5BqmB,mBAAW,EAAE,CAAC;AAAErmB,cAAI,EAAE;AAAR,SAAD,CALe;AAM5Boe,gBAAQ,EAAE,CAAC;AAAEpe,cAAI,EAAE;AAAR,SAAD,CANkB;AAO5B2nB,gBAAQ,EAAE,CAAC;AAAE3nB,cAAI,EAAE;AAAR,SAAD,CAPkB;AAQ5BwrB,8BAAsB,EAAE,CAAC;AAAExrB,cAAI,EAAE;AAAR,SAAD,CARI;AAS5BgzB,mBAAW,EAAE,CAAC;AAAEhzB,cAAI,EAAE;AAAR,SAAD,CATe;AAU5B6B,aAAK,EAAE,CAAC;AAAE7B,cAAI,EAAE;AAAR,SAAD,CAVqB;AAW5B4nB,iBAAS,EAAE,CAAC;AAAE5nB,cAAI,EAAE,mDAAR;AAAeG,cAAI,EAAE,CAAC,YAAD;AAArB,SAAD,CAXiB;AAY5BmyB,sBAAc,EAAE,CAAC;AAAEtyB,cAAI,EAAE,mDAAR;AAAeG,cAAI,EAAE,CAAC,iBAAD;AAArB,SAAD,CAZY;AAa5B8yB,yBAAiB,EAAE,CAAC;AAAEjzB,cAAI,EAAE;AAAR,SAAD,CAbS;AAc5BosB,iCAAyB,EAAE,CAAC;AAAEpsB,cAAI,EAAE;AAAR,SAAD,CAdC;AAe5B8xB,sBAAc,EAAE,CAAC;AAAE9xB,cAAI,EAAE;AAAR,SAAD,CAfY;AAgB5BsX,UAAE,EAAE,CAAC;AAAEtX,cAAI,EAAE;AAAR,SAAD,CAhBwB;AAiB5B6rB,oBAAY,EAAE,CAAC;AAAE7rB,cAAI,EAAE;AAAR,SAAD,CAjBc;AAkB5B8rB,qBAAa,EAAE,CAAC;AAAE9rB,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC,QAAD;AAAtB,SAAD,CAlBa;AAmB5B6rB,qBAAa,EAAE,CAAC;AAAEhsB,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC,QAAD;AAAtB,SAAD,CAnBa;AAoB5B8rB,uBAAe,EAAE,CAAC;AAAEjsB,cAAI,EAAE;AAAR,SAAD,CApBW;AAqB5BksB,mBAAW,EAAE,CAAC;AAAElsB,cAAI,EAAE;AAAR,SAAD;AArBe,OAAhC;AAuBA;;AAAc,OAAC,YAAY;AAAE,wEAAyB8pB,cAAzB,EAAyC,CAAC;AAC/D9pB,cAAI,EAAE;AADyD,SAAD,CAAzC,EAErB,YAAY;AAAE,iBAAO,CAAC;AAAEA,gBAAI,EAAE;AAAR,WAAD,EAAiC;AAAEA,gBAAI,EAAE;AAAR,WAAjC,EAAqE;AAAEA,gBAAI,EAAE;AAAR,WAArE,EAA8F;AAAEA,gBAAI,EAAE;AAAR,WAA9F,EAAkI;AAAEA,gBAAI,EAAE;AAAR,WAAlI,EAA+J;AAAEA,gBAAI,EAAE,gEAAR;AAA+BE,sBAAU,EAAE,CAAC;AACxNF,kBAAI,EAAE;AADkN,aAAD;AAA3C,WAA/J,EAEX;AAAEA,gBAAI,EAAE,sDAAR;AAAuBE,sBAAU,EAAE,CAAC;AACtCF,kBAAI,EAAE;AADgC,aAAD;AAAnC,WAFW,EAIX;AAAEA,gBAAI,EAAE,kEAAR;AAAmCE,sBAAU,EAAE,CAAC;AAClDF,kBAAI,EAAE;AAD4C,aAAD;AAA/C,WAJW,EAMX;AAAEA,gBAAI,EAAE,yEAAR;AAA6BE,sBAAU,EAAE,CAAC;AAC5CF,kBAAI,EAAE;AADsC,aAAD,EAE5C;AACCA,kBAAI,EAAE,oDADP;AAECG,kBAAI,EAAE,CAAC,2EAAD;AAFP,aAF4C;AAAzC,WANW,EAWX;AAAEH,gBAAI,EAAE,yDAAR;AAA0BE,sBAAU,EAAE,CAAC;AACzCF,kBAAI,EAAE;AADmC,aAAD,EAEzC;AACCA,kBAAI,EAAE;AADP,aAFyC;AAAtC,WAXW,EAeX;AAAEA,gBAAI,EAAEkzB,MAAR;AAAgBhzB,sBAAU,EAAE,CAAC;AAC/BF,kBAAI,EAAE,uDADyB;AAE/BG,kBAAI,EAAE,CAAC,UAAD;AAFyB,aAAD;AAA5B,WAfW,EAkBX;AAAEH,gBAAI,EAAEC,SAAR;AAAmBC,sBAAU,EAAE,CAAC;AAClCF,kBAAI,EAAE,oDAD4B;AAElCG,kBAAI,EAAE,CAAC2oB,0BAAD;AAF4B,aAAD;AAA/B,WAlBW,EAqBX;AAAE9oB,gBAAI,EAAE;AAAR,WArBW,EAqBqB;AAAEA,gBAAI,EAAEC,SAAR;AAAmBC,sBAAU,EAAE,CAAC;AAClEF,kBAAI,EAAE;AAD4D,aAAD,EAElE;AACCA,kBAAI,EAAE,oDADP;AAECG,kBAAI,EAAE,CAAC6oB,iBAAD;AAFP,aAFkE;AAA/B,WArBrB,CAAP;AA0BF,SA5BS,EA4BP;AAAEpB,mBAAS,EAAE,CAAC;AACxB5nB,gBAAI,EAAE,mDADkB;AAExBG,gBAAI,EAAE,CAAC,YAAD;AAFkB,WAAD,CAAb;AAGV0rB,sBAAY,EAAE,CAAC;AACf7rB,gBAAI,EAAE;AADS,WAAD,CAHJ;AAKV8rB,uBAAa,EAAE,CAAC;AAChB9rB,gBAAI,EAAE,oDADU;AAEhBG,gBAAI,EAAE,CAAC,QAAD;AAFU,WAAD,CALL;AAQV6rB,uBAAa,EAAE,CAAC;AAChBhsB,gBAAI,EAAE,oDADU;AAEhBG,gBAAI,EAAE,CAAC,QAAD;AAFU,WAAD,CARL;AAWV8rB,yBAAe,EAAE,CAAC;AAClBjsB,gBAAI,EAAE;AADY,WAAD,CAXP;AAaVksB,qBAAW,EAAE,CAAC;AACdlsB,gBAAI,EAAE;AADQ,WAAD,CAbH;AAeVsX,YAAE,EAAE,CAAC;AACLtX,gBAAI,EAAE;AADD,WAAD,CAfM;AAiBVqmB,qBAAW,EAAE,CAAC;AACdrmB,gBAAI,EAAE;AADQ,WAAD,CAjBH;AAmBVoe,kBAAQ,EAAE,CAAC;AACXpe,gBAAI,EAAE;AADK,WAAD,CAnBA;AAqBV2nB,kBAAQ,EAAE,CAAC;AACX3nB,gBAAI,EAAE;AADK,WAAD,CArBA;AAuBVwrB,gCAAsB,EAAE,CAAC;AACzBxrB,gBAAI,EAAE;AADmB,WAAD,CAvBd;AAyBVgzB,qBAAW,EAAE,CAAC;AACdhzB,gBAAI,EAAE;AADQ,WAAD,CAzBH;AA2BV6B,eAAK,EAAE,CAAC;AACR7B,gBAAI,EAAE;AADE,WAAD,CA3BG;AA6BVosB,mCAAyB,EAAE,CAAC;AAC5BpsB,gBAAI,EAAE;AADsB,WAAD,CA7BjB;AA+BV8yB,iBAAO,EAAE,CAAC;AACV9yB,gBAAI,EAAE,uDADI;AAEVG,gBAAI,EAAE,CAAC,SAAD;AAFI,WAAD,CA/BC;AAkCV8wB,eAAK,EAAE,CAAC;AACRjxB,gBAAI,EAAE,uDADE;AAERG,gBAAI,EAAE,CAAC,OAAD;AAFE,WAAD,CAlCG;AAqCV2vB,oBAAU,EAAE,CAAC;AACb9vB,gBAAI,EAAE,uDADO;AAEbG,gBAAI,EAAE,CAAC,wEAAD;AAFO,WAAD,CArCF;AAwCVG,oBAAU,EAAE,CAAC;AACbN,gBAAI,EAAE;AADO,WAAD,CAxCF;AA0CVsyB,wBAAc,EAAE,CAAC;AACjBtyB,gBAAI,EAAE,mDADW;AAEjBG,gBAAI,EAAE,CAAC,iBAAD;AAFW,WAAD,CA1CN;AA6CV8yB,2BAAiB,EAAE,CAAC;AACpBjzB,gBAAI,EAAE;AADc,WAAD,CA7CT;AA+CV8xB,wBAAc,EAAE,CAAC;AACjB9xB,gBAAI,EAAE;AADW,WAAD;AA/CN,SA5BO;AA6Eb,OA7EF;;UA8ERmzB,S;;;;;AACF,6BAAc;AAAA;;AAAA;;AACV,wCAASC,SAAT;AACA;;AACA,kBAAKC,UAAL,GAAkB,CAAlB;AACA;;AACA,kBAAK3L,gBAAL,GAAwB,CAAxB;AACA;;AACA,kBAAKD,gBAAL,GAAwB,KAAxB;AACA;AACR;AACA;AACA;AACA;;AACQ,kBAAKpd,QAAL,GAAgB,CAAhB;AACA,kBAAKipB,UAAL,GAAkB,CACd;AACInyB,mBAAO,EAAE,OADb;AAEIC,mBAAO,EAAE,KAFb;AAGIC,oBAAQ,EAAE,OAHd;AAIIC,oBAAQ,EAAE;AAJd,WADc,EAOd;AACIH,mBAAO,EAAE,OADb;AAEIC,mBAAO,EAAE,QAFb;AAGIC,oBAAQ,EAAE,OAHd;AAIIC,oBAAQ,EAAE;AAJd,WAPc,CAAlB;AAdU;AA4Bb;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;;;iBACI,iCAAwBiyB,aAAxB,EAAuCC,YAAvC,EAAqDC,SAArD,EAAgE;AAC5D,gBAAMC,UAAU,GAAG,KAAKC,cAAL,EAAnB;;AACA,gBAAMC,yBAAyB,GAAGF,UAAU,GAAGH,aAA/C;AACA,gBAAMM,gBAAgB,GAAGH,UAAU,GAAG,CAAtC,CAH4D,CAI5D;AACA;AACA;AACA;;AACA,gBAAMI,qBAAqB,GAAGF,yBAAyB,GAAGJ,YAA5B,GAA2CK,gBAAzE;AACA,mBAAOz2B,IAAI,CAAC0T,GAAL,CAAS1T,IAAI,CAACwS,GAAL,CAAS,CAAT,EAAYkkB,qBAAZ,CAAT,EAA6CL,SAA7C,CAAP;AACH;;;iBACD,oBAAW;AAAA;;AACP;;AACA,iBAAK15B,cAAL,CAAoBgR,MAApB,GAA6BpE,IAA7B,CAAkC,kEAAU,KAAKkkB,QAAf,CAAlC,EAA4D3tB,SAA5D,CAAsE,YAAM;AACxE,kBAAI,OAAI,CAAC+vB,SAAT,EAAoB;AAChB,uBAAI,CAAC8G,YAAL,GAAoB,OAAI,CAACjB,OAAL,CAAapgB,aAAb,CAA2B1T,qBAA3B,EAApB;;AACA,uBAAI,CAAC+qB,kBAAL,CAAwBmE,YAAxB;AACH;AACJ,aALD;AAMH;;;iBACD,gBAAO;AAAA;;AACH,yFAAsB;AAClB;;AACA,mBAAK6F,YAAL,GAAoB,KAAKjB,OAAL,CAAapgB,aAAb,CAA2B1T,qBAA3B,EAApB,CAFkB,CAGlB;AACA;;AACA,mBAAK0oB,gBAAL,GACI4E,QAAQ,CAAC0H,gBAAgB,CAAC,KAAKlB,OAAL,CAAapgB,aAAd,CAAhB,CAA6CuhB,QAA7C,IAAyD,GAA1D,CADZ;;AAEA,mBAAKC,yBAAL,GAPkB,CAQlB;;;AACA,mBAAK/3B,OAAL,CAAauK,QAAb,CAAsBC,IAAtB,CAA2B,6DAAK,CAAL,CAA3B,EAAoCzJ,SAApC,CAA8C,YAAM;AAChD,oBAAI,OAAI,CAACwqB,gBAAL,IAAyB,OAAI,CAACoI,UAAL,CAAgBlzB,UAAzC,IACA,OAAI,CAACkzB,UAAL,CAAgBlzB,UAAhB,CAA2BmC,cAD/B,EAC+C;AAC3C,yBAAI,CAAC+wB,UAAL,CAAgBlzB,UAAhB,CAA2BmC,cAA3B,CAA0CpE,KAA1C,CAAgDs5B,QAAhD,aAA8D,OAAI,CAACvM,gBAAnE;AACH;AACJ,eALD;AAMH;AACJ;AACD;;;;iBACA,+BAAsBxlB,KAAtB,EAA6B;AACzB,gBAAMiyB,UAAU,GAAG,6FAA8BjyB,KAA9B,EAAqC,KAAKwpB,OAA1C,EAAmD,KAAK0I,YAAxD,CAAnB;;AACA,gBAAMV,UAAU,GAAG,KAAKC,cAAL,EAAnB;;AACA,iBAAK1C,KAAL,CAAWve,aAAX,CAAyB2hB,SAAzB,GAAqC,wFAAyB,CAACnyB,KAAK,GAAGiyB,UAAT,IAAuBT,UAAhD,EAA4DA,UAA5D,EAAwE,KAAKzC,KAAL,CAAWve,aAAX,CAAyB2hB,SAAjG,EAA4G7L,uBAA5G,CAArC;AACH;;;iBACD,+BAAsB;AAClB,iBAAK8L,wBAAL;;AACA,iBAAKrD,KAAL,CAAWve,aAAX,CAAyB2hB,SAAzB,GAAqC,KAAKhB,UAA1C;AACH;;;iBACD,6BAAoBd,MAApB,EAA4B;AACxB,gBAAI,KAAKtF,SAAT,EAAoB;AAChB,mBAAKoG,UAAL,GAAkB,CAAlB;AACH,aAFD,MAGK;AACD,mBAAKvD,UAAL,CAAgB7uB,OAAhB,GAA0B,CAA1B;;AACA,mBAAK8oB,kBAAL,CAAwBmE,YAAxB;AACH;;AACD,+FAA0BqE,MAA1B;AACH;;;iBACD,yBAAgB1wB,KAAhB,EAAuB;AACnB,mBAAO,IAAIqnB,eAAJ,CAAoB,IAApB,EAA0BrnB,KAA1B,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;;iBACI,oCAA2B;AACvB,gBAAM/C,WAAW,GAAG,KAAKgxB,UAAL,CAAgBlzB,UAAhB,CAA2BmC,cAA3B,CAA0CC,qBAA1C,EAApB;;AACA,gBAAMu1B,YAAY,GAAG,KAAKx6B,cAAL,CAAoB2B,eAApB,EAArB;;AACA,gBAAMkV,KAAK,GAAG,KAAK1C,MAAL,EAAd;;AACA,gBAAMsmB,YAAY,GAAG,KAAK7M,QAAL,GAAgBiB,+BAA+B,GAAGH,sBAAlD,GACjBA,sBAAsB,GAAG,CAD7B;AAEA,gBAAIxnB,OAAJ,CANuB,CAOvB;;AACA,gBAAI,KAAK0mB,QAAT,EAAmB;AACf1mB,qBAAO,GAAG2nB,+BAAV;AACH,aAFD,MAGK,IAAI,KAAK4C,sBAAT,EAAiC;AAClCvqB,qBAAO,GAAGwnB,sBAAV;AACH,aAFI,MAGA;AACD,kBAAI4F,QAAQ,GAAG,KAAK5B,eAAL,CAAqB4B,QAArB,CAA8B,CAA9B,KAAoC,KAAK3C,OAAL,CAAaqH,KAAhE;AACA9xB,qBAAO,GAAGotB,QAAQ,IAAIA,QAAQ,CAACpQ,KAArB,GAA6ByK,6BAA7B,GAA6DD,sBAAvE;AACH,aAjBsB,CAkBvB;;;AACA,gBAAI,CAAC7X,KAAL,EAAY;AACR3P,qBAAO,IAAI,CAAC,CAAZ;AACH,aArBsB,CAsBvB;;;AACA,gBAAM0N,YAAY,GAAG,KAAK7P,WAAW,CAAC3E,IAAZ,GAAmB8G,OAAnB,IAA8B2P,KAAK,GAAG4jB,YAAH,GAAkB,CAArD,CAAL,CAArB;AACA,gBAAM5lB,aAAa,GAAG9P,WAAW,CAACZ,KAAZ,GAAoB+C,OAApB,GAA8BszB,YAAY,CAACz4B,KAA3C,IACf8U,KAAK,GAAG,CAAH,GAAO4jB,YADG,CAAtB,CAxBuB,CA0BvB;;AACA,gBAAI7lB,YAAY,GAAG,CAAnB,EAAsB;AAClB1N,qBAAO,IAAI0N,YAAY,GAAGka,6BAA1B;AACH,aAFD,MAGK,IAAIja,aAAa,GAAG,CAApB,EAAuB;AACxB3N,qBAAO,IAAI2N,aAAa,GAAGia,6BAA3B;AACH,aAhCsB,CAiCvB;AACA;AACA;;;AACA,iBAAKiH,UAAL,CAAgB7uB,OAAhB,GAA0B7D,IAAI,CAACq3B,KAAL,CAAWxzB,OAAX,CAA1B;AACA,iBAAK6uB,UAAL,CAAgBlzB,UAAhB,CAA2BU,cAA3B;AACH;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,kCAAyBi2B,aAAzB,EAAwCC,YAAxC,EAAsDC,SAAtD,EAAiE;AAC7D,gBAAMC,UAAU,GAAG,KAAKC,cAAL,EAAnB;;AACA,gBAAMe,sBAAsB,GAAG,CAAChB,UAAU,GAAG,KAAKK,YAAL,CAAkBn4B,MAAhC,IAA0C,CAAzE;AACA,gBAAM+4B,mBAAmB,GAAGv3B,IAAI,CAAC0W,KAAL,CAAW0U,uBAAuB,GAAGkL,UAArC,CAA5B;AACA,gBAAIkB,wBAAJ,CAJ6D,CAK7D;;AACA,gBAAI,KAAKpJ,sBAAT,EAAiC;AAC7B,qBAAO,CAAP;AACH;;AACD,gBAAI,KAAK6H,UAAL,KAAoB,CAAxB,EAA2B;AACvBuB,sCAAwB,GAAGrB,aAAa,GAAGG,UAA3C;AACH,aAFD,MAGK,IAAI,KAAKL,UAAL,KAAoBI,SAAxB,EAAmC;AACpC,kBAAMoB,mBAAmB,GAAG,KAAKC,aAAL,KAAuBH,mBAAnD;AACA,kBAAMI,oBAAoB,GAAGxB,aAAa,GAAGsB,mBAA7C,CAFoC,CAGpC;AACA;;AACA,kBAAIG,iBAAiB,GAAGtB,UAAU,GAAG,CAAC,KAAKoB,aAAL,KAAuBpB,UAAvB,GAAoClL,uBAArC,IAAgEkL,UAArG,CALoC,CAMpC;AACA;AACA;AACA;;AACAkB,sCAAwB,GAAGG,oBAAoB,GAAGrB,UAAvB,GAAoCsB,iBAA/D;AACH,aAXI,MAYA;AACD;AACA;AACA;AACAJ,sCAAwB,GAAGpB,YAAY,GAAGE,UAAU,GAAG,CAAvD;AACH,aA7B4D,CA8B7D;AACA;AACA;;;AACA,mBAAOt2B,IAAI,CAACq3B,KAAL,CAAWG,wBAAwB,GAAG,CAAC,CAA5B,GAAgCF,sBAA3C,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;iBACI,qCAA4BjB,SAA5B,EAAuC;AACnC,gBAAMC,UAAU,GAAG,KAAKC,cAAL,EAAnB;;AACA,gBAAMY,YAAY,GAAG,KAAKx6B,cAAL,CAAoB2B,eAApB,EAArB;;AACA,gBAAMu5B,iBAAiB,GAAG,KAAKlB,YAAL,CAAkB75B,GAAlB,GAAwB2uB,6BAAlD;AACA,gBAAMqM,oBAAoB,GAAGX,YAAY,CAAC34B,MAAb,GAAsB,KAAKm4B,YAAL,CAAkBh2B,MAAxC,GAAiD8qB,6BAA9E;AACA,gBAAMsM,cAAc,GAAG/3B,IAAI,CAACC,GAAL,CAAS,KAAKgN,QAAd,CAAvB;AACA,gBAAM+qB,gBAAgB,GAAGh4B,IAAI,CAAC0T,GAAL,CAAS,KAAKgkB,aAAL,KAAuBpB,UAAhC,EAA4ClL,uBAA5C,CAAzB;AACA,gBAAM6M,iBAAiB,GAAGD,gBAAgB,GAAGD,cAAnB,GAAoC,KAAKpB,YAAL,CAAkBn4B,MAAhF;;AACA,gBAAIy5B,iBAAiB,GAAGH,oBAAxB,EAA8C;AAC1C,mBAAKI,cAAL,CAAoBD,iBAApB,EAAuCH,oBAAvC;AACH,aAFD,MAGK,IAAIC,cAAc,GAAGF,iBAArB,EAAwC;AACzC,mBAAKM,gBAAL,CAAsBJ,cAAtB,EAAsCF,iBAAtC,EAAyDxB,SAAzD;AACH,aAFI,MAGA;AACD,mBAAKhM,gBAAL,GAAwB,KAAK+N,uBAAL,EAAxB;AACH;AACJ;AACD;;;;iBACA,wBAAeH,iBAAf,EAAkCH,oBAAlC,EAAwD;AACpD;AACA,gBAAMO,qBAAqB,GAAGr4B,IAAI,CAACq3B,KAAL,CAAWY,iBAAiB,GAAGH,oBAA/B,CAA9B,CAFoD,CAGpD;AACA;;AACA,iBAAK7B,UAAL,IAAmBoC,qBAAnB;AACA,iBAAKprB,QAAL,IAAiBorB,qBAAjB;AACA,iBAAKhO,gBAAL,GAAwB,KAAK+N,uBAAL,EAAxB,CAPoD,CAQpD;AACA;AACA;;AACA,gBAAI,KAAKnC,UAAL,IAAmB,CAAvB,EAA0B;AACtB,mBAAKA,UAAL,GAAkB,CAAlB;AACA,mBAAKhpB,QAAL,GAAgB,CAAhB;AACA,mBAAKod,gBAAL;AACH;AACJ;AACD;;;;iBACA,0BAAiB0N,cAAjB,EAAiCF,iBAAjC,EAAoDxB,SAApD,EAA+D;AAC3D;AACA,gBAAMiC,qBAAqB,GAAGt4B,IAAI,CAACq3B,KAAL,CAAWU,cAAc,GAAGF,iBAA5B,CAA9B,CAF2D,CAG3D;AACA;;AACA,iBAAK5B,UAAL,IAAmBqC,qBAAnB;AACA,iBAAKrrB,QAAL,IAAiBqrB,qBAAjB;AACA,iBAAKjO,gBAAL,GAAwB,KAAK+N,uBAAL,EAAxB,CAP2D,CAQ3D;AACA;AACA;;AACA,gBAAI,KAAKnC,UAAL,IAAmBI,SAAvB,EAAkC;AAC9B,mBAAKJ,UAAL,GAAkBI,SAAlB;AACA,mBAAKppB,QAAL,GAAgB,CAAhB;AACA,mBAAKod,gBAAL;AACA;AACH;AACJ;AACD;;;;iBACA,qCAA4B;AACxB,gBAAMiM,UAAU,GAAG,KAAKC,cAAL,EAAnB;;AACA,gBAAMgC,KAAK,GAAG,KAAKb,aAAL,EAAd;;AACA,gBAAMc,WAAW,GAAGx4B,IAAI,CAAC0T,GAAL,CAAS6kB,KAAK,GAAGjC,UAAjB,EAA6BlL,uBAA7B,CAApB;AACA,gBAAMqN,qBAAqB,GAAGF,KAAK,GAAGjC,UAAtC,CAJwB,CAKxB;;AACA,gBAAMD,SAAS,GAAGoC,qBAAqB,GAAGD,WAA1C,CANwB,CAOxB;;AACA,gBAAIE,oBAAJ;;AACA,gBAAI,KAAKxH,KAAT,EAAgB;AACZwH,kCAAoB,GAAG,CAAvB;AACH,aAFD,MAGK;AACDA,kCAAoB,GAChB14B,IAAI,CAACwS,GAAL,CAAS,KAAK8b,OAAL,CAAagG,OAAb,GAAuBvvB,OAAvB,CAA+B,KAAKsqB,eAAL,CAAqB4B,QAArB,CAA8B,CAA9B,CAA/B,CAAT,EAA2E,CAA3E,CADJ;AAEH;;AACDyH,gCAAoB,IAAI,6FAA8BA,oBAA9B,EAAoD,KAAKpK,OAAzD,EAAkE,KAAK0I,YAAvE,CAAxB,CAhBwB,CAiBxB;AACA;;AACA,gBAAMZ,YAAY,GAAGoC,WAAW,GAAG,CAAnC;AACA,iBAAKvC,UAAL,GAAkB,KAAK0C,uBAAL,CAA6BD,oBAA7B,EAAmDtC,YAAnD,EAAiEC,SAAjE,CAAlB;AACA,iBAAKppB,QAAL,GAAgB,KAAK2rB,wBAAL,CAA8BF,oBAA9B,EAAoDtC,YAApD,EAAkEC,SAAlE,CAAhB;;AACA,iBAAKwC,2BAAL,CAAiCxC,SAAjC;AACH;AACD;;;;iBACA,mCAA0B;AACtB,gBAAMC,UAAU,GAAG,KAAKC,cAAL,EAAnB;;AACA,gBAAMe,sBAAsB,GAAG,CAAChB,UAAU,GAAG,KAAKK,YAAL,CAAkBn4B,MAAhC,IAA0C,CAAzE;AACA,gBAAMwF,OAAO,GAAGhE,IAAI,CAACC,GAAL,CAAS,KAAKgN,QAAd,IAA0BqqB,sBAA1B,GAAmDhB,UAAU,GAAG,CAAhF;AACA,iCAActyB,OAAd;AACH;AACD;;;;iBACA,0BAAiB;AACb,mBAAO,KAAKsmB,gBAAL,GAAwBiB,qBAA/B;AACH;AACD;;;;iBACA,yBAAgB;AACZ,mBAAO,KAAK+C,OAAL,CAAarpB,MAAb,GAAsB,KAAK+xB,YAAL,CAAkB/xB,MAA/C;AACH;;;;QA5RmBynB,c;;AA8RxBqJ,eAAS,CAAC3zB,IAAV,GAAiB,SAAS02B,iBAAT,CAA2Bx2B,CAA3B,EAA8B;AAAE,eAAOy2B,sBAAsB,CAACz2B,CAAC,IAAIyzB,SAAN,CAA7B;AAAgD,OAAjG;;AACAA,eAAS,CAACiD,IAAV,GAAiB,gEAAyB;AAAEp2B,YAAI,EAAEmzB,SAAR;AAAmBpb,iBAAS,EAAE,CAAC,CAAC,YAAD,CAAD,CAA9B;AAAgDse,sBAAc,EAAE,SAASC,wBAAT,CAAkCpQ,EAAlC,EAAsCC,GAAtC,EAA2CoQ,QAA3C,EAAqD;AAAE,cAAIrQ,EAAE,GAAG,CAAT,EAAY;AACrK,yEAAsBqQ,QAAtB,EAAgC7M,kBAAhC,EAAoD,IAApD;;AACA,yEAAsB6M,QAAtB,EAAgC,gEAAhC,EAA2C,IAA3C;;AACA,yEAAsBA,QAAtB,EAAgC,mEAAhC,EAA8C,IAA9C;AACH;;AAAC,cAAIrQ,EAAE,GAAG,CAAT,EAAY;AACV,gBAAI2M,EAAJ;;AACA,yEAAsBA,EAAE,GAAG,2DAA3B,MAAqD1M,GAAG,CAACS,aAAJ,GAAoBiM,EAAE,CAACE,KAA5E;AACA,yEAAsBF,EAAE,GAAG,2DAA3B,MAAqD1M,GAAG,CAACuF,OAAJ,GAAcmH,EAAnE;AACA,yEAAsBA,EAAE,GAAG,2DAA3B,MAAqD1M,GAAG,CAACiO,YAAJ,GAAmBvB,EAAxE;AACH;AAAE,SATmC;AASjC2D,iBAAS,EAAE,CAAC,MAAD,EAAS,UAAT,EAAqB,mBAArB,EAA0C,MAA1C,EAAkD,eAAlD,EAAmE,MAAnE,EAA2E,CAA3E,EAA8E,YAA9E,CATsB;AASuEC,gBAAQ,EAAE,EATjF;AASqFC,oBAAY,EAAE,SAASC,sBAAT,CAAgCzQ,EAAhC,EAAoCC,GAApC,EAAyC;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AAC5L,qEAAkB,SAAlB,EAA6B,SAAS0Q,oCAAT,CAA8C5P,MAA9C,EAAsD;AAAE,qBAAOb,GAAG,CAACmB,cAAJ,CAAmBN,MAAnB,CAAP;AAAoC,aAAzH,EAA2H,OAA3H,EAAoI,SAAS6P,kCAAT,GAA8C;AAAE,qBAAO1Q,GAAG,CAAC2Q,QAAJ,EAAP;AAAwB,aAA5M,EAA8M,MAA9M,EAAsN,SAASC,iCAAT,GAA6C;AAAE,qBAAO5Q,GAAG,CAAC6Q,OAAJ,EAAP;AAAuB,aAA5R;AACH;;AAAC,cAAI9Q,EAAE,GAAG,CAAT,EAAY;AACV,sEAAmB,IAAnB,EAAyBC,GAAG,CAAC7O,EAA7B,EAAiC,UAAjC,EAA6C6O,GAAG,CAAC8D,QAAjD,EAA2D,eAA3D,EAA4E9D,GAAG,CAAC8G,SAAJ,GAAgB9G,GAAG,CAAC7O,EAAJ,GAAS,QAAzB,GAAoC,IAAhH,EAAsH,eAAtH,EAAuI6O,GAAG,CAAC8G,SAA3I,EAAsJ,YAAtJ,EAAoK9G,GAAG,CAACyB,SAAJ,IAAiB,IAArL,EAA2L,eAA3L,EAA4MzB,GAAG,CAAC/H,QAAJ,CAAa6Y,QAAb,EAA5M,EAAqO,eAArO,EAAsP9Q,GAAG,CAACiI,QAAJ,CAAa6I,QAAb,EAAtP,EAA+Q,cAA/Q,EAA+R9Q,GAAG,CAACZ,UAAnS,EAA+S,kBAA/S,EAAmUY,GAAG,CAACsM,gBAAJ,IAAwB,IAA3V,EAAiW,uBAAjW,EAA0XtM,GAAG,CAAC+Q,wBAAJ,EAA1X;;AACA,sEAAmB,qBAAnB,EAA0C/Q,GAAG,CAACiI,QAA9C,EAAwD,oBAAxD,EAA8EjI,GAAG,CAACZ,UAAlF,EAA8F,qBAA9F,EAAqHY,GAAG,CAAC/H,QAAzH,EAAmI,kBAAnI,EAAuJ+H,GAAG,CAACmI,KAA3J,EAAkK,qBAAlK,EAAyLnI,GAAG,CAACwB,QAA7L;AACH;AAAE,SAdmC;AAcjC5M,cAAM,EAAE;AAAEqT,kBAAQ,EAAE,UAAZ;AAAwB+I,uBAAa,EAAE,eAAvC;AAAwDlN,kBAAQ,EAAE;AAAlE,SAdyB;AAcuDjS,gBAAQ,EAAE,CAAC,WAAD,CAdjE;AAcgFiD,gBAAQ,EAAE,CAAC,iEAA0B,CACnJ;AAAEI,iBAAO,EAAE,gFAAX;AAAgCwO,qBAAW,EAAEsJ;AAA7C,SADmJ,EAEnJ;AAAE9X,iBAAO,EAAE,kFAAX;AAAwCwO,qBAAW,EAAEsJ;AAArD,SAFmJ,CAA1B,CAAD,EAGxH,wEAHwH,CAd1F;AAiBMiE,0BAAkB,EAAErP,GAjB1B;AAiB+BsP,aAAK,EAAE,CAjBtC;AAiByCC,YAAI,EAAE,EAjB/C;AAiBmDC,cAAM,EAAE,CAAC,CAAC,oBAAD,EAAuB,EAAvB,EAA2B,CAA3B,EAA8B,oBAA9B,EAAoD,CAApD,EAAuD,OAAvD,CAAD,EAAkE,CAAC,QAAD,EAAW,kBAAX,EAA+B,SAA/B,EAA0C,EAA1C,CAAlE,EAAiH,CAAC,CAAD,EAAI,kBAAJ,EAAwB,CAAxB,EAA2B,UAA3B,CAAjH,EAAyJ,CAAC,OAAD,EAAU,4CAAV,EAAwD,CAAxD,EAA2D,cAA3D,CAAzJ,EAAqO,CAAC,OAAD,EAAU,uBAAV,EAAmC,CAAnC,EAAsC,UAAtC,EAAkD,CAAlD,EAAqD,cAArD,CAArO,EAA2S,CAAC,CAAD,EAAI,0BAAJ,CAA3S,EAA4U,CAAC,CAAD,EAAI,kBAAJ,CAA5U,EAAqW,CAAC,uBAAD,EAA0B,EAA1B,EAA8B,iCAA9B,EAAiE,EAAjE,EAAqE,gCAArE,EAAuG,EAAvG,EAA2G,kCAA3G,EAA+I,kCAA/I,EAAmL,CAAnL,EAAsL,+BAAtL,EAAuN,mCAAvN,EAA4P,2BAA5P,EAAyR,yBAAzR,EAAoT,8BAApT,EAAoV,6BAApV,EAAmX,4BAAnX,EAAiZ,eAAjZ,EAAka,QAAla,EAA4a,QAA5a,CAArW,EAA4xB,CAAC,CAAD,EAAI,wBAAJ,EAA8B,qBAA9B,CAA5xB,EAAk1B,CAAC,CAAD,EAAI,uBAAJ,EAA6B,CAA7B,EAAgC,UAAhC,CAAl1B,EAA+3B,CAAC,OAAD,EAAU,qBAAV,EAAiC,CAAjC,EAAoC,iBAApC,CAA/3B,EAAu7B,CAAC,CAAD,EAAI,cAAJ,CAAv7B,EAA48B,CAAC,CAAD,EAAI,qBAAJ,CAA58B,EAAw+B,CAAC,CAAD,EAAI,uBAAJ,CAAx+B,EAAsgC,CAAC,MAAD,EAAS,SAAT,EAAoB,UAApB,EAAgC,IAAhC,EAAsC,CAAtC,EAAyC,SAAzC,EAAoD,SAApD,CAAtgC,EAAskC,CAAC,OAAD,EAAU,EAAV,CAAtkC,CAjB3D;AAiBipCC,gBAAQ,EAAE,SAASC,kBAAT,CAA4BvR,EAA5B,EAAgCC,GAAhC,EAAqC;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AAChvC,0EAAuB4B,GAAvB;;AACA,yEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC,EAAmC,CAAnC;;AACA,qEAAkB,OAAlB,EAA2B,SAAS4P,uCAAT,GAAmD;AAAE,qBAAOvR,GAAG,CAACwR,MAAJ,EAAP;AAAsB,aAAtG;;AACA,yEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,qEAAkB,CAAlB,EAAqB1R,yBAArB,EAAgD,CAAhD,EAAmD,CAAnD,EAAsD,MAAtD,EAA8D,CAA9D;;AACA,qEAAkB,CAAlB,EAAqBS,yBAArB,EAAgD,CAAhD,EAAmD,CAAnD,EAAsD,MAAtD,EAA8D,CAA9D;;AACA;;AACA,yEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,oEAAiB,CAAjB,EAAoB,KAApB,EAA2B,CAA3B;;AACA;;AACA;;AACA,qEAAkB,CAAlB,EAAqBG,gCAArB,EAAuD,CAAvD,EAA0D,EAA1D,EAA8D,aAA9D,EAA6E,CAA7E;;AACA,qEAAkB,eAAlB,EAAmC,SAAS+Q,uDAAT,GAAmE;AAAE,qBAAOzR,GAAG,CAAC/mB,KAAJ,EAAP;AAAqB,aAA7H,EAA+H,QAA/H,EAAyI,SAASy4B,gDAAT,GAA4D;AAAE,qBAAO1R,GAAG,CAAC2R,WAAJ,EAAP;AAA2B,aAAlO,EAAoO,QAApO,EAA8O,SAASC,gDAAT,GAA4D;AAAE,qBAAO5R,GAAG,CAAC/mB,KAAJ,EAAP;AAAqB,aAAjU;AACH;;AAAC,cAAI8mB,EAAE,GAAG,CAAT,EAAY;AACV,gBAAM8R,GAAG,GAAG,0DAAmB,CAAnB,CAAZ;;AACA,sEAAmB,WAAnB,EAAgC7R,GAAG,CAAC8G,SAAJ,GAAgB9G,GAAG,CAAC7O,EAAJ,GAAS,QAAzB,GAAoC,IAApE;;AACA,oEAAiB,CAAjB;;AACA,qEAAkB,UAAlB,EAA8B6O,GAAG,CAACmI,KAAlC;;AACA,sEAAmB,IAAnB,EAAyBnI,GAAG,CAAC6E,QAA7B;;AACA,oEAAiB,CAAjB;;AACA,qEAAkB,cAAlB,EAAkC,IAAlC;;AACA,oEAAiB,CAAjB;;AACA,qEAAkB,cAAlB,EAAkC,KAAlC;;AACA,oEAAiB,CAAjB;;AACA,qEAAkB,+BAAlB,EAAmD7E,GAAG,CAAC8E,kBAAvD,EAA2E,mCAA3E,EAAgH9E,GAAG,CAACrgB,eAApH,EAAqI,2BAArI,EAAkKkyB,GAAlK,EAAuK,yBAAvK,EAAkM7R,GAAG,CAAC8G,SAAtM,EAAiN,8BAAjN,EAAiP9G,GAAG,CAACmN,UAArP,EAAiQ,6BAAjQ,EAAgSnN,GAAG,CAAC4N,YAAJ,IAAoB,IAApB,GAA2B,IAA3B,GAAkC5N,GAAG,CAAC4N,YAAJ,CAAiBj4B,KAAnV,EAA0V,4BAA1V,EAAwXqqB,GAAG,CAAC9b,QAA5X;AACH;AAAE,SA3CmC;AA2CjC4tB,kBAAU,EAAE,CAAC,qEAAD,EAA0B,wDAA1B,EAA2C,4DAA3C,EAAgE,wEAAhE,EAA4F,+DAA5F,EAAoH,uDAApH,CA3CqB;AA2CgH9mB,cAAM,EAAE,CAAC,stEAAD,CA3CxH;AA2Ck1E+mB,qBAAa,EAAE,CA3Cj2E;AA2Co2ErW,YAAI,EAAE;AAAEsW,mBAAS,EAAE,CACr5EnQ,mBAAmB,CAACC,kBADi4E,EAEr5ED,mBAAmB,CAACG,cAFi4E;AAAb,SA3C12E;AA8C7BiQ,uBAAe,EAAE;AA9CY,OAAzB,CAAjB;AA+CAjF,eAAS,CAACjY,cAAV,GAA2B;AACvBwQ,eAAO,EAAE,CAAC;AAAE1rB,cAAI,EAAE,6DAAR;AAAyBG,cAAI,EAAE,CAAC,gEAAD,EAAY;AAAEk4B,uBAAW,EAAE;AAAf,WAAZ;AAA/B,SAAD,CADc;AAEvBjE,oBAAY,EAAE,CAAC;AAAEp0B,cAAI,EAAE,6DAAR;AAAyBG,cAAI,EAAE,CAAC,mEAAD,EAAe;AAAEk4B,uBAAW,EAAE;AAAf,WAAf;AAA/B,SAAD,CAFS;AAGvBzR,qBAAa,EAAE,CAAC;AAAE5mB,cAAI,EAAE,0DAAR;AAAsBG,cAAI,EAAE,CAACupB,kBAAD;AAA5B,SAAD;AAHQ,OAA3B;;AAKA,UAAMyM,sBAAsB,GAAG,aAAc,oEAA6BhD,SAA7B,CAA7C;AACA;;;AAAc,OAAC,YAAY;AAAE,wEAAyBA,SAAzB,EAAoC,CAAC;AAC1DnzB,cAAI,EAAE,uDADoD;AAE1DG,cAAI,EAAE,CAAC;AACC2N,oBAAQ,EAAE,YADX;AAECkK,oBAAQ,EAAE,WAFX;AAGCwf,oBAAQ,EAAE,8tFAHX;AAICzc,kBAAM,EAAE,CAAC,UAAD,EAAa,eAAb,EAA8B,UAA9B,CAJT;AAKCmd,yBAAa,EAAE,gEAAkBI,IALlC;AAMCF,2BAAe,EAAE,sEAAwBG,MAN1C;AAOCxhB,gBAAI,EAAE;AACF,sBAAQ,UADN;AAEF,mCAAqB,MAFnB;AAGF;AACA;AACA;AACA,+BAAiB,MANf;AAOF,uBAAS,YAPP;AAQF,2BAAa,IARX;AASF,iCAAmB,UATjB;AAUF,sCAAwB,kCAVtB;AAWF,sCAAwB,WAXtB;AAYF,mCAAqB,mBAZnB;AAaF,sCAAwB,qBAbtB;AAcF,sCAAwB,qBAdtB;AAeF,qCAAuB,YAfrB;AAgBF,yCAA2B,0BAhBzB;AAiBF,8CAAgC,4BAjB9B;AAkBF,6CAA+B,UAlB7B;AAmBF,4CAA8B,YAnB5B;AAoBF,6CAA+B,UApB7B;AAqBF,0CAA4B,OArB1B;AAsBF,6CAA+B,UAtB7B;AAuBF,2BAAa,wBAvBX;AAwBF,yBAAW,YAxBT;AAyBF,wBAAU;AAzBR,aAPP;AAkCCyhB,sBAAU,EAAE,CACRxQ,mBAAmB,CAACC,kBADZ,EAERD,mBAAmB,CAACG,cAFZ,CAlCb;AAsCCvM,qBAAS,EAAE,CACP;AAAEP,qBAAO,EAAE,gFAAX;AAAgCwO,yBAAW,EAAEsJ;AAA7C,aADO,EAEP;AAAE9X,qBAAO,EAAE,kFAAX;AAAwCwO,yBAAW,EAAEsJ;AAArD,aAFO,CAtCZ;AA0CChiB,kBAAM,EAAE,CAAC,stEAAD;AA1CT,WAAD;AAFoD,SAAD,CAApC,EA8CrB,IA9CqB,EA8Cf;AAAEua,iBAAO,EAAE,CAAC;AACd1rB,gBAAI,EAAE,6DADQ;AAEdG,gBAAI,EAAE,CAAC,gEAAD,EAAY;AAAEk4B,yBAAW,EAAE;AAAf,aAAZ;AAFQ,WAAD,CAAX;AAGFjE,sBAAY,EAAE,CAAC;AACfp0B,gBAAI,EAAE,6DADS;AAEfG,gBAAI,EAAE,CAAC,mEAAD,EAAe;AAAEk4B,yBAAW,EAAE;AAAf,aAAf;AAFS,WAAD,CAHZ;AAMFzR,uBAAa,EAAE,CAAC;AAChB5mB,gBAAI,EAAE,0DADU;AAEhBG,gBAAI,EAAE,CAACupB,kBAAD;AAFU,WAAD;AANb,SA9Ce;AAuDb,OAvDF;AAyDd;AACA;AACA;AACA;AACA;AACA;AACA;;;UACM+O,e;;;;AAENA,qBAAe,CAAChd,IAAhB,GAAuB,+DAAwB;AAAEzb,YAAI,EAAEy4B;AAAR,OAAxB,CAAvB;AACAA,qBAAe,CAAC/c,IAAhB,GAAuB,+DAAwB;AAAE9b,eAAO,EAAE,SAAS84B,uBAAT,CAAiCh5B,CAAjC,EAAoC;AAAE,iBAAO,KAAKA,CAAC,IAAI+4B,eAAV,GAAP;AAAsC,SAAvF;AAAyF7c,iBAAS,EAAE,CAACqN,mCAAD,CAApG;AAA2IpN,eAAO,EAAE,CAAC,CACxL,4DADwL,EAExL,kEAFwL,EAGxL,sEAHwL,EAIxL,sEAJwL,CAAD,EAKxL,0EALwL,EAM3L,+EAN2L,EAO3L,sEAP2L,EAQ3L,sEAR2L;AAApJ,OAAxB,CAAvB;;AASA,OAAC,YAAY;AAAE,SAAC,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0B2c,eAA1B,EAA2C;AAAE1c,sBAAY,EAAE,wBAAY;AAAE,mBAAO,CAACoX,SAAD,EAAYxJ,gBAAZ,CAAP;AAAuC,WAArE;AAAuE9N,iBAAO,EAAE,mBAAY;AAAE,mBAAO,CAAC,4DAAD,EAC1M,kEAD0M,EAE1M,sEAF0M,EAG1M,sEAH0M,CAAP;AAGhL,WAHkF;AAGhFG,iBAAO,EAAE,mBAAY;AAAE,mBAAO,CAAC,0EAAD,EACnD,+EADmD,EAC/BmX,SAD+B,EACpBxJ,gBADoB,EACF,sEADE,EAEnD,sEAFmD,CAAP;AAEzB;AALkF,SAA3C,CAAnD;AAKkB,OALjC;AAMA;;;AAAc,OAAC,YAAY;AAAE,wEAAyB8O,eAAzB,EAA0C,CAAC;AAChEz4B,cAAI,EAAE,sDAD0D;AAEhEG,cAAI,EAAE,CAAC;AACC0b,mBAAO,EAAE,CACL,4DADK,EAEL,kEAFK,EAGL,sEAHK,EAIL,sEAJK,CADV;AAOCG,mBAAO,EAAE,CACL,0EADK,EAEL,+EAFK,EAGLmX,SAHK,EAILxJ,gBAJK,EAKL,sEALK,EAML,sEANK,CAPV;AAeC5N,wBAAY,EAAE,CAACoX,SAAD,EAAYxJ,gBAAZ,CAff;AAgBC/N,qBAAS,EAAE,CAACqN,mCAAD;AAhBZ,WAAD;AAF0D,SAAD,CAA1C,EAoBrB,IApBqB,EAoBf,IApBe;AAoBP,OApBR;AAsBd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAIA;;;;;;;;;;;;;;;;;;ACz+CA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AASA,UAAM0P,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE,6DAFb;AAGE1vB,gBAAQ,EAAE,CACR;AACEyvB,cAAI,EAAE,EADR;AAEEE,oBAAU,EAAE,OAFd;AAGEC,mBAAS,EAAE;AAHb,SADQ,EAMR;AACEH,cAAI,EAAE,OADR;AAEEC,mBAAS,EAAE,qEAFb;AAGEhX,cAAI,EAAE;AAACmX,qBAAS,EAAE19B,MAAM,CAAC29B,QAAP,CAAgBC;AAA5B;AAHR,SANQ,EAWR;AACEN,cAAI,EAAE,cADR;AAEEC,mBAAS,EAAE;AAFb,SAXQ,EAeR;AACED,cAAI,EAAE,iBADR;AAEEC,mBAAS,EAAE;AAFb,SAfQ,EAmBR;AACED,cAAI,EAAE,QADR;AAEEC,mBAAS,EAAE;AAFb,SAnBQ;AAHZ,OADqB,CAAvB;;UAqCaM,iB;;;;;cAAAA;;;;2BAAAA,iB;AAAiB,S;AAAA,kBAHnB,CAAE,6DAAaC,QAAb,CAAsBT,MAAtB,CAAF,CAGmB,EAFjB,4DAEiB;;;;4HAAjBQ,iB,EAAiB;AAAA;AAAA,oBAFjB,4DAEiB;AAAA,S;AAFL,O;;;;;wEAEZA,iB,EAAiB;gBAJ7B,sDAI6B;iBAJpB;AACRtd,mBAAO,EAAE,CAAE,6DAAaud,QAAb,CAAsBT,MAAtB,CAAF,CADD;AAER3c,mBAAO,EAAE,CAAE,4DAAF;AAFD,W;AAIoB,U;;;;;;;;;;;;;;;;;;AC9C9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAIaqd,S;;;;;;;;;;;;;iBA8CX,iBAAQja,IAAR,EAAmB;AACjB,iBAAK9H,EAAL,GAAU8H,IAAI,CAAC9H,EAAf;AACA,iBAAKgiB,QAAL,GAAgBla,IAAI,CAACka,QAAL,IAAiB,EAAjC;AACA,iBAAK9a,QAAL,GAAgBY,IAAI,CAACZ,QAAL,IAAiB,EAAjC;AACA,iBAAKN,QAAL,GAAgBkB,IAAI,CAAClB,QAAL,IAAiB,EAAjC;AACA,iBAAKK,KAAL,GAAaa,IAAI,CAACb,KAAL,IAAc,EAA3B;AACA,iBAAKgb,GAAL,GAAWna,IAAI,CAACma,GAAL,IAAY,kCAAvB;AACA,iBAAKC,KAAL,GAAapa,IAAI,CAACoa,KAAL,IAAc,EAA3B;AACA,iBAAKC,UAAL,GAAkBra,IAAI,CAACqa,UAAL,IAAmB,EAArC;AACA,iBAAKC,WAAL,GAAmBta,IAAI,CAACsa,WAAL,IAAoB,EAAvC;AACA,iBAAKC,KAAL,GAAava,IAAI,CAACua,KAAL,IAAc,EAA3B;AACA,iBAAKC,OAAL,GAAexa,IAAI,CAACwa,OAApB;AACA,iBAAKC,cAAL,GAAsBza,IAAI,CAACya,cAA3B;AACD;;;;QA3D4B,qD","file":"modules-auth-auth-module-es5.c40d141df4cb1df904df.js","sourcesContent":["import { ScrollDispatcher, ViewportRuler, ScrollingModule } from '@angular/cdk/scrolling';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/common';\nexport { CdkScrollable, ScrollDispatcher, ViewportRuler } from '@angular/cdk/scrolling';\nimport { DOCUMENT, Location } from '@angular/common';\nimport { ɵɵdefineInjectable, ɵɵinject, NgZone, Injectable, Inject, Optional, ElementRef, ApplicationRef, ComponentFactoryResolver, Injector, InjectionToken, Directive, EventEmitter, TemplateRef, ViewContainerRef, Input, Output, NgModule } from '@angular/core';\nimport { coerceCssPixelValue, coerceArray, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { supportsScrollBehavior, Platform } from '@angular/cdk/platform';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { DomPortalOutlet, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { Subject, Subscription, merge } from 'rxjs';\nimport { take, takeUntil, takeWhile } from 'rxjs/operators';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst scrollBehaviorSupported = supportsScrollBehavior();\n/**\n * Strategy that will prevent the user from scrolling while the overlay is visible.\n */\nclass BlockScrollStrategy {\n    constructor(_viewportRuler, document) {\n        this._viewportRuler = _viewportRuler;\n        this._previousHTMLStyles = { top: '', left: '' };\n        this._isEnabled = false;\n        this._document = document;\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach() { }\n    /** Blocks page-level scroll while the attached overlay is open. */\n    enable() {\n        if (this._canBeEnabled()) {\n            const root = this._document.documentElement;\n            this._previousScrollPosition = this._viewportRuler.getViewportScrollPosition();\n            // Cache the previous inline styles in case the user had set them.\n            this._previousHTMLStyles.left = root.style.left || '';\n            this._previousHTMLStyles.top = root.style.top || '';\n            // Note: we're using the `html` node, instead of the `body`, because the `body` may\n            // have the user agent margin, whereas the `html` is guaranteed not to have one.\n            root.style.left = coerceCssPixelValue(-this._previousScrollPosition.left);\n            root.style.top = coerceCssPixelValue(-this._previousScrollPosition.top);\n            root.classList.add('cdk-global-scrollblock');\n            this._isEnabled = true;\n        }\n    }\n    /** Unblocks page-level scroll while the attached overlay is open. */\n    disable() {\n        if (this._isEnabled) {\n            const html = this._document.documentElement;\n            const body = this._document.body;\n            const htmlStyle = html.style;\n            const bodyStyle = body.style;\n            const previousHtmlScrollBehavior = htmlStyle.scrollBehavior || '';\n            const previousBodyScrollBehavior = bodyStyle.scrollBehavior || '';\n            this._isEnabled = false;\n            htmlStyle.left = this._previousHTMLStyles.left;\n            htmlStyle.top = this._previousHTMLStyles.top;\n            html.classList.remove('cdk-global-scrollblock');\n            // Disable user-defined smooth scrolling temporarily while we restore the scroll position.\n            // See https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-behavior\n            // Note that we don't mutate the property if the browser doesn't support `scroll-behavior`,\n            // because it can throw off feature detections in `supportsScrollBehavior` which\n            // checks for `'scrollBehavior' in documentElement.style`.\n            if (scrollBehaviorSupported) {\n                htmlStyle.scrollBehavior = bodyStyle.scrollBehavior = 'auto';\n            }\n            window.scroll(this._previousScrollPosition.left, this._previousScrollPosition.top);\n            if (scrollBehaviorSupported) {\n                htmlStyle.scrollBehavior = previousHtmlScrollBehavior;\n                bodyStyle.scrollBehavior = previousBodyScrollBehavior;\n            }\n        }\n    }\n    _canBeEnabled() {\n        // Since the scroll strategies can't be singletons, we have to use a global CSS class\n        // (`cdk-global-scrollblock`) to make sure that we don't try to disable global\n        // scrolling multiple times.\n        const html = this._document.documentElement;\n        if (html.classList.contains('cdk-global-scrollblock') || this._isEnabled) {\n            return false;\n        }\n        const body = this._document.body;\n        const viewport = this._viewportRuler.getViewportSize();\n        return body.scrollHeight > viewport.height || body.scrollWidth > viewport.width;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when attempting to attach an already-attached scroll strategy.\n */\nfunction getMatScrollStrategyAlreadyAttachedError() {\n    return Error(`Scroll strategy has already been attached.`);\n}\n\n/**\n * Strategy that will close the overlay as soon as the user starts scrolling.\n */\nclass CloseScrollStrategy {\n    constructor(_scrollDispatcher, _ngZone, _viewportRuler, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._config = _config;\n        this._scrollSubscription = null;\n        /** Detaches the overlay ref and disables the scroll strategy. */\n        this._detach = () => {\n            this.disable();\n            if (this._overlayRef.hasAttached()) {\n                this._ngZone.run(() => this._overlayRef.detach());\n            }\n        };\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /** Enables the closing of the attached overlay on scroll. */\n    enable() {\n        if (this._scrollSubscription) {\n            return;\n        }\n        const stream = this._scrollDispatcher.scrolled(0);\n        if (this._config && this._config.threshold && this._config.threshold > 1) {\n            this._initialScrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n            this._scrollSubscription = stream.subscribe(() => {\n                const scrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n                if (Math.abs(scrollPosition - this._initialScrollPosition) > this._config.threshold) {\n                    this._detach();\n                }\n                else {\n                    this._overlayRef.updatePosition();\n                }\n            });\n        }\n        else {\n            this._scrollSubscription = stream.subscribe(this._detach);\n        }\n    }\n    /** Disables the closing the attached overlay on scroll. */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    detach() {\n        this.disable();\n        this._overlayRef = null;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Scroll strategy that doesn't do anything. */\nclass NoopScrollStrategy {\n    /** Does nothing, as this scroll strategy is a no-op. */\n    enable() { }\n    /** Does nothing, as this scroll strategy is a no-op. */\n    disable() { }\n    /** Does nothing, as this scroll strategy is a no-op. */\n    attach() { }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(jelbourn): move this to live with the rest of the scrolling code\n// TODO(jelbourn): someday replace this with IntersectionObservers\n/**\n * Gets whether an element is scrolled outside of view by any of its parent scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is scrolled out of view\n * @docs-private\n */\nfunction isElementScrolledOutsideView(element, scrollContainers) {\n    return scrollContainers.some(containerBounds => {\n        const outsideAbove = element.bottom < containerBounds.top;\n        const outsideBelow = element.top > containerBounds.bottom;\n        const outsideLeft = element.right < containerBounds.left;\n        const outsideRight = element.left > containerBounds.right;\n        return outsideAbove || outsideBelow || outsideLeft || outsideRight;\n    });\n}\n/**\n * Gets whether an element is clipped by any of its scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is clipped\n * @docs-private\n */\nfunction isElementClippedByScrolling(element, scrollContainers) {\n    return scrollContainers.some(scrollContainerRect => {\n        const clippedAbove = element.top < scrollContainerRect.top;\n        const clippedBelow = element.bottom > scrollContainerRect.bottom;\n        const clippedLeft = element.left < scrollContainerRect.left;\n        const clippedRight = element.right > scrollContainerRect.right;\n        return clippedAbove || clippedBelow || clippedLeft || clippedRight;\n    });\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Strategy that will update the element position as the user is scrolling.\n */\nclass RepositionScrollStrategy {\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        this._config = _config;\n        this._scrollSubscription = null;\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /** Enables repositioning of the attached overlay on scroll. */\n    enable() {\n        if (!this._scrollSubscription) {\n            const throttle = this._config ? this._config.scrollThrottle : 0;\n            this._scrollSubscription = this._scrollDispatcher.scrolled(throttle).subscribe(() => {\n                this._overlayRef.updatePosition();\n                // TODO(crisbeto): make `close` on by default once all components can handle it.\n                if (this._config && this._config.autoClose) {\n                    const overlayRect = this._overlayRef.overlayElement.getBoundingClientRect();\n                    const { width, height } = this._viewportRuler.getViewportSize();\n                    // TODO(crisbeto): include all ancestor scroll containers here once\n                    // we have a way of exposing the trigger element to the scroll strategy.\n                    const parentRects = [{ width, height, bottom: height, right: width, top: 0, left: 0 }];\n                    if (isElementScrolledOutsideView(overlayRect, parentRects)) {\n                        this.disable();\n                        this._ngZone.run(() => this._overlayRef.detach());\n                    }\n                }\n            });\n        }\n    }\n    /** Disables repositioning of the attached overlay on scroll. */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    detach() {\n        this.disable();\n        this._overlayRef = null;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Options for how an overlay will handle scrolling.\n *\n * Users can provide a custom value for `ScrollStrategyOptions` to replace the default\n * behaviors. This class primarily acts as a factory for ScrollStrategy instances.\n */\nclass ScrollStrategyOptions {\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, document) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        /** Do nothing on scroll. */\n        this.noop = () => new NoopScrollStrategy();\n        /**\n         * Close the overlay as soon as the user scrolls.\n         * @param config Configuration to be used inside the scroll strategy.\n         */\n        this.close = (config) => new CloseScrollStrategy(this._scrollDispatcher, this._ngZone, this._viewportRuler, config);\n        /** Block scrolling. */\n        this.block = () => new BlockScrollStrategy(this._viewportRuler, this._document);\n        /**\n         * Update the overlay's position on scroll.\n         * @param config Configuration to be used inside the scroll strategy.\n         * Allows debouncing the reposition calls.\n         */\n        this.reposition = (config) => new RepositionScrollStrategy(this._scrollDispatcher, this._viewportRuler, this._ngZone, config);\n        this._document = document;\n    }\n}\nScrollStrategyOptions.ɵfac = function ScrollStrategyOptions_Factory(t) { return new (t || ScrollStrategyOptions)(ɵngcc0.ɵɵinject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵinject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT)); };\nScrollStrategyOptions.ɵprov = ɵɵdefineInjectable({ factory: function ScrollStrategyOptions_Factory() { return new ScrollStrategyOptions(ɵɵinject(ScrollDispatcher), ɵɵinject(ViewportRuler), ɵɵinject(NgZone), ɵɵinject(DOCUMENT)); }, token: ScrollStrategyOptions, providedIn: \"root\" });\nScrollStrategyOptions.ctorParameters = () => [\n    { type: ScrollDispatcher },\n    { type: ViewportRuler },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScrollStrategyOptions, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc1.ViewportRuler }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Initial configuration used when creating an overlay. */\nclass OverlayConfig {\n    constructor(config) {\n        /** Strategy to be used when handling scroll events while the overlay is open. */\n        this.scrollStrategy = new NoopScrollStrategy();\n        /** Custom class to add to the overlay pane. */\n        this.panelClass = '';\n        /** Whether the overlay has a backdrop. */\n        this.hasBackdrop = false;\n        /** Custom class to add to the backdrop */\n        this.backdropClass = 'cdk-overlay-dark-backdrop';\n        /**\n         * Whether the overlay should be disposed of when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.disposeOnNavigation = false;\n        if (config) {\n            // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n            // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n            // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n            const configKeys = Object.keys(config);\n            for (const key of configKeys) {\n                if (config[key] !== undefined) {\n                    // TypeScript, as of version 3.5, sees the left-hand-side of this expression\n                    // as \"I don't know *which* key this is, so the only valid value is the intersection\n                    // of all the posible values.\" In this case, that happens to be `undefined`. TypeScript\n                    // is not smart enough to see that the right-hand-side is actually an access of the same\n                    // exact type with the same exact key, meaning that the value type must be identical.\n                    // So we use `any` to work around this.\n                    this[key] = config[key];\n                }\n            }\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The points of the origin element and the overlay element to connect. */\nclass ConnectionPositionPair {\n    constructor(origin, overlay, \n    /** Offset along the X axis. */\n    offsetX, \n    /** Offset along the Y axis. */\n    offsetY, \n    /** Class(es) to be applied to the panel while this position is active. */\n    panelClass) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.panelClass = panelClass;\n        this.originX = origin.originX;\n        this.originY = origin.originY;\n        this.overlayX = overlay.overlayX;\n        this.overlayY = overlay.overlayY;\n    }\n}\n/**\n * Set of properties regarding the position of the origin and overlay relative to the viewport\n * with respect to the containing Scrollable elements.\n *\n * The overlay and origin are clipped if any part of their bounding client rectangle exceeds the\n * bounds of any one of the strategy's Scrollable's bounding client rectangle.\n *\n * The overlay and origin are outside view if there is no overlap between their bounding client\n * rectangle and any one of the strategy's Scrollable's bounding client rectangle.\n *\n *       -----------                    -----------\n *       | outside |                    | clipped |\n *       |  view   |              --------------------------\n *       |         |              |     |         |        |\n *       ----------               |     -----------        |\n *  --------------------------    |                        |\n *  |                        |    |      Scrollable        |\n *  |                        |    |                        |\n *  |                        |     --------------------------\n *  |      Scrollable        |\n *  |                        |\n *  --------------------------\n *\n *  @docs-private\n */\nclass ScrollingVisibility {\n}\n/** The change event emitted by the strategy when a fallback position is used. */\nclass ConnectedOverlayPositionChange {\n    constructor(\n    /** The position used as a result of this change. */\n    connectionPair, \n    /** @docs-private */\n    scrollableViewProperties) {\n        this.connectionPair = connectionPair;\n        this.scrollableViewProperties = scrollableViewProperties;\n    }\n}\nConnectedOverlayPositionChange.ctorParameters = () => [\n    { type: ConnectionPositionPair },\n    { type: ScrollingVisibility, decorators: [{ type: Optional }] }\n];\n/**\n * Validates whether a vertical position property matches the expected values.\n * @param property Name of the property being validated.\n * @param value Value of the property being validated.\n * @docs-private\n */\nfunction validateVerticalPosition(property, value) {\n    if (value !== 'top' && value !== 'bottom' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"top\", \"bottom\" or \"center\".`);\n    }\n}\n/**\n * Validates whether a horizontal position property matches the expected values.\n * @param property Name of the property being validated.\n * @param value Value of the property being validated.\n * @docs-private\n */\nfunction validateHorizontalPosition(property, value) {\n    if (value !== 'start' && value !== 'end' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"start\", \"end\" or \"center\".`);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Service for dispatching events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass BaseOverlayDispatcher {\n    constructor(document) {\n        /** Currently attached overlays in the order they were attached. */\n        this._attachedOverlays = [];\n        this._document = document;\n    }\n    ngOnDestroy() {\n        this.detach();\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        // Ensure that we don't get the same overlay multiple times.\n        this.remove(overlayRef);\n        this._attachedOverlays.push(overlayRef);\n    }\n    /** Remove an overlay from the list of attached overlay refs. */\n    remove(overlayRef) {\n        const index = this._attachedOverlays.indexOf(overlayRef);\n        if (index > -1) {\n            this._attachedOverlays.splice(index, 1);\n        }\n        // Remove the global listener once there are no more overlays.\n        if (this._attachedOverlays.length === 0) {\n            this.detach();\n        }\n    }\n}\nBaseOverlayDispatcher.ɵfac = function BaseOverlayDispatcher_Factory(t) { return new (t || BaseOverlayDispatcher)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nBaseOverlayDispatcher.ɵprov = ɵɵdefineInjectable({ factory: function BaseOverlayDispatcher_Factory() { return new BaseOverlayDispatcher(ɵɵinject(DOCUMENT)); }, token: BaseOverlayDispatcher, providedIn: \"root\" });\nBaseOverlayDispatcher.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BaseOverlayDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Service for dispatching keyboard events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass OverlayKeyboardDispatcher extends BaseOverlayDispatcher {\n    constructor(document) {\n        super(document);\n        /** Keyboard event listener that will be attached to the body. */\n        this._keydownListener = (event) => {\n            const overlays = this._attachedOverlays;\n            for (let i = overlays.length - 1; i > -1; i--) {\n                // Dispatch the keydown event to the top overlay which has subscribers to its keydown events.\n                // We want to target the most recent overlay, rather than trying to match where the event came\n                // from, because some components might open an overlay, but keep focus on a trigger element\n                // (e.g. for select and autocomplete). We skip overlays without keydown event subscriptions,\n                // because we don't want overlays that don't handle keyboard events to block the ones below\n                // them that do.\n                if (overlays[i]._keydownEvents.observers.length > 0) {\n                    overlays[i]._keydownEvents.next(event);\n                    break;\n                }\n            }\n        };\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        super.add(overlayRef);\n        // Lazily start dispatcher once first overlay is added\n        if (!this._isAttached) {\n            this._document.body.addEventListener('keydown', this._keydownListener);\n            this._isAttached = true;\n        }\n    }\n    /** Detaches the global keyboard event listener. */\n    detach() {\n        if (this._isAttached) {\n            this._document.body.removeEventListener('keydown', this._keydownListener);\n            this._isAttached = false;\n        }\n    }\n}\nOverlayKeyboardDispatcher.ɵfac = function OverlayKeyboardDispatcher_Factory(t) { return new (t || OverlayKeyboardDispatcher)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nOverlayKeyboardDispatcher.ɵprov = ɵɵdefineInjectable({ factory: function OverlayKeyboardDispatcher_Factory() { return new OverlayKeyboardDispatcher(ɵɵinject(DOCUMENT)); }, token: OverlayKeyboardDispatcher, providedIn: \"root\" });\nOverlayKeyboardDispatcher.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayKeyboardDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Service for dispatching mouse click events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass OverlayOutsideClickDispatcher extends BaseOverlayDispatcher {\n    constructor(document, _platform) {\n        super(document);\n        this._platform = _platform;\n        this._cursorStyleIsSet = false;\n        /** Click event listener that will be attached to the body propagate phase. */\n        this._clickListener = (event) => {\n            // Get the target through the `composedPath` if possible to account for shadow DOM.\n            const target = event.composedPath ? event.composedPath()[0] : event.target;\n            // We copy the array because the original may be modified asynchronously if the\n            // outsidePointerEvents listener decides to detach overlays resulting in index errors inside\n            // the for loop.\n            const overlays = this._attachedOverlays.slice();\n            // Dispatch the mouse event to the top overlay which has subscribers to its mouse events.\n            // We want to target all overlays for which the click could be considered as outside click.\n            // As soon as we reach an overlay for which the click is not outside click we break off\n            // the loop.\n            for (let i = overlays.length - 1; i > -1; i--) {\n                const overlayRef = overlays[i];\n                if (overlayRef._outsidePointerEvents.observers.length < 1 || !overlayRef.hasAttached()) {\n                    continue;\n                }\n                // If it's a click inside the overlay, just break - we should do nothing\n                // If it's an outside click dispatch the mouse event, and proceed with the next overlay\n                if (overlayRef.overlayElement.contains(target)) {\n                    break;\n                }\n                overlayRef._outsidePointerEvents.next(event);\n            }\n        };\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        super.add(overlayRef);\n        // tslint:disable: max-line-length\n        // Safari on iOS does not generate click events for non-interactive\n        // elements. However, we want to receive a click for any element outside\n        // the overlay. We can force a \"clickable\" state by setting\n        // `cursor: pointer` on the document body.\n        // See https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event#Safari_Mobile\n        // and https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html\n        // tslint:enable: max-line-length\n        if (!this._isAttached) {\n            this._document.body.addEventListener('click', this._clickListener, true);\n            this._document.body.addEventListener('contextmenu', this._clickListener, true);\n            // click event is not fired on iOS. To make element \"clickable\" we are\n            // setting the cursor to pointer\n            if (this._platform.IOS && !this._cursorStyleIsSet) {\n                this._cursorOriginalValue = this._document.body.style.cursor;\n                this._document.body.style.cursor = 'pointer';\n                this._cursorStyleIsSet = true;\n            }\n            this._isAttached = true;\n        }\n    }\n    /** Detaches the global keyboard event listener. */\n    detach() {\n        if (this._isAttached) {\n            this._document.body.removeEventListener('click', this._clickListener, true);\n            this._document.body.removeEventListener('contextmenu', this._clickListener, true);\n            if (this._platform.IOS && this._cursorStyleIsSet) {\n                this._document.body.style.cursor = this._cursorOriginalValue;\n                this._cursorStyleIsSet = false;\n            }\n            this._isAttached = false;\n        }\n    }\n}\nOverlayOutsideClickDispatcher.ɵfac = function OverlayOutsideClickDispatcher_Factory(t) { return new (t || OverlayOutsideClickDispatcher)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform)); };\nOverlayOutsideClickDispatcher.ɵprov = ɵɵdefineInjectable({ factory: function OverlayOutsideClickDispatcher_Factory() { return new OverlayOutsideClickDispatcher(ɵɵinject(DOCUMENT), ɵɵinject(Platform)); }, token: OverlayOutsideClickDispatcher, providedIn: \"root\" });\nOverlayOutsideClickDispatcher.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayOutsideClickDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Whether we're in a testing environment.\n * TODO(crisbeto): remove this once we have an overlay testing module.\n */\nconst isTestEnvironment = typeof window !== 'undefined' && !!window &&\n    !!(window.__karma__ || window.jasmine);\n/** Container inside which all overlays will render. */\nclass OverlayContainer {\n    constructor(document, _platform) {\n        this._platform = _platform;\n        this._document = document;\n    }\n    ngOnDestroy() {\n        const container = this._containerElement;\n        if (container && container.parentNode) {\n            container.parentNode.removeChild(container);\n        }\n    }\n    /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time  it is called to facilitate using\n     * the container in non-browser environments.\n     * @returns the container element\n     */\n    getContainerElement() {\n        if (!this._containerElement) {\n            this._createContainer();\n        }\n        return this._containerElement;\n    }\n    /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body.\n     */\n    _createContainer() {\n        const containerClass = 'cdk-overlay-container';\n        if (this._platform.isBrowser || isTestEnvironment) {\n            const oppositePlatformContainers = this._document.querySelectorAll(`.${containerClass}[platform=\"server\"], ` +\n                `.${containerClass}[platform=\"test\"]`);\n            // Remove any old containers from the opposite platform.\n            // This can happen when transitioning from the server to the client.\n            for (let i = 0; i < oppositePlatformContainers.length; i++) {\n                oppositePlatformContainers[i].parentNode.removeChild(oppositePlatformContainers[i]);\n            }\n        }\n        const container = this._document.createElement('div');\n        container.classList.add(containerClass);\n        // A long time ago we kept adding new overlay containers whenever a new app was instantiated,\n        // but at some point we added logic which clears the duplicate ones in order to avoid leaks.\n        // The new logic was a little too aggressive since it was breaking some legitimate use cases.\n        // To mitigate the problem we made it so that only containers from a different platform are\n        // cleared, but the side-effect was that people started depending on the overly-aggressive\n        // logic to clean up their tests for them. Until we can introduce an overlay-specific testing\n        // module which does the cleanup, we try to detect that we're in a test environment and we\n        // always clear the container. See #17006.\n        // TODO(crisbeto): remove the test environment check once we have an overlay testing module.\n        if (isTestEnvironment) {\n            container.setAttribute('platform', 'test');\n        }\n        else if (!this._platform.isBrowser) {\n            container.setAttribute('platform', 'server');\n        }\n        this._document.body.appendChild(container);\n        this._containerElement = container;\n    }\n}\nOverlayContainer.ɵfac = function OverlayContainer_Factory(t) { return new (t || OverlayContainer)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform)); };\nOverlayContainer.ɵprov = ɵɵdefineInjectable({ factory: function OverlayContainer_Factory() { return new OverlayContainer(ɵɵinject(DOCUMENT), ɵɵinject(Platform)); }, token: OverlayContainer, providedIn: \"root\" });\nOverlayContainer.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayContainer, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nclass OverlayRef {\n    constructor(_portalOutlet, _host, _pane, _config, _ngZone, _keyboardDispatcher, _document, _location, _outsideClickDispatcher) {\n        this._portalOutlet = _portalOutlet;\n        this._host = _host;\n        this._pane = _pane;\n        this._config = _config;\n        this._ngZone = _ngZone;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._document = _document;\n        this._location = _location;\n        this._outsideClickDispatcher = _outsideClickDispatcher;\n        this._backdropElement = null;\n        this._backdropClick = new Subject();\n        this._attachments = new Subject();\n        this._detachments = new Subject();\n        this._locationChanges = Subscription.EMPTY;\n        this._backdropClickHandler = (event) => this._backdropClick.next(event);\n        /** Stream of keydown events dispatched to this overlay. */\n        this._keydownEvents = new Subject();\n        /** Stream of mouse outside events dispatched to this overlay. */\n        this._outsidePointerEvents = new Subject();\n        if (_config.scrollStrategy) {\n            this._scrollStrategy = _config.scrollStrategy;\n            this._scrollStrategy.attach(this);\n        }\n        this._positionStrategy = _config.positionStrategy;\n    }\n    /** The overlay's HTML element */\n    get overlayElement() {\n        return this._pane;\n    }\n    /** The overlay's backdrop HTML element. */\n    get backdropElement() {\n        return this._backdropElement;\n    }\n    /**\n     * Wrapper around the panel element. Can be used for advanced\n     * positioning where a wrapper with specific styling is\n     * required around the overlay pane.\n     */\n    get hostElement() {\n        return this._host;\n    }\n    /**\n     * Attaches content, given via a Portal, to the overlay.\n     * If the overlay is configured to have a backdrop, it will be created.\n     *\n     * @param portal Portal instance to which to attach the overlay.\n     * @returns The portal attachment result.\n     */\n    attach(portal) {\n        let attachResult = this._portalOutlet.attach(portal);\n        // Update the pane element with the given configuration.\n        if (!this._host.parentElement && this._previousHostParent) {\n            this._previousHostParent.appendChild(this._host);\n        }\n        if (this._positionStrategy) {\n            this._positionStrategy.attach(this);\n        }\n        this._updateStackingOrder();\n        this._updateElementSize();\n        this._updateElementDirection();\n        if (this._scrollStrategy) {\n            this._scrollStrategy.enable();\n        }\n        // Update the position once the zone is stable so that the overlay will be fully rendered\n        // before attempting to position it, as the position may depend on the size of the rendered\n        // content.\n        this._ngZone.onStable\n            .pipe(take(1))\n            .subscribe(() => {\n            // The overlay could've been detached before the zone has stabilized.\n            if (this.hasAttached()) {\n                this.updatePosition();\n            }\n        });\n        // Enable pointer events for the overlay pane element.\n        this._togglePointerEvents(true);\n        if (this._config.hasBackdrop) {\n            this._attachBackdrop();\n        }\n        if (this._config.panelClass) {\n            this._toggleClasses(this._pane, this._config.panelClass, true);\n        }\n        // Only emit the `attachments` event once all other setup is done.\n        this._attachments.next();\n        // Track this overlay by the keyboard dispatcher\n        this._keyboardDispatcher.add(this);\n        if (this._config.disposeOnNavigation) {\n            this._locationChanges = this._location.subscribe(() => this.dispose());\n        }\n        this._outsideClickDispatcher.add(this);\n        return attachResult;\n    }\n    /**\n     * Detaches an overlay from a portal.\n     * @returns The portal detachment result.\n     */\n    detach() {\n        if (!this.hasAttached()) {\n            return;\n        }\n        this.detachBackdrop();\n        // When the overlay is detached, the pane element should disable pointer events.\n        // This is necessary because otherwise the pane element will cover the page and disable\n        // pointer events therefore. Depends on the position strategy and the applied pane boundaries.\n        this._togglePointerEvents(false);\n        if (this._positionStrategy && this._positionStrategy.detach) {\n            this._positionStrategy.detach();\n        }\n        if (this._scrollStrategy) {\n            this._scrollStrategy.disable();\n        }\n        const detachmentResult = this._portalOutlet.detach();\n        // Only emit after everything is detached.\n        this._detachments.next();\n        // Remove this overlay from keyboard dispatcher tracking.\n        this._keyboardDispatcher.remove(this);\n        // Keeping the host element in the DOM can cause scroll jank, because it still gets\n        // rendered, even though it's transparent and unclickable which is why we remove it.\n        this._detachContentWhenStable();\n        this._locationChanges.unsubscribe();\n        this._outsideClickDispatcher.remove(this);\n        return detachmentResult;\n    }\n    /** Cleans up the overlay from the DOM. */\n    dispose() {\n        const isAttached = this.hasAttached();\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._disposeScrollStrategy();\n        this.detachBackdrop();\n        this._locationChanges.unsubscribe();\n        this._keyboardDispatcher.remove(this);\n        this._portalOutlet.dispose();\n        this._attachments.complete();\n        this._backdropClick.complete();\n        this._keydownEvents.complete();\n        this._outsidePointerEvents.complete();\n        this._outsideClickDispatcher.remove(this);\n        if (this._host && this._host.parentNode) {\n            this._host.parentNode.removeChild(this._host);\n            this._host = null;\n        }\n        this._previousHostParent = this._pane = null;\n        if (isAttached) {\n            this._detachments.next();\n        }\n        this._detachments.complete();\n    }\n    /** Whether the overlay has attached content. */\n    hasAttached() {\n        return this._portalOutlet.hasAttached();\n    }\n    /** Gets an observable that emits when the backdrop has been clicked. */\n    backdropClick() {\n        return this._backdropClick;\n    }\n    /** Gets an observable that emits when the overlay has been attached. */\n    attachments() {\n        return this._attachments;\n    }\n    /** Gets an observable that emits when the overlay has been detached. */\n    detachments() {\n        return this._detachments;\n    }\n    /** Gets an observable of keydown events targeted to this overlay. */\n    keydownEvents() {\n        return this._keydownEvents;\n    }\n    /** Gets an observable of pointer events targeted outside this overlay. */\n    outsidePointerEvents() {\n        return this._outsidePointerEvents;\n    }\n    /** Gets the current overlay configuration, which is immutable. */\n    getConfig() {\n        return this._config;\n    }\n    /** Updates the position of the overlay based on the position strategy. */\n    updatePosition() {\n        if (this._positionStrategy) {\n            this._positionStrategy.apply();\n        }\n    }\n    /** Switches to a new position strategy and updates the overlay position. */\n    updatePositionStrategy(strategy) {\n        if (strategy === this._positionStrategy) {\n            return;\n        }\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._positionStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            this.updatePosition();\n        }\n    }\n    /** Update the size properties of the overlay. */\n    updateSize(sizeConfig) {\n        this._config = Object.assign(Object.assign({}, this._config), sizeConfig);\n        this._updateElementSize();\n    }\n    /** Sets the LTR/RTL direction for the overlay. */\n    setDirection(dir) {\n        this._config = Object.assign(Object.assign({}, this._config), { direction: dir });\n        this._updateElementDirection();\n    }\n    /** Add a CSS class or an array of classes to the overlay pane. */\n    addPanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, true);\n        }\n    }\n    /** Remove a CSS class or an array of classes from the overlay pane. */\n    removePanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, false);\n        }\n    }\n    /**\n     * Returns the layout direction of the overlay panel.\n     */\n    getDirection() {\n        const direction = this._config.direction;\n        if (!direction) {\n            return 'ltr';\n        }\n        return typeof direction === 'string' ? direction : direction.value;\n    }\n    /** Switches to a new scroll strategy. */\n    updateScrollStrategy(strategy) {\n        if (strategy === this._scrollStrategy) {\n            return;\n        }\n        this._disposeScrollStrategy();\n        this._scrollStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            strategy.enable();\n        }\n    }\n    /** Updates the text direction of the overlay panel. */\n    _updateElementDirection() {\n        this._host.setAttribute('dir', this.getDirection());\n    }\n    /** Updates the size of the overlay element based on the overlay config. */\n    _updateElementSize() {\n        if (!this._pane) {\n            return;\n        }\n        const style = this._pane.style;\n        style.width = coerceCssPixelValue(this._config.width);\n        style.height = coerceCssPixelValue(this._config.height);\n        style.minWidth = coerceCssPixelValue(this._config.minWidth);\n        style.minHeight = coerceCssPixelValue(this._config.minHeight);\n        style.maxWidth = coerceCssPixelValue(this._config.maxWidth);\n        style.maxHeight = coerceCssPixelValue(this._config.maxHeight);\n    }\n    /** Toggles the pointer events for the overlay pane element. */\n    _togglePointerEvents(enablePointer) {\n        this._pane.style.pointerEvents = enablePointer ? '' : 'none';\n    }\n    /** Attaches a backdrop for this overlay. */\n    _attachBackdrop() {\n        const showingClass = 'cdk-overlay-backdrop-showing';\n        this._backdropElement = this._document.createElement('div');\n        this._backdropElement.classList.add('cdk-overlay-backdrop');\n        if (this._config.backdropClass) {\n            this._toggleClasses(this._backdropElement, this._config.backdropClass, true);\n        }\n        // Insert the backdrop before the pane in the DOM order,\n        // in order to handle stacked overlays properly.\n        this._host.parentElement.insertBefore(this._backdropElement, this._host);\n        // Forward backdrop clicks such that the consumer of the overlay can perform whatever\n        // action desired when such a click occurs (usually closing the overlay).\n        this._backdropElement.addEventListener('click', this._backdropClickHandler);\n        // Add class to fade-in the backdrop after one frame.\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular(() => {\n                requestAnimationFrame(() => {\n                    if (this._backdropElement) {\n                        this._backdropElement.classList.add(showingClass);\n                    }\n                });\n            });\n        }\n        else {\n            this._backdropElement.classList.add(showingClass);\n        }\n    }\n    /**\n     * Updates the stacking order of the element, moving it to the top if necessary.\n     * This is required in cases where one overlay was detached, while another one,\n     * that should be behind it, was destroyed. The next time both of them are opened,\n     * the stacking will be wrong, because the detached element's pane will still be\n     * in its original DOM position.\n     */\n    _updateStackingOrder() {\n        if (this._host.nextSibling) {\n            this._host.parentNode.appendChild(this._host);\n        }\n    }\n    /** Detaches the backdrop (if any) associated with the overlay. */\n    detachBackdrop() {\n        let backdropToDetach = this._backdropElement;\n        if (!backdropToDetach) {\n            return;\n        }\n        let timeoutId;\n        let finishDetach = () => {\n            // It may not be attached to anything in certain cases (e.g. unit tests).\n            if (backdropToDetach) {\n                backdropToDetach.removeEventListener('click', this._backdropClickHandler);\n                backdropToDetach.removeEventListener('transitionend', finishDetach);\n                if (backdropToDetach.parentNode) {\n                    backdropToDetach.parentNode.removeChild(backdropToDetach);\n                }\n            }\n            // It is possible that a new portal has been attached to this overlay since we started\n            // removing the backdrop. If that is the case, only clear the backdrop reference if it\n            // is still the same instance that we started to remove.\n            if (this._backdropElement == backdropToDetach) {\n                this._backdropElement = null;\n            }\n            if (this._config.backdropClass) {\n                this._toggleClasses(backdropToDetach, this._config.backdropClass, false);\n            }\n            clearTimeout(timeoutId);\n        };\n        backdropToDetach.classList.remove('cdk-overlay-backdrop-showing');\n        this._ngZone.runOutsideAngular(() => {\n            backdropToDetach.addEventListener('transitionend', finishDetach);\n        });\n        // If the backdrop doesn't have a transition, the `transitionend` event won't fire.\n        // In this case we make it unclickable and we try to remove it after a delay.\n        backdropToDetach.style.pointerEvents = 'none';\n        // Run this outside the Angular zone because there's nothing that Angular cares about.\n        // If it were to run inside the Angular zone, every test that used Overlay would have to be\n        // either async or fakeAsync.\n        timeoutId = this._ngZone.runOutsideAngular(() => setTimeout(finishDetach, 500));\n    }\n    /** Toggles a single CSS class or an array of classes on an element. */\n    _toggleClasses(element, cssClasses, isAdd) {\n        const classList = element.classList;\n        coerceArray(cssClasses).forEach(cssClass => {\n            // We can't do a spread here, because IE doesn't support setting multiple classes.\n            // Also trying to add an empty string to a DOMTokenList will throw.\n            if (cssClass) {\n                isAdd ? classList.add(cssClass) : classList.remove(cssClass);\n            }\n        });\n    }\n    /** Detaches the overlay content next time the zone stabilizes. */\n    _detachContentWhenStable() {\n        // Normally we wouldn't have to explicitly run this outside the `NgZone`, however\n        // if the consumer is using `zone-patch-rxjs`, the `Subscription.unsubscribe` call will\n        // be patched to run inside the zone, which will throw us into an infinite loop.\n        this._ngZone.runOutsideAngular(() => {\n            // We can't remove the host here immediately, because the overlay pane's content\n            // might still be animating. This stream helps us avoid interrupting the animation\n            // by waiting for the pane to become empty.\n            const subscription = this._ngZone.onStable\n                .pipe(takeUntil(merge(this._attachments, this._detachments)))\n                .subscribe(() => {\n                // Needs a couple of checks for the pane and host, because\n                // they may have been removed by the time the zone stabilizes.\n                if (!this._pane || !this._host || this._pane.children.length === 0) {\n                    if (this._pane && this._config.panelClass) {\n                        this._toggleClasses(this._pane, this._config.panelClass, false);\n                    }\n                    if (this._host && this._host.parentElement) {\n                        this._previousHostParent = this._host.parentElement;\n                        this._previousHostParent.removeChild(this._host);\n                    }\n                    subscription.unsubscribe();\n                }\n            });\n        });\n    }\n    /** Disposes of a scroll strategy. */\n    _disposeScrollStrategy() {\n        const scrollStrategy = this._scrollStrategy;\n        if (scrollStrategy) {\n            scrollStrategy.disable();\n            if (scrollStrategy.detach) {\n                scrollStrategy.detach();\n            }\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO: refactor clipping detection into a separate thing (part of scrolling module)\n// TODO: doesn't handle both flexible width and height when it has to scroll along both axis.\n/** Class to be added to the overlay bounding box. */\nconst boundingBoxClass = 'cdk-overlay-connected-position-bounding-box';\n/** Regex used to split a string on its CSS units. */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n */\nclass FlexibleConnectedPositionStrategy {\n    constructor(connectedTo, _viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n        /** Last size used for the bounding box. Used to avoid resizing the overlay after open. */\n        this._lastBoundingBoxSize = { width: 0, height: 0 };\n        /** Whether the overlay was pushed in a previous positioning. */\n        this._isPushed = false;\n        /** Whether the overlay can be pushed on-screen on the initial open. */\n        this._canPush = true;\n        /** Whether the overlay can grow via flexible width/height after the initial open. */\n        this._growAfterOpen = false;\n        /** Whether the overlay's width and height can be constrained to fit within the viewport. */\n        this._hasFlexibleDimensions = true;\n        /** Whether the overlay position is locked. */\n        this._positionLocked = false;\n        /** Amount of space that must be maintained between the overlay and the edge of the viewport. */\n        this._viewportMargin = 0;\n        /** The Scrollable containers used to check scrollable view properties on position change. */\n        this._scrollables = [];\n        /** Ordered list of preferred positions, from most to least desirable. */\n        this._preferredPositions = [];\n        /** Subject that emits whenever the position changes. */\n        this._positionChanges = new Subject();\n        /** Subscription to viewport size changes. */\n        this._resizeSubscription = Subscription.EMPTY;\n        /** Default offset for the overlay along the x axis. */\n        this._offsetX = 0;\n        /** Default offset for the overlay along the y axis. */\n        this._offsetY = 0;\n        /** Keeps track of the CSS classes that the position strategy has applied on the overlay panel. */\n        this._appliedPanelClasses = [];\n        /** Observable sequence of position changes. */\n        this.positionChanges = this._positionChanges;\n        this.setOrigin(connectedTo);\n    }\n    /** Ordered list of preferred positions, from most to least desirable. */\n    get positions() {\n        return this._preferredPositions;\n    }\n    /** Attaches this position strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef && overlayRef !== this._overlayRef &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('This position strategy is already attached to an overlay');\n        }\n        this._validatePositions();\n        overlayRef.hostElement.classList.add(boundingBoxClass);\n        this._overlayRef = overlayRef;\n        this._boundingBox = overlayRef.hostElement;\n        this._pane = overlayRef.overlayElement;\n        this._isDisposed = false;\n        this._isInitialRender = true;\n        this._lastPosition = null;\n        this._resizeSubscription.unsubscribe();\n        this._resizeSubscription = this._viewportRuler.change().subscribe(() => {\n            // When the window is resized, we want to trigger the next reposition as if it\n            // was an initial render, in order for the strategy to pick a new optimal position,\n            // otherwise position locking will cause it to stay at the old one.\n            this._isInitialRender = true;\n            this.apply();\n        });\n    }\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin best fits on-screen.\n     *\n     * The selection of a position goes as follows:\n     *  - If any positions fit completely within the viewport as-is,\n     *      choose the first position that does so.\n     *  - If flexible dimensions are enabled and at least one satifies the given minimum width/height,\n     *      choose the position with the greatest available size modified by the positions' weight.\n     *  - If pushing is enabled, take the position that went off-screen the least and push it\n     *      on-screen.\n     *  - If none of the previous criteria were met, use the position that goes off-screen the least.\n     * @docs-private\n     */\n    apply() {\n        // We shouldn't do anything if the strategy was disposed or we're on the server.\n        if (this._isDisposed || !this._platform.isBrowser) {\n            return;\n        }\n        // If the position has been applied already (e.g. when the overlay was opened) and the\n        // consumer opted into locking in the position, re-use the old position, in order to\n        // prevent the overlay from jumping around.\n        if (!this._isInitialRender && this._positionLocked && this._lastPosition) {\n            this.reapplyLastPosition();\n            return;\n        }\n        this._clearPanelClasses();\n        this._resetOverlayElementStyles();\n        this._resetBoundingBoxStyles();\n        // We need the bounding rects for the origin and the overlay to determine how to position\n        // the overlay relative to the origin.\n        // We use the viewport rect to determine whether a position would go off-screen.\n        this._viewportRect = this._getNarrowedViewportRect();\n        this._originRect = this._getOriginRect();\n        this._overlayRect = this._pane.getBoundingClientRect();\n        const originRect = this._originRect;\n        const overlayRect = this._overlayRect;\n        const viewportRect = this._viewportRect;\n        // Positions where the overlay will fit with flexible dimensions.\n        const flexibleFits = [];\n        // Fallback if none of the preferred positions fit within the viewport.\n        let fallback;\n        // Go through each of the preferred positions looking for a good fit.\n        // If a good fit is found, it will be applied immediately.\n        for (let pos of this._preferredPositions) {\n            // Get the exact (x, y) coordinate for the point-of-origin on the origin element.\n            let originPoint = this._getOriginPoint(originRect, pos);\n            // From that point-of-origin, get the exact (x, y) coordinate for the top-left corner of the\n            // overlay in this position. We use the top-left corner for calculations and later translate\n            // this into an appropriate (top, left, bottom, right) style.\n            let overlayPoint = this._getOverlayPoint(originPoint, overlayRect, pos);\n            // Calculate how well the overlay would fit into the viewport with this point.\n            let overlayFit = this._getOverlayFit(overlayPoint, overlayRect, viewportRect, pos);\n            // If the overlay, without any further work, fits into the viewport, use this position.\n            if (overlayFit.isCompletelyWithinViewport) {\n                this._isPushed = false;\n                this._applyPosition(pos, originPoint);\n                return;\n            }\n            // If the overlay has flexible dimensions, we can use this position\n            // so long as there's enough space for the minimum dimensions.\n            if (this._canFitWithFlexibleDimensions(overlayFit, overlayPoint, viewportRect)) {\n                // Save positions where the overlay will fit with flexible dimensions. We will use these\n                // if none of the positions fit *without* flexible dimensions.\n                flexibleFits.push({\n                    position: pos,\n                    origin: originPoint,\n                    overlayRect,\n                    boundingBoxRect: this._calculateBoundingBoxRect(originPoint, pos)\n                });\n                continue;\n            }\n            // If the current preferred position does not fit on the screen, remember the position\n            // if it has more visible area on-screen than we've seen and move onto the next preferred\n            // position.\n            if (!fallback || fallback.overlayFit.visibleArea < overlayFit.visibleArea) {\n                fallback = { overlayFit, overlayPoint, originPoint, position: pos, overlayRect };\n            }\n        }\n        // If there are any positions where the overlay would fit with flexible dimensions, choose the\n        // one that has the greatest area available modified by the position's weight\n        if (flexibleFits.length) {\n            let bestFit = null;\n            let bestScore = -1;\n            for (const fit of flexibleFits) {\n                const score = fit.boundingBoxRect.width * fit.boundingBoxRect.height * (fit.position.weight || 1);\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestFit = fit;\n                }\n            }\n            this._isPushed = false;\n            this._applyPosition(bestFit.position, bestFit.origin);\n            return;\n        }\n        // When none of the preferred positions fit within the viewport, take the position\n        // that went off-screen the least and attempt to push it on-screen.\n        if (this._canPush) {\n            // TODO(jelbourn): after pushing, the opening \"direction\" of the overlay might not make sense.\n            this._isPushed = true;\n            this._applyPosition(fallback.position, fallback.originPoint);\n            return;\n        }\n        // All options for getting the overlay within the viewport have been exhausted, so go with the\n        // position that went off-screen the least.\n        this._applyPosition(fallback.position, fallback.originPoint);\n    }\n    detach() {\n        this._clearPanelClasses();\n        this._lastPosition = null;\n        this._previousPushAmount = null;\n        this._resizeSubscription.unsubscribe();\n    }\n    /** Cleanup after the element gets destroyed. */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        // We can't use `_resetBoundingBoxStyles` here, because it resets\n        // some properties to zero, rather than removing them.\n        if (this._boundingBox) {\n            extendStyles(this._boundingBox.style, {\n                top: '',\n                left: '',\n                right: '',\n                bottom: '',\n                height: '',\n                width: '',\n                alignItems: '',\n                justifyContent: '',\n            });\n        }\n        if (this._pane) {\n            this._resetOverlayElementStyles();\n        }\n        if (this._overlayRef) {\n            this._overlayRef.hostElement.classList.remove(boundingBoxClass);\n        }\n        this.detach();\n        this._positionChanges.complete();\n        this._overlayRef = this._boundingBox = null;\n        this._isDisposed = true;\n    }\n    /**\n     * This re-aligns the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     */\n    reapplyLastPosition() {\n        if (!this._isDisposed && (!this._platform || this._platform.isBrowser)) {\n            this._originRect = this._getOriginRect();\n            this._overlayRect = this._pane.getBoundingClientRect();\n            this._viewportRect = this._getNarrowedViewportRect();\n            const lastPosition = this._lastPosition || this._preferredPositions[0];\n            const originPoint = this._getOriginPoint(this._originRect, lastPosition);\n            this._applyPosition(lastPosition, originPoint);\n        }\n    }\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     */\n    withScrollableContainers(scrollables) {\n        this._scrollables = scrollables;\n        return this;\n    }\n    /**\n     * Adds new preferred positions.\n     * @param positions List of positions options for this overlay.\n     */\n    withPositions(positions) {\n        this._preferredPositions = positions;\n        // If the last calculated position object isn't part of the positions anymore, clear\n        // it in order to avoid it being picked up if the consumer tries to re-apply.\n        if (positions.indexOf(this._lastPosition) === -1) {\n            this._lastPosition = null;\n        }\n        this._validatePositions();\n        return this;\n    }\n    /**\n     * Sets a minimum distance the overlay may be positioned to the edge of the viewport.\n     * @param margin Required margin between the overlay and the viewport edge in pixels.\n     */\n    withViewportMargin(margin) {\n        this._viewportMargin = margin;\n        return this;\n    }\n    /** Sets whether the overlay's width and height can be constrained to fit within the viewport. */\n    withFlexibleDimensions(flexibleDimensions = true) {\n        this._hasFlexibleDimensions = flexibleDimensions;\n        return this;\n    }\n    /** Sets whether the overlay can grow after the initial open via flexible width/height. */\n    withGrowAfterOpen(growAfterOpen = true) {\n        this._growAfterOpen = growAfterOpen;\n        return this;\n    }\n    /** Sets whether the overlay can be pushed on-screen if none of the provided positions fit. */\n    withPush(canPush = true) {\n        this._canPush = canPush;\n        return this;\n    }\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @param isLocked Whether the overlay should locked in.\n     */\n    withLockedPosition(isLocked = true) {\n        this._positionLocked = isLocked;\n        return this;\n    }\n    /**\n     * Sets the origin, relative to which to position the overlay.\n     * Using an element origin is useful for building components that need to be positioned\n     * relatively to a trigger (e.g. dropdown menus or tooltips), whereas using a point can be\n     * used for cases like contextual menus which open relative to the user's pointer.\n     * @param origin Reference to the new origin.\n     */\n    setOrigin(origin) {\n        this._origin = origin;\n        return this;\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the x-axis.\n     * @param offset New offset in the X axis.\n     */\n    withDefaultOffsetX(offset) {\n        this._offsetX = offset;\n        return this;\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the y-axis.\n     * @param offset New offset in the Y axis.\n     */\n    withDefaultOffsetY(offset) {\n        this._offsetY = offset;\n        return this;\n    }\n    /**\n     * Configures that the position strategy should set a `transform-origin` on some elements\n     * inside the overlay, depending on the current position that is being applied. This is\n     * useful for the cases where the origin of an animation can change depending on the\n     * alignment of the overlay.\n     * @param selector CSS selector that will be used to find the target\n     *    elements onto which to set the transform origin.\n     */\n    withTransformOriginOn(selector) {\n        this._transformOriginSelector = selector;\n        return this;\n    }\n    /**\n     * Gets the (x, y) coordinate of a connection point on the origin based on a relative position.\n     */\n    _getOriginPoint(originRect, pos) {\n        let x;\n        if (pos.originX == 'center') {\n            // Note: when centering we should always use the `left`\n            // offset, otherwise the position will be wrong in RTL.\n            x = originRect.left + (originRect.width / 2);\n        }\n        else {\n            const startX = this._isRtl() ? originRect.right : originRect.left;\n            const endX = this._isRtl() ? originRect.left : originRect.right;\n            x = pos.originX == 'start' ? startX : endX;\n        }\n        let y;\n        if (pos.originY == 'center') {\n            y = originRect.top + (originRect.height / 2);\n        }\n        else {\n            y = pos.originY == 'top' ? originRect.top : originRect.bottom;\n        }\n        return { x, y };\n    }\n    /**\n     * Gets the (x, y) coordinate of the top-left corner of the overlay given a given position and\n     * origin point to which the overlay should be connected.\n     */\n    _getOverlayPoint(originPoint, overlayRect, pos) {\n        // Calculate the (overlayStartX, overlayStartY), the start of the\n        // potential overlay position relative to the origin point.\n        let overlayStartX;\n        if (pos.overlayX == 'center') {\n            overlayStartX = -overlayRect.width / 2;\n        }\n        else if (pos.overlayX === 'start') {\n            overlayStartX = this._isRtl() ? -overlayRect.width : 0;\n        }\n        else {\n            overlayStartX = this._isRtl() ? 0 : -overlayRect.width;\n        }\n        let overlayStartY;\n        if (pos.overlayY == 'center') {\n            overlayStartY = -overlayRect.height / 2;\n        }\n        else {\n            overlayStartY = pos.overlayY == 'top' ? 0 : -overlayRect.height;\n        }\n        // The (x, y) coordinates of the overlay.\n        return {\n            x: originPoint.x + overlayStartX,\n            y: originPoint.y + overlayStartY,\n        };\n    }\n    /** Gets how well an overlay at the given point will fit within the viewport. */\n    _getOverlayFit(point, rawOverlayRect, viewport, position) {\n        // Round the overlay rect when comparing against the\n        // viewport, because the viewport is always rounded.\n        const overlay = getRoundedBoundingClientRect(rawOverlayRect);\n        let { x, y } = point;\n        let offsetX = this._getOffset(position, 'x');\n        let offsetY = this._getOffset(position, 'y');\n        // Account for the offsets since they could push the overlay out of the viewport.\n        if (offsetX) {\n            x += offsetX;\n        }\n        if (offsetY) {\n            y += offsetY;\n        }\n        // How much the overlay would overflow at this position, on each side.\n        let leftOverflow = 0 - x;\n        let rightOverflow = (x + overlay.width) - viewport.width;\n        let topOverflow = 0 - y;\n        let bottomOverflow = (y + overlay.height) - viewport.height;\n        // Visible parts of the element on each axis.\n        let visibleWidth = this._subtractOverflows(overlay.width, leftOverflow, rightOverflow);\n        let visibleHeight = this._subtractOverflows(overlay.height, topOverflow, bottomOverflow);\n        let visibleArea = visibleWidth * visibleHeight;\n        return {\n            visibleArea,\n            isCompletelyWithinViewport: (overlay.width * overlay.height) === visibleArea,\n            fitsInViewportVertically: visibleHeight === overlay.height,\n            fitsInViewportHorizontally: visibleWidth == overlay.width,\n        };\n    }\n    /**\n     * Whether the overlay can fit within the viewport when it may resize either its width or height.\n     * @param fit How well the overlay fits in the viewport at some position.\n     * @param point The (x, y) coordinates of the overlat at some position.\n     * @param viewport The geometry of the viewport.\n     */\n    _canFitWithFlexibleDimensions(fit, point, viewport) {\n        if (this._hasFlexibleDimensions) {\n            const availableHeight = viewport.bottom - point.y;\n            const availableWidth = viewport.right - point.x;\n            const minHeight = getPixelValue(this._overlayRef.getConfig().minHeight);\n            const minWidth = getPixelValue(this._overlayRef.getConfig().minWidth);\n            const verticalFit = fit.fitsInViewportVertically ||\n                (minHeight != null && minHeight <= availableHeight);\n            const horizontalFit = fit.fitsInViewportHorizontally ||\n                (minWidth != null && minWidth <= availableWidth);\n            return verticalFit && horizontalFit;\n        }\n        return false;\n    }\n    /**\n     * Gets the point at which the overlay can be \"pushed\" on-screen. If the overlay is larger than\n     * the viewport, the top-left corner will be pushed on-screen (with overflow occuring on the\n     * right and bottom).\n     *\n     * @param start Starting point from which the overlay is pushed.\n     * @param overlay Dimensions of the overlay.\n     * @param scrollPosition Current viewport scroll position.\n     * @returns The point at which to position the overlay after pushing. This is effectively a new\n     *     originPoint.\n     */\n    _pushOverlayOnScreen(start, rawOverlayRect, scrollPosition) {\n        // If the position is locked and we've pushed the overlay already, reuse the previous push\n        // amount, rather than pushing it again. If we were to continue pushing, the element would\n        // remain in the viewport, which goes against the expectations when position locking is enabled.\n        if (this._previousPushAmount && this._positionLocked) {\n            return {\n                x: start.x + this._previousPushAmount.x,\n                y: start.y + this._previousPushAmount.y\n            };\n        }\n        // Round the overlay rect when comparing against the\n        // viewport, because the viewport is always rounded.\n        const overlay = getRoundedBoundingClientRect(rawOverlayRect);\n        const viewport = this._viewportRect;\n        // Determine how much the overlay goes outside the viewport on each\n        // side, which we'll use to decide which direction to push it.\n        const overflowRight = Math.max(start.x + overlay.width - viewport.width, 0);\n        const overflowBottom = Math.max(start.y + overlay.height - viewport.height, 0);\n        const overflowTop = Math.max(viewport.top - scrollPosition.top - start.y, 0);\n        const overflowLeft = Math.max(viewport.left - scrollPosition.left - start.x, 0);\n        // Amount by which to push the overlay in each axis such that it remains on-screen.\n        let pushX = 0;\n        let pushY = 0;\n        // If the overlay fits completely within the bounds of the viewport, push it from whichever\n        // direction is goes off-screen. Otherwise, push the top-left corner such that its in the\n        // viewport and allow for the trailing end of the overlay to go out of bounds.\n        if (overlay.width <= viewport.width) {\n            pushX = overflowLeft || -overflowRight;\n        }\n        else {\n            pushX = start.x < this._viewportMargin ? (viewport.left - scrollPosition.left) - start.x : 0;\n        }\n        if (overlay.height <= viewport.height) {\n            pushY = overflowTop || -overflowBottom;\n        }\n        else {\n            pushY = start.y < this._viewportMargin ? (viewport.top - scrollPosition.top) - start.y : 0;\n        }\n        this._previousPushAmount = { x: pushX, y: pushY };\n        return {\n            x: start.x + pushX,\n            y: start.y + pushY,\n        };\n    }\n    /**\n     * Applies a computed position to the overlay and emits a position change.\n     * @param position The position preference\n     * @param originPoint The point on the origin element where the overlay is connected.\n     */\n    _applyPosition(position, originPoint) {\n        this._setTransformOrigin(position);\n        this._setOverlayElementStyles(originPoint, position);\n        this._setBoundingBoxStyles(originPoint, position);\n        if (position.panelClass) {\n            this._addPanelClasses(position.panelClass);\n        }\n        // Save the last connected position in case the position needs to be re-calculated.\n        this._lastPosition = position;\n        // Notify that the position has been changed along with its change properties.\n        // We only emit if we've got any subscriptions, because the scroll visibility\n        // calculcations can be somewhat expensive.\n        if (this._positionChanges.observers.length) {\n            const scrollableViewProperties = this._getScrollVisibility();\n            const changeEvent = new ConnectedOverlayPositionChange(position, scrollableViewProperties);\n            this._positionChanges.next(changeEvent);\n        }\n        this._isInitialRender = false;\n    }\n    /** Sets the transform origin based on the configured selector and the passed-in position.  */\n    _setTransformOrigin(position) {\n        if (!this._transformOriginSelector) {\n            return;\n        }\n        const elements = this._boundingBox.querySelectorAll(this._transformOriginSelector);\n        let xOrigin;\n        let yOrigin = position.overlayY;\n        if (position.overlayX === 'center') {\n            xOrigin = 'center';\n        }\n        else if (this._isRtl()) {\n            xOrigin = position.overlayX === 'start' ? 'right' : 'left';\n        }\n        else {\n            xOrigin = position.overlayX === 'start' ? 'left' : 'right';\n        }\n        for (let i = 0; i < elements.length; i++) {\n            elements[i].style.transformOrigin = `${xOrigin} ${yOrigin}`;\n        }\n    }\n    /**\n     * Gets the position and size of the overlay's sizing container.\n     *\n     * This method does no measuring and applies no styles so that we can cheaply compute the\n     * bounds for all positions and choose the best fit based on these results.\n     */\n    _calculateBoundingBoxRect(origin, position) {\n        const viewport = this._viewportRect;\n        const isRtl = this._isRtl();\n        let height, top, bottom;\n        if (position.overlayY === 'top') {\n            // Overlay is opening \"downward\" and thus is bound by the bottom viewport edge.\n            top = origin.y;\n            height = viewport.height - top + this._viewportMargin;\n        }\n        else if (position.overlayY === 'bottom') {\n            // Overlay is opening \"upward\" and thus is bound by the top viewport edge. We need to add\n            // the viewport margin back in, because the viewport rect is narrowed down to remove the\n            // margin, whereas the `origin` position is calculated based on its `ClientRect`.\n            bottom = viewport.height - origin.y + this._viewportMargin * 2;\n            height = viewport.height - bottom + this._viewportMargin;\n        }\n        else {\n            // If neither top nor bottom, it means that the overlay is vertically centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.bottom - origin.y` and\n            // `origin.y - viewport.top`.\n            const smallestDistanceToViewportEdge = Math.min(viewport.bottom - origin.y + viewport.top, origin.y);\n            const previousHeight = this._lastBoundingBoxSize.height;\n            height = smallestDistanceToViewportEdge * 2;\n            top = origin.y - smallestDistanceToViewportEdge;\n            if (height > previousHeight && !this._isInitialRender && !this._growAfterOpen) {\n                top = origin.y - (previousHeight / 2);\n            }\n        }\n        // The overlay is opening 'right-ward' (the content flows to the right).\n        const isBoundedByRightViewportEdge = (position.overlayX === 'start' && !isRtl) ||\n            (position.overlayX === 'end' && isRtl);\n        // The overlay is opening 'left-ward' (the content flows to the left).\n        const isBoundedByLeftViewportEdge = (position.overlayX === 'end' && !isRtl) ||\n            (position.overlayX === 'start' && isRtl);\n        let width, left, right;\n        if (isBoundedByLeftViewportEdge) {\n            right = viewport.width - origin.x + this._viewportMargin;\n            width = origin.x - this._viewportMargin;\n        }\n        else if (isBoundedByRightViewportEdge) {\n            left = origin.x;\n            width = viewport.right - origin.x;\n        }\n        else {\n            // If neither start nor end, it means that the overlay is horizontally centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.right - origin.x` and\n            // `origin.x - viewport.left`.\n            const smallestDistanceToViewportEdge = Math.min(viewport.right - origin.x + viewport.left, origin.x);\n            const previousWidth = this._lastBoundingBoxSize.width;\n            width = smallestDistanceToViewportEdge * 2;\n            left = origin.x - smallestDistanceToViewportEdge;\n            if (width > previousWidth && !this._isInitialRender && !this._growAfterOpen) {\n                left = origin.x - (previousWidth / 2);\n            }\n        }\n        return { top: top, left: left, bottom: bottom, right: right, width, height };\n    }\n    /**\n     * Sets the position and size of the overlay's sizing wrapper. The wrapper is positioned on the\n     * origin's connection point and stetches to the bounds of the viewport.\n     *\n     * @param origin The point on the origin element where the overlay is connected.\n     * @param position The position preference\n     */\n    _setBoundingBoxStyles(origin, position) {\n        const boundingBoxRect = this._calculateBoundingBoxRect(origin, position);\n        // It's weird if the overlay *grows* while scrolling, so we take the last size into account\n        // when applying a new size.\n        if (!this._isInitialRender && !this._growAfterOpen) {\n            boundingBoxRect.height = Math.min(boundingBoxRect.height, this._lastBoundingBoxSize.height);\n            boundingBoxRect.width = Math.min(boundingBoxRect.width, this._lastBoundingBoxSize.width);\n        }\n        const styles = {};\n        if (this._hasExactPosition()) {\n            styles.top = styles.left = '0';\n            styles.bottom = styles.right = styles.maxHeight = styles.maxWidth = '';\n            styles.width = styles.height = '100%';\n        }\n        else {\n            const maxHeight = this._overlayRef.getConfig().maxHeight;\n            const maxWidth = this._overlayRef.getConfig().maxWidth;\n            styles.height = coerceCssPixelValue(boundingBoxRect.height);\n            styles.top = coerceCssPixelValue(boundingBoxRect.top);\n            styles.bottom = coerceCssPixelValue(boundingBoxRect.bottom);\n            styles.width = coerceCssPixelValue(boundingBoxRect.width);\n            styles.left = coerceCssPixelValue(boundingBoxRect.left);\n            styles.right = coerceCssPixelValue(boundingBoxRect.right);\n            // Push the pane content towards the proper direction.\n            if (position.overlayX === 'center') {\n                styles.alignItems = 'center';\n            }\n            else {\n                styles.alignItems = position.overlayX === 'end' ? 'flex-end' : 'flex-start';\n            }\n            if (position.overlayY === 'center') {\n                styles.justifyContent = 'center';\n            }\n            else {\n                styles.justifyContent = position.overlayY === 'bottom' ? 'flex-end' : 'flex-start';\n            }\n            if (maxHeight) {\n                styles.maxHeight = coerceCssPixelValue(maxHeight);\n            }\n            if (maxWidth) {\n                styles.maxWidth = coerceCssPixelValue(maxWidth);\n            }\n        }\n        this._lastBoundingBoxSize = boundingBoxRect;\n        extendStyles(this._boundingBox.style, styles);\n    }\n    /** Resets the styles for the bounding box so that a new positioning can be computed. */\n    _resetBoundingBoxStyles() {\n        extendStyles(this._boundingBox.style, {\n            top: '0',\n            left: '0',\n            right: '0',\n            bottom: '0',\n            height: '',\n            width: '',\n            alignItems: '',\n            justifyContent: '',\n        });\n    }\n    /** Resets the styles for the overlay pane so that a new positioning can be computed. */\n    _resetOverlayElementStyles() {\n        extendStyles(this._pane.style, {\n            top: '',\n            left: '',\n            bottom: '',\n            right: '',\n            position: '',\n            transform: '',\n        });\n    }\n    /** Sets positioning styles to the overlay element. */\n    _setOverlayElementStyles(originPoint, position) {\n        const styles = {};\n        const hasExactPosition = this._hasExactPosition();\n        const hasFlexibleDimensions = this._hasFlexibleDimensions;\n        const config = this._overlayRef.getConfig();\n        if (hasExactPosition) {\n            const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n            extendStyles(styles, this._getExactOverlayY(position, originPoint, scrollPosition));\n            extendStyles(styles, this._getExactOverlayX(position, originPoint, scrollPosition));\n        }\n        else {\n            styles.position = 'static';\n        }\n        // Use a transform to apply the offsets. We do this because the `center` positions rely on\n        // being in the normal flex flow and setting a `top` / `left` at all will completely throw\n        // off the position. We also can't use margins, because they won't have an effect in some\n        // cases where the element doesn't have anything to \"push off of\". Finally, this works\n        // better both with flexible and non-flexible positioning.\n        let transformString = '';\n        let offsetX = this._getOffset(position, 'x');\n        let offsetY = this._getOffset(position, 'y');\n        if (offsetX) {\n            transformString += `translateX(${offsetX}px) `;\n        }\n        if (offsetY) {\n            transformString += `translateY(${offsetY}px)`;\n        }\n        styles.transform = transformString.trim();\n        // If a maxWidth or maxHeight is specified on the overlay, we remove them. We do this because\n        // we need these values to both be set to \"100%\" for the automatic flexible sizing to work.\n        // The maxHeight and maxWidth are set on the boundingBox in order to enforce the constraint.\n        // Note that this doesn't apply when we have an exact position, in which case we do want to\n        // apply them because they'll be cleared from the bounding box.\n        if (config.maxHeight) {\n            if (hasExactPosition) {\n                styles.maxHeight = coerceCssPixelValue(config.maxHeight);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxHeight = '';\n            }\n        }\n        if (config.maxWidth) {\n            if (hasExactPosition) {\n                styles.maxWidth = coerceCssPixelValue(config.maxWidth);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxWidth = '';\n            }\n        }\n        extendStyles(this._pane.style, styles);\n    }\n    /** Gets the exact top/bottom for the overlay when not using flexible sizing or when pushing. */\n    _getExactOverlayY(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the\n        // preferred position has changed since the last `apply`.\n        let styles = { top: '', bottom: '' };\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        let virtualKeyboardOffset = this._overlayContainer.getContainerElement().getBoundingClientRect().top;\n        // Normally this would be zero, however when the overlay is attached to an input (e.g. in an\n        // autocomplete), mobile browsers will shift everything in order to put the input in the middle\n        // of the screen and to make space for the virtual keyboard. We need to account for this offset,\n        // otherwise our positioning will be thrown off.\n        overlayPoint.y -= virtualKeyboardOffset;\n        // We want to set either `top` or `bottom` based on whether the overlay wants to appear\n        // above or below the origin and the direction in which the element will expand.\n        if (position.overlayY === 'bottom') {\n            // When using `bottom`, we adjust the y position such that it is the distance\n            // from the bottom of the viewport rather than the top.\n            const documentHeight = this._document.documentElement.clientHeight;\n            styles.bottom = `${documentHeight - (overlayPoint.y + this._overlayRect.height)}px`;\n        }\n        else {\n            styles.top = coerceCssPixelValue(overlayPoint.y);\n        }\n        return styles;\n    }\n    /** Gets the exact left/right for the overlay when not using flexible sizing or when pushing. */\n    _getExactOverlayX(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the preferred position has\n        // changed since the last `apply`.\n        let styles = { left: '', right: '' };\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        // We want to set either `left` or `right` based on whether the overlay wants to appear \"before\"\n        // or \"after\" the origin, which determines the direction in which the element will expand.\n        // For the horizontal axis, the meaning of \"before\" and \"after\" change based on whether the\n        // page is in RTL or LTR.\n        let horizontalStyleProperty;\n        if (this._isRtl()) {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'left' : 'right';\n        }\n        else {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'right' : 'left';\n        }\n        // When we're setting `right`, we adjust the x position such that it is the distance\n        // from the right edge of the viewport rather than the left edge.\n        if (horizontalStyleProperty === 'right') {\n            const documentWidth = this._document.documentElement.clientWidth;\n            styles.right = `${documentWidth - (overlayPoint.x + this._overlayRect.width)}px`;\n        }\n        else {\n            styles.left = coerceCssPixelValue(overlayPoint.x);\n        }\n        return styles;\n    }\n    /**\n     * Gets the view properties of the trigger and overlay, including whether they are clipped\n     * or completely outside the view of any of the strategy's scrollables.\n     */\n    _getScrollVisibility() {\n        // Note: needs fresh rects since the position could've changed.\n        const originBounds = this._getOriginRect();\n        const overlayBounds = this._pane.getBoundingClientRect();\n        // TODO(jelbourn): instead of needing all of the client rects for these scrolling containers\n        // every time, we should be able to use the scrollTop of the containers if the size of those\n        // containers hasn't changed.\n        const scrollContainerBounds = this._scrollables.map(scrollable => {\n            return scrollable.getElementRef().nativeElement.getBoundingClientRect();\n        });\n        return {\n            isOriginClipped: isElementClippedByScrolling(originBounds, scrollContainerBounds),\n            isOriginOutsideView: isElementScrolledOutsideView(originBounds, scrollContainerBounds),\n            isOverlayClipped: isElementClippedByScrolling(overlayBounds, scrollContainerBounds),\n            isOverlayOutsideView: isElementScrolledOutsideView(overlayBounds, scrollContainerBounds),\n        };\n    }\n    /** Subtracts the amount that an element is overflowing on an axis from its length. */\n    _subtractOverflows(length, ...overflows) {\n        return overflows.reduce((currentValue, currentOverflow) => {\n            return currentValue - Math.max(currentOverflow, 0);\n        }, length);\n    }\n    /** Narrows the given viewport rect by the current _viewportMargin. */\n    _getNarrowedViewportRect() {\n        // We recalculate the viewport rect here ourselves, rather than using the ViewportRuler,\n        // because we want to use the `clientWidth` and `clientHeight` as the base. The difference\n        // being that the client properties don't include the scrollbar, as opposed to `innerWidth`\n        // and `innerHeight` that do. This is necessary, because the overlay container uses\n        // 100% `width` and `height` which don't include the scrollbar either.\n        const width = this._document.documentElement.clientWidth;\n        const height = this._document.documentElement.clientHeight;\n        const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n        return {\n            top: scrollPosition.top + this._viewportMargin,\n            left: scrollPosition.left + this._viewportMargin,\n            right: scrollPosition.left + width - this._viewportMargin,\n            bottom: scrollPosition.top + height - this._viewportMargin,\n            width: width - (2 * this._viewportMargin),\n            height: height - (2 * this._viewportMargin),\n        };\n    }\n    /** Whether the we're dealing with an RTL context */\n    _isRtl() {\n        return this._overlayRef.getDirection() === 'rtl';\n    }\n    /** Determines whether the overlay uses exact or flexible positioning. */\n    _hasExactPosition() {\n        return !this._hasFlexibleDimensions || this._isPushed;\n    }\n    /** Retrieves the offset of a position along the x or y axis. */\n    _getOffset(position, axis) {\n        if (axis === 'x') {\n            // We don't do something like `position['offset' + axis]` in\n            // order to avoid breking minifiers that rename properties.\n            return position.offsetX == null ? this._offsetX : position.offsetX;\n        }\n        return position.offsetY == null ? this._offsetY : position.offsetY;\n    }\n    /** Validates that the current position match the expected values. */\n    _validatePositions() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._preferredPositions.length) {\n                throw Error('FlexibleConnectedPositionStrategy: At least one position is required.');\n            }\n            // TODO(crisbeto): remove these once Angular's template type\n            // checking is advanced enough to catch these cases.\n            this._preferredPositions.forEach(pair => {\n                validateHorizontalPosition('originX', pair.originX);\n                validateVerticalPosition('originY', pair.originY);\n                validateHorizontalPosition('overlayX', pair.overlayX);\n                validateVerticalPosition('overlayY', pair.overlayY);\n            });\n        }\n    }\n    /** Adds a single CSS class or an array of classes on the overlay panel. */\n    _addPanelClasses(cssClasses) {\n        if (this._pane) {\n            coerceArray(cssClasses).forEach(cssClass => {\n                if (cssClass !== '' && this._appliedPanelClasses.indexOf(cssClass) === -1) {\n                    this._appliedPanelClasses.push(cssClass);\n                    this._pane.classList.add(cssClass);\n                }\n            });\n        }\n    }\n    /** Clears the classes that the position strategy has applied from the overlay panel. */\n    _clearPanelClasses() {\n        if (this._pane) {\n            this._appliedPanelClasses.forEach(cssClass => {\n                this._pane.classList.remove(cssClass);\n            });\n            this._appliedPanelClasses = [];\n        }\n    }\n    /** Returns the ClientRect of the current origin. */\n    _getOriginRect() {\n        const origin = this._origin;\n        if (origin instanceof ElementRef) {\n            return origin.nativeElement.getBoundingClientRect();\n        }\n        // Check for Element so SVG elements are also supported.\n        if (origin instanceof Element) {\n            return origin.getBoundingClientRect();\n        }\n        const width = origin.width || 0;\n        const height = origin.height || 0;\n        // If the origin is a point, return a client rect as if it was a 0x0 element at the point.\n        return {\n            top: origin.y,\n            bottom: origin.y + height,\n            left: origin.x,\n            right: origin.x + width,\n            height,\n            width\n        };\n    }\n}\n/** Shallow-extends a stylesheet object with another stylesheet object. */\nfunction extendStyles(destination, source) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            destination[key] = source[key];\n        }\n    }\n    return destination;\n}\n/**\n * Extracts the pixel value as a number from a value, if it's a number\n * or a CSS pixel string (e.g. `1337px`). Otherwise returns null.\n */\nfunction getPixelValue(input) {\n    if (typeof input !== 'number' && input != null) {\n        const [value, units] = input.split(cssUnitPattern);\n        return (!units || units === 'px') ? parseFloat(value) : null;\n    }\n    return input || null;\n}\n/**\n * Gets a version of an element's bounding `ClientRect` where all the values are rounded down to\n * the nearest pixel. This allows us to account for the cases where there may be sub-pixel\n * deviations in the `ClientRect` returned by the browser (e.g. when zoomed in with a percentage\n * size, see #21350).\n */\nfunction getRoundedBoundingClientRect(clientRect) {\n    return {\n        top: Math.floor(clientRect.top),\n        right: Math.floor(clientRect.right),\n        bottom: Math.floor(clientRect.bottom),\n        left: Math.floor(clientRect.left),\n        width: Math.floor(clientRect.width),\n        height: Math.floor(clientRect.height)\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative to some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n * @deprecated Use `FlexibleConnectedPositionStrategy` instead.\n * @breaking-change 8.0.0\n */\nclass ConnectedPositionStrategy {\n    constructor(originPos, overlayPos, connectedTo, viewportRuler, document, platform, overlayContainer) {\n        /** Ordered list of preferred positions, from most to least desirable. */\n        this._preferredPositions = [];\n        // Since the `ConnectedPositionStrategy` is deprecated and we don't want to maintain\n        // the extra logic, we create an instance of the positioning strategy that has some\n        // defaults that make it behave as the old position strategy and to which we'll\n        // proxy all of the API calls.\n        this._positionStrategy = new FlexibleConnectedPositionStrategy(connectedTo, viewportRuler, document, platform, overlayContainer)\n            .withFlexibleDimensions(false)\n            .withPush(false)\n            .withViewportMargin(0);\n        this.withFallbackPosition(originPos, overlayPos);\n        this.onPositionChange = this._positionStrategy.positionChanges;\n    }\n    /** Ordered list of preferred positions, from most to least desirable. */\n    get positions() {\n        return this._preferredPositions;\n    }\n    /** Attach this position strategy to an overlay. */\n    attach(overlayRef) {\n        this._overlayRef = overlayRef;\n        this._positionStrategy.attach(overlayRef);\n        if (this._direction) {\n            overlayRef.setDirection(this._direction);\n            this._direction = null;\n        }\n    }\n    /** Disposes all resources used by the position strategy. */\n    dispose() {\n        this._positionStrategy.dispose();\n    }\n    /** @docs-private */\n    detach() {\n        this._positionStrategy.detach();\n    }\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin fits on-screen.\n     * @docs-private\n     */\n    apply() {\n        this._positionStrategy.apply();\n    }\n    /**\n     * Re-positions the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     */\n    recalculateLastPosition() {\n        this._positionStrategy.reapplyLastPosition();\n    }\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     */\n    withScrollableContainers(scrollables) {\n        this._positionStrategy.withScrollableContainers(scrollables);\n    }\n    /**\n     * Adds a new preferred fallback position.\n     * @param originPos\n     * @param overlayPos\n     */\n    withFallbackPosition(originPos, overlayPos, offsetX, offsetY) {\n        const position = new ConnectionPositionPair(originPos, overlayPos, offsetX, offsetY);\n        this._preferredPositions.push(position);\n        this._positionStrategy.withPositions(this._preferredPositions);\n        return this;\n    }\n    /**\n     * Sets the layout direction so the overlay's position can be adjusted to match.\n     * @param dir New layout direction.\n     */\n    withDirection(dir) {\n        // Since the direction might be declared before the strategy is attached,\n        // we save the value in a temporary property and we'll transfer it to the\n        // overlay ref on attachment.\n        if (this._overlayRef) {\n            this._overlayRef.setDirection(dir);\n        }\n        else {\n            this._direction = dir;\n        }\n        return this;\n    }\n    /**\n     * Sets an offset for the overlay's connection point on the x-axis\n     * @param offset New offset in the X axis.\n     */\n    withOffsetX(offset) {\n        this._positionStrategy.withDefaultOffsetX(offset);\n        return this;\n    }\n    /**\n     * Sets an offset for the overlay's connection point on the y-axis\n     * @param  offset New offset in the Y axis.\n     */\n    withOffsetY(offset) {\n        this._positionStrategy.withDefaultOffsetY(offset);\n        return this;\n    }\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @param isLocked Whether the overlay should locked in.\n     */\n    withLockedPosition(isLocked) {\n        this._positionStrategy.withLockedPosition(isLocked);\n        return this;\n    }\n    /**\n     * Overwrites the current set of positions with an array of new ones.\n     * @param positions Position pairs to be set on the strategy.\n     */\n    withPositions(positions) {\n        this._preferredPositions = positions.slice();\n        this._positionStrategy.withPositions(this._preferredPositions);\n        return this;\n    }\n    /**\n     * Sets the origin element, relative to which to position the overlay.\n     * @param origin Reference to the new origin element.\n     */\n    setOrigin(origin) {\n        this._positionStrategy.setOrigin(origin);\n        return this;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Class to be added to the overlay pane wrapper. */\nconst wrapperClass = 'cdk-global-overlay-wrapper';\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * explicit position relative to the browser's viewport. We use flexbox, instead of\n * transforms, in order to avoid issues with subpixel rendering which can cause the\n * element to become blurry.\n */\nclass GlobalPositionStrategy {\n    constructor() {\n        this._cssPosition = 'static';\n        this._topOffset = '';\n        this._bottomOffset = '';\n        this._leftOffset = '';\n        this._rightOffset = '';\n        this._alignItems = '';\n        this._justifyContent = '';\n        this._width = '';\n        this._height = '';\n    }\n    attach(overlayRef) {\n        const config = overlayRef.getConfig();\n        this._overlayRef = overlayRef;\n        if (this._width && !config.width) {\n            overlayRef.updateSize({ width: this._width });\n        }\n        if (this._height && !config.height) {\n            overlayRef.updateSize({ height: this._height });\n        }\n        overlayRef.hostElement.classList.add(wrapperClass);\n        this._isDisposed = false;\n    }\n    /**\n     * Sets the top position of the overlay. Clears any previously set vertical position.\n     * @param value New top offset.\n     */\n    top(value = '') {\n        this._bottomOffset = '';\n        this._topOffset = value;\n        this._alignItems = 'flex-start';\n        return this;\n    }\n    /**\n     * Sets the left position of the overlay. Clears any previously set horizontal position.\n     * @param value New left offset.\n     */\n    left(value = '') {\n        this._rightOffset = '';\n        this._leftOffset = value;\n        this._justifyContent = 'flex-start';\n        return this;\n    }\n    /**\n     * Sets the bottom position of the overlay. Clears any previously set vertical position.\n     * @param value New bottom offset.\n     */\n    bottom(value = '') {\n        this._topOffset = '';\n        this._bottomOffset = value;\n        this._alignItems = 'flex-end';\n        return this;\n    }\n    /**\n     * Sets the right position of the overlay. Clears any previously set horizontal position.\n     * @param value New right offset.\n     */\n    right(value = '') {\n        this._leftOffset = '';\n        this._rightOffset = value;\n        this._justifyContent = 'flex-end';\n        return this;\n    }\n    /**\n     * Sets the overlay width and clears any previously set width.\n     * @param value New width for the overlay\n     * @deprecated Pass the `width` through the `OverlayConfig`.\n     * @breaking-change 8.0.0\n     */\n    width(value = '') {\n        if (this._overlayRef) {\n            this._overlayRef.updateSize({ width: value });\n        }\n        else {\n            this._width = value;\n        }\n        return this;\n    }\n    /**\n     * Sets the overlay height and clears any previously set height.\n     * @param value New height for the overlay\n     * @deprecated Pass the `height` through the `OverlayConfig`.\n     * @breaking-change 8.0.0\n     */\n    height(value = '') {\n        if (this._overlayRef) {\n            this._overlayRef.updateSize({ height: value });\n        }\n        else {\n            this._height = value;\n        }\n        return this;\n    }\n    /**\n     * Centers the overlay horizontally with an optional offset.\n     * Clears any previously set horizontal position.\n     *\n     * @param offset Overlay offset from the horizontal center.\n     */\n    centerHorizontally(offset = '') {\n        this.left(offset);\n        this._justifyContent = 'center';\n        return this;\n    }\n    /**\n     * Centers the overlay vertically with an optional offset.\n     * Clears any previously set vertical position.\n     *\n     * @param offset Overlay offset from the vertical center.\n     */\n    centerVertically(offset = '') {\n        this.top(offset);\n        this._alignItems = 'center';\n        return this;\n    }\n    /**\n     * Apply the position to the element.\n     * @docs-private\n     */\n    apply() {\n        // Since the overlay ref applies the strategy asynchronously, it could\n        // have been disposed before it ends up being applied. If that is the\n        // case, we shouldn't do anything.\n        if (!this._overlayRef || !this._overlayRef.hasAttached()) {\n            return;\n        }\n        const styles = this._overlayRef.overlayElement.style;\n        const parentStyles = this._overlayRef.hostElement.style;\n        const config = this._overlayRef.getConfig();\n        const { width, height, maxWidth, maxHeight } = config;\n        const shouldBeFlushHorizontally = (width === '100%' || width === '100vw') &&\n            (!maxWidth || maxWidth === '100%' || maxWidth === '100vw');\n        const shouldBeFlushVertically = (height === '100%' || height === '100vh') &&\n            (!maxHeight || maxHeight === '100%' || maxHeight === '100vh');\n        styles.position = this._cssPosition;\n        styles.marginLeft = shouldBeFlushHorizontally ? '0' : this._leftOffset;\n        styles.marginTop = shouldBeFlushVertically ? '0' : this._topOffset;\n        styles.marginBottom = this._bottomOffset;\n        styles.marginRight = this._rightOffset;\n        if (shouldBeFlushHorizontally) {\n            parentStyles.justifyContent = 'flex-start';\n        }\n        else if (this._justifyContent === 'center') {\n            parentStyles.justifyContent = 'center';\n        }\n        else if (this._overlayRef.getConfig().direction === 'rtl') {\n            // In RTL the browser will invert `flex-start` and `flex-end` automatically, but we\n            // don't want that because our positioning is explicitly `left` and `right`, hence\n            // why we do another inversion to ensure that the overlay stays in the same position.\n            // TODO: reconsider this if we add `start` and `end` methods.\n            if (this._justifyContent === 'flex-start') {\n                parentStyles.justifyContent = 'flex-end';\n            }\n            else if (this._justifyContent === 'flex-end') {\n                parentStyles.justifyContent = 'flex-start';\n            }\n        }\n        else {\n            parentStyles.justifyContent = this._justifyContent;\n        }\n        parentStyles.alignItems = shouldBeFlushVertically ? 'flex-start' : this._alignItems;\n    }\n    /**\n     * Cleans up the DOM changes from the position strategy.\n     * @docs-private\n     */\n    dispose() {\n        if (this._isDisposed || !this._overlayRef) {\n            return;\n        }\n        const styles = this._overlayRef.overlayElement.style;\n        const parent = this._overlayRef.hostElement;\n        const parentStyles = parent.style;\n        parent.classList.remove(wrapperClass);\n        parentStyles.justifyContent = parentStyles.alignItems = styles.marginTop =\n            styles.marginBottom = styles.marginLeft = styles.marginRight = styles.position = '';\n        this._overlayRef = null;\n        this._isDisposed = true;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Builder for overlay position strategy. */\nclass OverlayPositionBuilder {\n    constructor(_viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n    }\n    /**\n     * Creates a global position strategy.\n     */\n    global() {\n        return new GlobalPositionStrategy();\n    }\n    /**\n     * Creates a relative position strategy.\n     * @param elementRef\n     * @param originPos\n     * @param overlayPos\n     * @deprecated Use `flexibleConnectedTo` instead.\n     * @breaking-change 8.0.0\n     */\n    connectedTo(elementRef, originPos, overlayPos) {\n        return new ConnectedPositionStrategy(originPos, overlayPos, elementRef, this._viewportRuler, this._document, this._platform, this._overlayContainer);\n    }\n    /**\n     * Creates a flexible position strategy.\n     * @param origin Origin relative to which to position the overlay.\n     */\n    flexibleConnectedTo(origin) {\n        return new FlexibleConnectedPositionStrategy(origin, this._viewportRuler, this._document, this._platform, this._overlayContainer);\n    }\n}\nOverlayPositionBuilder.ɵfac = function OverlayPositionBuilder_Factory(t) { return new (t || OverlayPositionBuilder)(ɵngcc0.ɵɵinject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform), ɵngcc0.ɵɵinject(OverlayContainer)); };\nOverlayPositionBuilder.ɵprov = ɵɵdefineInjectable({ factory: function OverlayPositionBuilder_Factory() { return new OverlayPositionBuilder(ɵɵinject(ViewportRuler), ɵɵinject(DOCUMENT), ɵɵinject(Platform), ɵɵinject(OverlayContainer)); }, token: OverlayPositionBuilder, providedIn: \"root\" });\nOverlayPositionBuilder.ctorParameters = () => [\n    { type: ViewportRuler },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform },\n    { type: OverlayContainer }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayPositionBuilder, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.ViewportRuler }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }, { type: OverlayContainer }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Next overlay unique ID. */\nlet nextUniqueId = 0;\n// Note that Overlay is *not* scoped to the app root because of the ComponentFactoryResolver\n// which needs to be different depending on where OverlayModule is imported.\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalOutlet, so any kind of Portal can be loaded into one.\n */\nclass Overlay {\n    constructor(\n    /** Scrolling strategies that can be used when creating an overlay. */\n    scrollStrategies, _overlayContainer, _componentFactoryResolver, _positionBuilder, _keyboardDispatcher, _injector, _ngZone, _document, _directionality, _location, _outsideClickDispatcher) {\n        this.scrollStrategies = scrollStrategies;\n        this._overlayContainer = _overlayContainer;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._positionBuilder = _positionBuilder;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._injector = _injector;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._directionality = _directionality;\n        this._location = _location;\n        this._outsideClickDispatcher = _outsideClickDispatcher;\n    }\n    /**\n     * Creates an overlay.\n     * @param config Configuration applied to the overlay.\n     * @returns Reference to the created overlay.\n     */\n    create(config) {\n        const host = this._createHostElement();\n        const pane = this._createPaneElement(host);\n        const portalOutlet = this._createPortalOutlet(pane);\n        const overlayConfig = new OverlayConfig(config);\n        overlayConfig.direction = overlayConfig.direction || this._directionality.value;\n        return new OverlayRef(portalOutlet, host, pane, overlayConfig, this._ngZone, this._keyboardDispatcher, this._document, this._location, this._outsideClickDispatcher);\n    }\n    /**\n     * Gets a position builder that can be used, via fluent API,\n     * to construct and configure a position strategy.\n     * @returns An overlay position builder.\n     */\n    position() {\n        return this._positionBuilder;\n    }\n    /**\n     * Creates the DOM element for an overlay and appends it to the overlay container.\n     * @returns Newly-created pane element\n     */\n    _createPaneElement(host) {\n        const pane = this._document.createElement('div');\n        pane.id = `cdk-overlay-${nextUniqueId++}`;\n        pane.classList.add('cdk-overlay-pane');\n        host.appendChild(pane);\n        return pane;\n    }\n    /**\n     * Creates the host element that wraps around an overlay\n     * and can be used for advanced positioning.\n     * @returns Newly-create host element.\n     */\n    _createHostElement() {\n        const host = this._document.createElement('div');\n        this._overlayContainer.getContainerElement().appendChild(host);\n        return host;\n    }\n    /**\n     * Create a DomPortalOutlet into which the overlay content can be loaded.\n     * @param pane The DOM element to turn into a portal outlet.\n     * @returns A portal outlet for the given DOM element.\n     */\n    _createPortalOutlet(pane) {\n        // We have to resolve the ApplicationRef later in order to allow people\n        // to use overlay-based providers during app initialization.\n        if (!this._appRef) {\n            this._appRef = this._injector.get(ApplicationRef);\n        }\n        return new DomPortalOutlet(pane, this._componentFactoryResolver, this._appRef, this._injector, this._document);\n    }\n}\nOverlay.ɵfac = function Overlay_Factory(t) { return new (t || Overlay)(ɵngcc0.ɵɵinject(ScrollStrategyOptions), ɵngcc0.ɵɵinject(OverlayContainer), ɵngcc0.ɵɵinject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵinject(OverlayPositionBuilder), ɵngcc0.ɵɵinject(OverlayKeyboardDispatcher), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc3.Directionality), ɵngcc0.ɵɵinject(ɵngcc4.Location), ɵngcc0.ɵɵinject(OverlayOutsideClickDispatcher)); };\nOverlay.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: Overlay, factory: Overlay.ɵfac });\nOverlay.ctorParameters = () => [\n    { type: ScrollStrategyOptions },\n    { type: OverlayContainer },\n    { type: ComponentFactoryResolver },\n    { type: OverlayPositionBuilder },\n    { type: OverlayKeyboardDispatcher },\n    { type: Injector },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Directionality },\n    { type: Location },\n    { type: OverlayOutsideClickDispatcher }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Overlay, [{\n        type: Injectable\n    }], function () { return [{ type: ScrollStrategyOptions }, { type: OverlayContainer }, { type: ɵngcc0.ComponentFactoryResolver }, { type: OverlayPositionBuilder }, { type: OverlayKeyboardDispatcher }, { type: ɵngcc0.Injector }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc3.Directionality }, { type: ɵngcc4.Location }, { type: OverlayOutsideClickDispatcher }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Default set of positions for the overlay. Follows the behavior of a dropdown. */\nconst defaultPositionList = [\n    {\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'bottom'\n    },\n    {\n        originX: 'end',\n        originY: 'top',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    },\n    {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n    }\n];\n/** Injection token that determines the scroll handling while the connected overlay is open. */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY = new InjectionToken('cdk-connected-overlay-scroll-strategy');\n/**\n * Directive applied to an element to make it usable as an origin for an Overlay using a\n * ConnectedPositionStrategy.\n */\nclass CdkOverlayOrigin {\n    constructor(\n    /** Reference to the element on which the directive is applied. */\n    elementRef) {\n        this.elementRef = elementRef;\n    }\n}\nCdkOverlayOrigin.ɵfac = function CdkOverlayOrigin_Factory(t) { return new (t || CdkOverlayOrigin)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkOverlayOrigin.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkOverlayOrigin, selectors: [[\"\", \"cdk-overlay-origin\", \"\"], [\"\", \"overlay-origin\", \"\"], [\"\", \"cdkOverlayOrigin\", \"\"]], exportAs: [\"cdkOverlayOrigin\"] });\nCdkOverlayOrigin.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkOverlayOrigin, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]',\n                exportAs: 'cdkOverlayOrigin'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Directive to facilitate declarative creation of an\n * Overlay using a FlexibleConnectedPositionStrategy.\n */\nclass CdkConnectedOverlay {\n    // TODO(jelbourn): inputs for size, scroll behavior, animation, etc.\n    constructor(_overlay, templateRef, viewContainerRef, scrollStrategyFactory, _dir) {\n        this._overlay = _overlay;\n        this._dir = _dir;\n        this._hasBackdrop = false;\n        this._lockPosition = false;\n        this._growAfterOpen = false;\n        this._flexibleDimensions = false;\n        this._push = false;\n        this._backdropSubscription = Subscription.EMPTY;\n        this._attachSubscription = Subscription.EMPTY;\n        this._detachSubscription = Subscription.EMPTY;\n        this._positionSubscription = Subscription.EMPTY;\n        /** Margin between the overlay and the viewport edges. */\n        this.viewportMargin = 0;\n        /** Whether the overlay is open. */\n        this.open = false;\n        /** Whether the overlay can be closed by user interaction. */\n        this.disableClose = false;\n        /** Event emitted when the backdrop is clicked. */\n        this.backdropClick = new EventEmitter();\n        /** Event emitted when the position has changed. */\n        this.positionChange = new EventEmitter();\n        /** Event emitted when the overlay has been attached. */\n        this.attach = new EventEmitter();\n        /** Event emitted when the overlay has been detached. */\n        this.detach = new EventEmitter();\n        /** Emits when there are keyboard events that are targeted at the overlay. */\n        this.overlayKeydown = new EventEmitter();\n        /** Emits when there are mouse outside click events that are targeted at the overlay. */\n        this.overlayOutsideClick = new EventEmitter();\n        this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this.scrollStrategy = this._scrollStrategyFactory();\n    }\n    /** The offset in pixels for the overlay connection point on the x-axis */\n    get offsetX() { return this._offsetX; }\n    set offsetX(offsetX) {\n        this._offsetX = offsetX;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /** The offset in pixels for the overlay connection point on the y-axis */\n    get offsetY() { return this._offsetY; }\n    set offsetY(offsetY) {\n        this._offsetY = offsetY;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /** Whether or not the overlay should attach a backdrop. */\n    get hasBackdrop() { return this._hasBackdrop; }\n    set hasBackdrop(value) { this._hasBackdrop = coerceBooleanProperty(value); }\n    /** Whether or not the overlay should be locked when scrolling. */\n    get lockPosition() { return this._lockPosition; }\n    set lockPosition(value) { this._lockPosition = coerceBooleanProperty(value); }\n    /** Whether the overlay's width and height can be constrained to fit within the viewport. */\n    get flexibleDimensions() { return this._flexibleDimensions; }\n    set flexibleDimensions(value) {\n        this._flexibleDimensions = coerceBooleanProperty(value);\n    }\n    /** Whether the overlay can grow after the initial open when flexible positioning is turned on. */\n    get growAfterOpen() { return this._growAfterOpen; }\n    set growAfterOpen(value) { this._growAfterOpen = coerceBooleanProperty(value); }\n    /** Whether the overlay can be pushed on-screen if none of the provided positions fit. */\n    get push() { return this._push; }\n    set push(value) { this._push = coerceBooleanProperty(value); }\n    /** The associated overlay reference. */\n    get overlayRef() {\n        return this._overlayRef;\n    }\n    /** The element's layout direction. */\n    get dir() {\n        return this._dir ? this._dir.value : 'ltr';\n    }\n    ngOnDestroy() {\n        this._attachSubscription.unsubscribe();\n        this._detachSubscription.unsubscribe();\n        this._backdropSubscription.unsubscribe();\n        this._positionSubscription.unsubscribe();\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n        }\n    }\n    ngOnChanges(changes) {\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n            this._overlayRef.updateSize({\n                width: this.width,\n                minWidth: this.minWidth,\n                height: this.height,\n                minHeight: this.minHeight,\n            });\n            if (changes['origin'] && this.open) {\n                this._position.apply();\n            }\n        }\n        if (changes['open']) {\n            this.open ? this._attachOverlay() : this._detachOverlay();\n        }\n    }\n    /** Creates an overlay */\n    _createOverlay() {\n        if (!this.positions || !this.positions.length) {\n            this.positions = defaultPositionList;\n        }\n        const overlayRef = this._overlayRef = this._overlay.create(this._buildConfig());\n        this._attachSubscription = overlayRef.attachments().subscribe(() => this.attach.emit());\n        this._detachSubscription = overlayRef.detachments().subscribe(() => this.detach.emit());\n        overlayRef.keydownEvents().subscribe((event) => {\n            this.overlayKeydown.next(event);\n            if (event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event)) {\n                event.preventDefault();\n                this._detachOverlay();\n            }\n        });\n        this._overlayRef.outsidePointerEvents().subscribe((event) => {\n            this.overlayOutsideClick.next(event);\n        });\n    }\n    /** Builds the overlay config based on the directive's inputs */\n    _buildConfig() {\n        const positionStrategy = this._position =\n            this.positionStrategy || this._createPositionStrategy();\n        const overlayConfig = new OverlayConfig({\n            direction: this._dir,\n            positionStrategy,\n            scrollStrategy: this.scrollStrategy,\n            hasBackdrop: this.hasBackdrop\n        });\n        if (this.width || this.width === 0) {\n            overlayConfig.width = this.width;\n        }\n        if (this.height || this.height === 0) {\n            overlayConfig.height = this.height;\n        }\n        if (this.minWidth || this.minWidth === 0) {\n            overlayConfig.minWidth = this.minWidth;\n        }\n        if (this.minHeight || this.minHeight === 0) {\n            overlayConfig.minHeight = this.minHeight;\n        }\n        if (this.backdropClass) {\n            overlayConfig.backdropClass = this.backdropClass;\n        }\n        if (this.panelClass) {\n            overlayConfig.panelClass = this.panelClass;\n        }\n        return overlayConfig;\n    }\n    /** Updates the state of a position strategy, based on the values of the directive inputs. */\n    _updatePositionStrategy(positionStrategy) {\n        const positions = this.positions.map(currentPosition => ({\n            originX: currentPosition.originX,\n            originY: currentPosition.originY,\n            overlayX: currentPosition.overlayX,\n            overlayY: currentPosition.overlayY,\n            offsetX: currentPosition.offsetX || this.offsetX,\n            offsetY: currentPosition.offsetY || this.offsetY,\n            panelClass: currentPosition.panelClass || undefined,\n        }));\n        return positionStrategy\n            .setOrigin(this.origin.elementRef)\n            .withPositions(positions)\n            .withFlexibleDimensions(this.flexibleDimensions)\n            .withPush(this.push)\n            .withGrowAfterOpen(this.growAfterOpen)\n            .withViewportMargin(this.viewportMargin)\n            .withLockedPosition(this.lockPosition)\n            .withTransformOriginOn(this.transformOriginSelector);\n    }\n    /** Returns the position strategy of the overlay to be set on the overlay config */\n    _createPositionStrategy() {\n        const strategy = this._overlay.position().flexibleConnectedTo(this.origin.elementRef);\n        this._updatePositionStrategy(strategy);\n        return strategy;\n    }\n    /** Attaches the overlay and subscribes to backdrop clicks if backdrop exists */\n    _attachOverlay() {\n        if (!this._overlayRef) {\n            this._createOverlay();\n        }\n        else {\n            // Update the overlay size, in case the directive's inputs have changed\n            this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop;\n        }\n        if (!this._overlayRef.hasAttached()) {\n            this._overlayRef.attach(this._templatePortal);\n        }\n        if (this.hasBackdrop) {\n            this._backdropSubscription = this._overlayRef.backdropClick().subscribe(event => {\n                this.backdropClick.emit(event);\n            });\n        }\n        else {\n            this._backdropSubscription.unsubscribe();\n        }\n        this._positionSubscription.unsubscribe();\n        // Only subscribe to `positionChanges` if requested, because putting\n        // together all the information for it can be expensive.\n        if (this.positionChange.observers.length > 0) {\n            this._positionSubscription = this._position.positionChanges\n                .pipe(takeWhile(() => this.positionChange.observers.length > 0))\n                .subscribe(position => {\n                this.positionChange.emit(position);\n                if (this.positionChange.observers.length === 0) {\n                    this._positionSubscription.unsubscribe();\n                }\n            });\n        }\n    }\n    /** Detaches the overlay and unsubscribes to backdrop clicks if backdrop exists */\n    _detachOverlay() {\n        if (this._overlayRef) {\n            this._overlayRef.detach();\n        }\n        this._backdropSubscription.unsubscribe();\n        this._positionSubscription.unsubscribe();\n    }\n}\nCdkConnectedOverlay.ɵfac = function CdkConnectedOverlay_Factory(t) { return new (t || CdkConnectedOverlay)(ɵngcc0.ɵɵdirectiveInject(Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8)); };\nCdkConnectedOverlay.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkConnectedOverlay, selectors: [[\"\", \"cdk-connected-overlay\", \"\"], [\"\", \"connected-overlay\", \"\"], [\"\", \"cdkConnectedOverlay\", \"\"]], inputs: { viewportMargin: [\"cdkConnectedOverlayViewportMargin\", \"viewportMargin\"], open: [\"cdkConnectedOverlayOpen\", \"open\"], disableClose: [\"cdkConnectedOverlayDisableClose\", \"disableClose\"], scrollStrategy: [\"cdkConnectedOverlayScrollStrategy\", \"scrollStrategy\"], offsetX: [\"cdkConnectedOverlayOffsetX\", \"offsetX\"], offsetY: [\"cdkConnectedOverlayOffsetY\", \"offsetY\"], hasBackdrop: [\"cdkConnectedOverlayHasBackdrop\", \"hasBackdrop\"], lockPosition: [\"cdkConnectedOverlayLockPosition\", \"lockPosition\"], flexibleDimensions: [\"cdkConnectedOverlayFlexibleDimensions\", \"flexibleDimensions\"], growAfterOpen: [\"cdkConnectedOverlayGrowAfterOpen\", \"growAfterOpen\"], push: [\"cdkConnectedOverlayPush\", \"push\"], positions: [\"cdkConnectedOverlayPositions\", \"positions\"], origin: [\"cdkConnectedOverlayOrigin\", \"origin\"], positionStrategy: [\"cdkConnectedOverlayPositionStrategy\", \"positionStrategy\"], width: [\"cdkConnectedOverlayWidth\", \"width\"], height: [\"cdkConnectedOverlayHeight\", \"height\"], minWidth: [\"cdkConnectedOverlayMinWidth\", \"minWidth\"], minHeight: [\"cdkConnectedOverlayMinHeight\", \"minHeight\"], backdropClass: [\"cdkConnectedOverlayBackdropClass\", \"backdropClass\"], panelClass: [\"cdkConnectedOverlayPanelClass\", \"panelClass\"], transformOriginSelector: [\"cdkConnectedOverlayTransformOriginOn\", \"transformOriginSelector\"] }, outputs: { backdropClick: \"backdropClick\", positionChange: \"positionChange\", attach: \"attach\", detach: \"detach\", overlayKeydown: \"overlayKeydown\", overlayOutsideClick: \"overlayOutsideClick\" }, exportAs: [\"cdkConnectedOverlay\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkConnectedOverlay.ctorParameters = () => [\n    { type: Overlay },\n    { type: TemplateRef },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nCdkConnectedOverlay.propDecorators = {\n    origin: [{ type: Input, args: ['cdkConnectedOverlayOrigin',] }],\n    positions: [{ type: Input, args: ['cdkConnectedOverlayPositions',] }],\n    positionStrategy: [{ type: Input, args: ['cdkConnectedOverlayPositionStrategy',] }],\n    offsetX: [{ type: Input, args: ['cdkConnectedOverlayOffsetX',] }],\n    offsetY: [{ type: Input, args: ['cdkConnectedOverlayOffsetY',] }],\n    width: [{ type: Input, args: ['cdkConnectedOverlayWidth',] }],\n    height: [{ type: Input, args: ['cdkConnectedOverlayHeight',] }],\n    minWidth: [{ type: Input, args: ['cdkConnectedOverlayMinWidth',] }],\n    minHeight: [{ type: Input, args: ['cdkConnectedOverlayMinHeight',] }],\n    backdropClass: [{ type: Input, args: ['cdkConnectedOverlayBackdropClass',] }],\n    panelClass: [{ type: Input, args: ['cdkConnectedOverlayPanelClass',] }],\n    viewportMargin: [{ type: Input, args: ['cdkConnectedOverlayViewportMargin',] }],\n    scrollStrategy: [{ type: Input, args: ['cdkConnectedOverlayScrollStrategy',] }],\n    open: [{ type: Input, args: ['cdkConnectedOverlayOpen',] }],\n    disableClose: [{ type: Input, args: ['cdkConnectedOverlayDisableClose',] }],\n    transformOriginSelector: [{ type: Input, args: ['cdkConnectedOverlayTransformOriginOn',] }],\n    hasBackdrop: [{ type: Input, args: ['cdkConnectedOverlayHasBackdrop',] }],\n    lockPosition: [{ type: Input, args: ['cdkConnectedOverlayLockPosition',] }],\n    flexibleDimensions: [{ type: Input, args: ['cdkConnectedOverlayFlexibleDimensions',] }],\n    growAfterOpen: [{ type: Input, args: ['cdkConnectedOverlayGrowAfterOpen',] }],\n    push: [{ type: Input, args: ['cdkConnectedOverlayPush',] }],\n    backdropClick: [{ type: Output }],\n    positionChange: [{ type: Output }],\n    attach: [{ type: Output }],\n    detach: [{ type: Output }],\n    overlayKeydown: [{ type: Output }],\n    overlayOutsideClick: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkConnectedOverlay, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]',\n                exportAs: 'cdkConnectedOverlay'\n            }]\n    }], function () { return [{ type: Overlay }, { type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { viewportMargin: [{\n            type: Input,\n            args: ['cdkConnectedOverlayViewportMargin']\n        }], open: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOpen']\n        }], disableClose: [{\n            type: Input,\n            args: ['cdkConnectedOverlayDisableClose']\n        }], backdropClick: [{\n            type: Output\n        }], positionChange: [{\n            type: Output\n        }], attach: [{\n            type: Output\n        }], detach: [{\n            type: Output\n        }], overlayKeydown: [{\n            type: Output\n        }], overlayOutsideClick: [{\n            type: Output\n        }], scrollStrategy: [{\n            type: Input,\n            args: ['cdkConnectedOverlayScrollStrategy']\n        }], offsetX: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOffsetX']\n        }], offsetY: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOffsetY']\n        }], hasBackdrop: [{\n            type: Input,\n            args: ['cdkConnectedOverlayHasBackdrop']\n        }], lockPosition: [{\n            type: Input,\n            args: ['cdkConnectedOverlayLockPosition']\n        }], flexibleDimensions: [{\n            type: Input,\n            args: ['cdkConnectedOverlayFlexibleDimensions']\n        }], growAfterOpen: [{\n            type: Input,\n            args: ['cdkConnectedOverlayGrowAfterOpen']\n        }], push: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPush']\n        }], positions: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPositions']\n        }], origin: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOrigin']\n        }], positionStrategy: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPositionStrategy']\n        }], width: [{\n            type: Input,\n            args: ['cdkConnectedOverlayWidth']\n        }], height: [{\n            type: Input,\n            args: ['cdkConnectedOverlayHeight']\n        }], minWidth: [{\n            type: Input,\n            args: ['cdkConnectedOverlayMinWidth']\n        }], minHeight: [{\n            type: Input,\n            args: ['cdkConnectedOverlayMinHeight']\n        }], backdropClass: [{\n            type: Input,\n            args: ['cdkConnectedOverlayBackdropClass']\n        }], panelClass: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPanelClass']\n        }], transformOriginSelector: [{\n            type: Input,\n            args: ['cdkConnectedOverlayTransformOriginOn']\n        }] }); })();\n/** @docs-private */\nfunction CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER = {\n    provide: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass OverlayModule {\n}\nOverlayModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: OverlayModule });\nOverlayModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function OverlayModule_Factory(t) { return new (t || OverlayModule)(); }, providers: [\n        Overlay,\n        CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n    ], imports: [[BidiModule, PortalModule, ScrollingModule], ScrollingModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(OverlayModule, { declarations: function () { return [CdkConnectedOverlay, CdkOverlayOrigin]; }, imports: function () { return [BidiModule, PortalModule, ScrollingModule]; }, exports: function () { return [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule, PortalModule, ScrollingModule],\n                exports: [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule],\n                declarations: [CdkConnectedOverlay, CdkOverlayOrigin],\n                providers: [\n                    Overlay,\n                    CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Alternative to OverlayContainer that supports correct displaying of overlay elements in\n * Fullscreen mode\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen\n *\n * Should be provided in the root component.\n */\nclass FullscreenOverlayContainer extends OverlayContainer {\n    constructor(_document, platform) {\n        super(_document, platform);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        if (this._fullScreenEventName && this._fullScreenListener) {\n            this._document.removeEventListener(this._fullScreenEventName, this._fullScreenListener);\n        }\n    }\n    _createContainer() {\n        super._createContainer();\n        this._adjustParentForFullscreenChange();\n        this._addFullscreenChangeListener(() => this._adjustParentForFullscreenChange());\n    }\n    _adjustParentForFullscreenChange() {\n        if (!this._containerElement) {\n            return;\n        }\n        const fullscreenElement = this.getFullscreenElement();\n        const parent = fullscreenElement || this._document.body;\n        parent.appendChild(this._containerElement);\n    }\n    _addFullscreenChangeListener(fn) {\n        const eventName = this._getEventName();\n        if (eventName) {\n            if (this._fullScreenListener) {\n                this._document.removeEventListener(eventName, this._fullScreenListener);\n            }\n            this._document.addEventListener(eventName, fn);\n            this._fullScreenListener = fn;\n        }\n    }\n    _getEventName() {\n        if (!this._fullScreenEventName) {\n            const _document = this._document;\n            if (_document.fullscreenEnabled) {\n                this._fullScreenEventName = 'fullscreenchange';\n            }\n            else if (_document.webkitFullscreenEnabled) {\n                this._fullScreenEventName = 'webkitfullscreenchange';\n            }\n            else if (_document.mozFullScreenEnabled) {\n                this._fullScreenEventName = 'mozfullscreenchange';\n            }\n            else if (_document.msFullscreenEnabled) {\n                this._fullScreenEventName = 'MSFullscreenChange';\n            }\n        }\n        return this._fullScreenEventName;\n    }\n    /**\n     * When the page is put into fullscreen mode, a specific element is specified.\n     * Only that element and its children are visible when in fullscreen mode.\n     */\n    getFullscreenElement() {\n        const _document = this._document;\n        return _document.fullscreenElement ||\n            _document.webkitFullscreenElement ||\n            _document.mozFullScreenElement ||\n            _document.msFullscreenElement ||\n            null;\n    }\n}\nFullscreenOverlayContainer.ɵfac = function FullscreenOverlayContainer_Factory(t) { return new (t || FullscreenOverlayContainer)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform)); };\nFullscreenOverlayContainer.ɵprov = ɵɵdefineInjectable({ factory: function FullscreenOverlayContainer_Factory() { return new FullscreenOverlayContainer(ɵɵinject(DOCUMENT), ɵɵinject(Platform)); }, token: FullscreenOverlayContainer, providedIn: \"root\" });\nFullscreenOverlayContainer.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FullscreenOverlayContainer, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BlockScrollStrategy, CdkConnectedOverlay, CdkOverlayOrigin, CloseScrollStrategy, ConnectedOverlayPositionChange, ConnectedPositionStrategy, ConnectionPositionPair, FlexibleConnectedPositionStrategy, FullscreenOverlayContainer, GlobalPositionStrategy, NoopScrollStrategy, Overlay, OverlayConfig, OverlayContainer, OverlayKeyboardDispatcher, OverlayModule, OverlayOutsideClickDispatcher, OverlayPositionBuilder, OverlayRef, RepositionScrollStrategy, ScrollStrategyOptions, ScrollingVisibility, validateHorizontalPosition, validateVerticalPosition, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY as ɵangular_material_src_cdk_overlay_overlay_a, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY as ɵangular_material_src_cdk_overlay_overlay_b, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER as ɵangular_material_src_cdk_overlay_overlay_c, BaseOverlayDispatcher as ɵangular_material_src_cdk_overlay_overlay_d };\n\n//# sourceMappingURL=overlay.js.map","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegistrationComponent } from './registration/registration.component';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\nimport { LogoutComponent } from './logout/logout.component';\r\nimport { AuthComponent } from './auth.component';\r\nimport {TranslationModule} from '../i18n/translation.module';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport { PerfectScrollbarModule }          from 'ngx-perfect-scrollbar';\r\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { JoyrideModule } from 'ngx-joyride';\r\n\r\nexport const PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\r\n  suppressScrollX: true\r\n};\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent,\r\n    RegistrationComponent,\r\n    ForgotPasswordComponent,\r\n    LogoutComponent,\r\n    AuthComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ToastrModule.forRoot(),\r\n    TranslationModule,\r\n    AuthRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    MatSelectModule,\r\n    PerfectScrollbarModule,\r\n    NgxSpinnerModule,\r\n    JoyrideModule.forRoot()\r\n\r\n  ]\r\n})\r\nexport class AuthModule {}\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Subscription, Observable } from 'rxjs';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { ConfirmPasswordValidator } from './confirm-password.validator';\r\nimport { UserModel } from '../_models/user.model';\r\nimport { first } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-registration',\r\n  templateUrl: './registration.component.html',\r\n  styleUrls: ['./registration.component.scss'],\r\n})\r\nexport class RegistrationComponent implements OnInit, OnDestroy {\r\n  registrationForm: FormGroup;\r\n  hasError: boolean;\r\n  isLoading$: Observable<boolean>;\r\n\r\n  // private fields\r\n  private unsubscribe: Subscription[] = []; // Read more: => https://brianflove.com/2016/12/11/anguar-2-unsubscribe-observables/\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {\r\n    this.isLoading$ = this.authService.isLoading$;\r\n    // redirect to home if already logged in\r\n    if (this.authService.currentUserValue) {\r\n      this.router.navigate(['/']);\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() {\r\n    return this.registrationForm.controls;\r\n  }\r\n\r\n  initForm() {\r\n    this.registrationForm = this.fb.group(\r\n      {\r\n        fullname: [\r\n          '',\r\n          Validators.compose([\r\n            Validators.required,\r\n            Validators.minLength(3),\r\n            Validators.maxLength(100),\r\n          ]),\r\n        ],\r\n        email: [\r\n          'qwe@qwe.qwe',\r\n          Validators.compose([\r\n            Validators.required,\r\n            Validators.email,\r\n            Validators.minLength(3),\r\n            Validators.maxLength(320), // https://stackoverflow.com/questions/386294/what-is-the-maximum-length-of-a-valid-email-address\r\n          ]),\r\n        ],\r\n        password: [\r\n          '',\r\n          Validators.compose([\r\n            Validators.required,\r\n            Validators.minLength(3),\r\n            Validators.maxLength(100),\r\n          ]),\r\n        ],\r\n        cPassword: [\r\n          '',\r\n          Validators.compose([\r\n            Validators.required,\r\n            Validators.minLength(3),\r\n            Validators.maxLength(100),\r\n          ]),\r\n        ],\r\n        agree: [false, Validators.compose([Validators.required])],\r\n      },\r\n      {\r\n        validator: ConfirmPasswordValidator.MatchPassword,\r\n      }\r\n    );\r\n  }\r\n\r\n  submit() {\r\n    this.hasError = false;\r\n    const result = {};\r\n    Object.keys(this.f).forEach(key => {\r\n      result[key] = this.f[key].value;\r\n    });\r\n    const newUser = new UserModel();\r\n    newUser.setUser(result);\r\n    const registrationSubscr = this.authService\r\n      .registration(newUser)\r\n      .pipe(first())\r\n      .subscribe((user: UserModel) => {\r\n        if (user) {\r\n          this.router.navigate(['/']);\r\n        } else {\r\n          this.hasError = true;\r\n        }\r\n      });\r\n    this.unsubscribe.push(registrationSubscr);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.unsubscribe.forEach((sb) => sb.unsubscribe());\r\n  }\r\n}\r\n","<!--begin::Signup-->\r\n<div class=\"login-form login-signup\">\r\n  <!--begin::Form-->\r\n  <form\r\n    class=\"form\"\r\n    novalidate=\"novalidate\"\r\n    id=\"kt_login_signup_form\"\r\n    [formGroup]=\"registrationForm\"\r\n    (ngSubmit)=\"submit()\"\r\n  >\r\n    <!--begin::Title-->\r\n    <div class=\"pb-13 pt-lg-0 pt-5\">\r\n      <h3 class=\"font-weight-bolder text-dark font-size-h4 font-size-h1-lg\">\r\n        Sign Up\r\n      </h3>\r\n      <p class=\"text-muted font-weight-bold font-size-h4\">\r\n        Enter your details to create your account\r\n      </p>\r\n    </div>\r\n    <!--end::Title-->\r\n\r\n    <!-- begin::Alert error-->\r\n    <ng-container *ngIf=\"hasError\">\r\n      <div\r\n        class=\"mb-10 alert alert-custom alert-light-danger alert-dismissible\"\r\n      >\r\n        <div class=\"alert-text\">The registration details are incorrect</div>\r\n      </div>\r\n    </ng-container>\r\n    <!-- end::Alert error-->\r\n\r\n    <!--begin::Form group-->\r\n    <div class=\"form-group\">\r\n      <label class=\"font-size-h6 font-weight-bolder text-dark\">Fullname</label>\r\n      <input\r\n        class=\"form-control form-control-solid h-auto py-7 px-6 rounded-lg font-size-h6\"\r\n        type=\"text\"\r\n        name=\"fullname\"\r\n        formControlName=\"fullname\"\r\n        placeholder=\"Fullname\"\r\n        autocomplete=\"off\"\r\n        [ngClass]=\"{\r\n          'is-invalid': registrationForm.controls['fullname'].invalid\r\n        }\"\r\n      />\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'required',\r\n          message: 'Fullname is required',\r\n          control: registrationForm.controls['fullname']\r\n        }\"\r\n      ></ng-container>\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'minlength',\r\n          message: 'Fullname should have at least 3 symbols',\r\n          control: registrationForm.controls['fullname']\r\n        }\"\r\n      ></ng-container>\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'maxLength',\r\n          message: 'Fullname should have maximum 100 symbols',\r\n          control: registrationForm.controls['fullname']\r\n        }\"\r\n      ></ng-container>\r\n    </div>\r\n    <!--end::Form group-->\r\n\r\n    <!--begin::Form group-->\r\n    <div class=\"form-group\">\r\n      <label class=\"font-size-h6 font-weight-bolder text-dark\">Email</label>\r\n      <input\r\n        class=\"form-control form-control-solid h-auto py-7 px-6 rounded-lg font-size-h6\"\r\n        type=\"email\"\r\n        placeholder=\"Email\"\r\n        name=\"email\"\r\n        formControlName=\"email\"\r\n        autocomplete=\"off\"\r\n        [ngClass]=\"{ 'is-invalid': registrationForm.controls['email'].invalid }\"\r\n      />\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'required',\r\n          message: 'Email is required',\r\n          control: registrationForm.controls['email']\r\n        }\"\r\n      ></ng-container>\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'email',\r\n          message: 'Email is invalid',\r\n          control: registrationForm.controls['email']\r\n        }\"\r\n      ></ng-container>\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'minlength',\r\n          message: 'Email should have at least 3 symbols',\r\n          control: registrationForm.controls['email']\r\n        }\"\r\n      ></ng-container>\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'maxLength',\r\n          message: 'Email should have maximum 360 symbols',\r\n          control: registrationForm.controls['email']\r\n        }\"\r\n      ></ng-container>\r\n    </div>\r\n    <!--end::Form group-->\r\n\r\n    <!--begin::Form group-->\r\n    <div class=\"form-group\">\r\n      <label class=\"font-size-h6 font-weight-bolder text-dark pt-5\"\r\n        >Password</label\r\n      >\r\n      <input\r\n        class=\"form-control form-control-solid h-auto py-7 px-6 rounded-lg font-size-h6\"\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        name=\"password\"\r\n        formControlName=\"password\"\r\n        autocomplete=\"off\"\r\n        [ngClass]=\"{\r\n          'is-invalid': registrationForm.controls['password'].invalid\r\n        }\"\r\n      />\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'required',\r\n          message: 'Password is required',\r\n          control: registrationForm.controls['password']\r\n        }\"\r\n      ></ng-container>\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'minlength',\r\n          message: 'Password should have at least 3 symbols',\r\n          control: registrationForm.controls['password']\r\n        }\"\r\n      ></ng-container>\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'maxLength',\r\n          message: 'Password should have maximum 100 symbols',\r\n          control: registrationForm.controls['password']\r\n        }\"\r\n      ></ng-container>\r\n    </div>\r\n    <!--end::Form group-->\r\n\r\n    <!--begin::Form group-->\r\n    <div class=\"form-group\">\r\n      <label class=\"font-size-h6 font-weight-bolder text-dark pt-5\"\r\n        >Confirm Password</label\r\n      >\r\n      <input\r\n        class=\"form-control form-control-solid h-auto py-7 px-6 rounded-lg font-size-h6\"\r\n        type=\"password\"\r\n        placeholder=\"Confirm password\"\r\n        name=\"cPassword\"\r\n        autocomplete=\"off\"\r\n        formControlName=\"cPassword\"\r\n        [ngClass]=\"{\r\n          'is-invalid': registrationForm.controls['cPassword'].invalid\r\n        }\"\r\n      />\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'required',\r\n          message: 'Confirm Password is required',\r\n          control: registrationForm.controls['cPassword']\r\n        }\"\r\n      ></ng-container>\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'minlength',\r\n          message: 'Confirm Password should have at least 3 symbols',\r\n          control: registrationForm.controls['cPassword']\r\n        }\"\r\n      ></ng-container>\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'maxLength',\r\n          message: 'Confirm Password should have maximum 100 symbols',\r\n          control: registrationForm.controls['cPassword']\r\n        }\"\r\n      ></ng-container>\r\n      <ng-container\r\n        *ngIf=\"\r\n          registrationForm.controls['cPassword'].errors &&\r\n          registrationForm.controls['cPassword'].errors.ConfirmPassword\r\n        \"\r\n      >\r\n        <div class=\"fv-plugins-message-container\">\r\n          <div class=\"fv-help-block\">\r\n            'Passsword' and 'Confirm Password' didn't match.\r\n          </div>\r\n        </div>\r\n      </ng-container>\r\n    </div>\r\n    <!--end::Form group-->\r\n\r\n    <!--begin::Form group-->\r\n    <div class=\"form-group\">\r\n      <label class=\"checkbox mb-0\">\r\n        <input type=\"checkbox\" formControlName=\"agree\" name=\"agree\" />&nbsp;I\r\n        Agree the&nbsp;<a\r\n          href=\"https://keenthemes.com/metronic/?page=faq\"\r\n          target=\"_blank\"\r\n          >terms and conditions</a\r\n        >.&nbsp;\r\n        <span></span>\r\n      </label>\r\n    </div>\r\n    <!--end::Form group-->\r\n\r\n    <!--begin::Form group-->\r\n    <div class=\"form-group d-flex flex-wrap pb-lg-0 pb-3\">\r\n      <button\r\n        type=\"submit\"\r\n        id=\"kt_login_signup_submit\"\r\n        [disabled]=\"\r\n          registrationForm.invalid || !registrationForm.controls['agree'].value\r\n        \"\r\n        class=\"btn btn-primary font-weight-bolder font-size-h6 px-8 py-4 my-3 mr-4\"\r\n      >\r\n        Submit\r\n      </button>\r\n      <a\r\n        routerLink=\"/auth/login\"\r\n        type=\"button\"\r\n        id=\"kt_login_signup_cancel\"\r\n        class=\"btn btn-light-primary font-weight-bolder font-size-h6 px-8 py-4 my-3\"\r\n      >\r\n        Cancel\r\n      </a>\r\n\r\n      <ng-container *ngIf=\"isLoading$ | async\">\r\n        <span class=\"spinner spinner-primary ml-5\"></span>\r\n      </ng-container>\r\n    </div>\r\n    <!--end::Form group-->\r\n  </form>\r\n  <!--end::Form-->\r\n</div>\r\n<!--end::Signup-->\r\n\r\n<ng-template\r\n  #formError\r\n  let-control=\"control\"\r\n  let-message=\"message\"\r\n  let-validation=\"validation\"\r\n>\r\n  <ng-container\r\n    *ngIf=\"control.hasError(validation) && (control.dirty || control.touched)\"\r\n  >\r\n    <div class=\"fv-plugins-message-container\">\r\n      <div class=\"fv-help-block\">\r\n        {{ message }}\r\n      </div>\r\n    </div>\r\n  </ng-container>\r\n</ng-template>\r\n","import { BaseClub } from './../../../core/models/base-club.model';\r\nimport { LoginResponse } from './../../../core/models/response/login-response.model';\r\nimport { ApiResponse } from './../../../core/models/response.model';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ClubService } from './../../../core/services/club.service';\r\nimport { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { Club } from '../../../core/models/club.model'\r\nimport { MainAuthService } from '../../../core/services/auth.service'\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { NgbModal, NgbModalConfig } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { constants } from 'src/app/app.constants';\r\nimport { debounceTime, take, takeUntil } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nimport { JoyrideService } from 'ngx-joyride';\r\nimport { AuthRequest } from 'src/app/core/models/requests/auth-request.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n  providers: [NgbModalConfig, NgbModal, NgbActiveModal]\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  public selectedClub$ = this._clubService.SelectedClub$;\r\n  defaultAuth: any = {\r\n    email: '',\r\n    password: '',\r\n  };\r\n  searchedClubs: []\r\n  loginForm: FormGroup;\r\n  hasError: boolean;\r\n  returnUrl: string;\r\n  isLoading$: Observable<boolean>;\r\n  allClubs: BaseClub[]\r\n  tempClubs: BaseClub[]\r\n  searchString: string = ''\r\n  searchStarted: boolean = false;\r\n  noClubFound: boolean = false;\r\n  showBackBtn: boolean = false;\r\n  isPickerClub: boolean = false;\r\n  public defaultClub: Club\r\n  public userClub\r\n  offset: number = 0;\r\n  limit: number = 20;\r\n  searchControl = new FormControl();\r\n  destroy$ = new Subject();\r\n  public page:number;\r\n  public isLoading: boolean;\r\n\r\n  constructor(\r\n    private config: NgbModalConfig,\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private _clubService: ClubService,\r\n    private _authService: MainAuthService,\r\n    private modalService: NgbModal,\r\n    private toastr: ToastrService,\r\n    private spinner: NgxSpinnerService,\r\n    private cf: ChangeDetectorRef,\r\n    private activeModal: NgbActiveModal,\r\n    private joyrideService: JoyrideService\r\n  ) {\r\n    config.backdrop = 'static';\r\n    config.keyboard = false;\r\n    this.page = 0;\r\n    this.isLoading = false;\r\n\r\n\r\n    this.searchControl.valueChanges.pipe(takeUntil(this.destroy$),debounceTime(1000))\r\n    .subscribe(newValue => {\r\n      if (newValue.trim().length == 0 || newValue == \"\" ) {\r\n        if(this.isPickerClub == true) {\r\n          this.noClubFound = false;\r\n          this.getDividisClubs();\r\n        }\r\n        else {\r\n          this.noClubFound = false;\r\n          this.getAllClubs();\r\n        }\r\n       \r\n      } else {\r\n        this.searchClub(newValue);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.spinner.hide();\r\n    this.initLoginForm();\r\n    this.getAllClubs();\r\n  }\r\n\r\n  onClick() {\r\n    this.joyrideService.startTour(\r\n        { steps: ['firstStep', 'secondStep'] } // Your steps order\r\n    );\r\n}\r\n\r\n  initLoginForm() {\r\n    this.loginForm = this.fb.group({\r\n      email: [\r\n        this.defaultAuth.email,\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.email,\r\n          Validators.minLength(3),\r\n          Validators.maxLength(320),\r\n        ]),\r\n      ],\r\n      password: [\r\n        this.defaultAuth.password,\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.minLength(8),\r\n          Validators.maxLength(100),\r\n        ]),\r\n      ],\r\n    });\r\n  }\r\n\r\n  updateUserClub(club) {\r\n    this._clubService.updateClub(club).subscribe(data => {\r\n    })\r\n  }\r\n\r\n\r\n  showPreviousClubs() {\r\n\r\n    if(this.isPickerClub == true){\r\n      this.previous()\r\n    }\r\n    else {\r\n      this.isPickerClub = false;\r\n      this.noClubFound = false;\r\n      this.showBackBtn = false;\r\n      this.getAllClubs();\r\n    }\r\n\r\n  }\r\n\r\n\r\n  previous() {\r\n\r\n    if(this.page == 0){\r\n      this.isPickerClub = false;\r\n      this.noClubFound = false;\r\n      this.showBackBtn = false;\r\n      this.getAllClubs()\r\n    }\r\n    else {\r\n      this.page--;\r\n      this.getDividisClubs()\r\n    }\r\n\r\n  }\r\n\r\n\r\n  loginByEmail() {\r\n    var self = this;\r\n    if (!this._clubService.selectedClub) {\r\n      this.toastr.error('Please Select Club', 'Empty Club')\r\n      return;\r\n    }\r\n    \r\n    const payload: AuthRequest = {\r\n      clubID: this._clubService.selectedClub.id,\r\n      email: this.loginForm.value.email,\r\n      password: this.loginForm.value.password\r\n    }\r\n    \r\n    if (this._clubService.selectedClub.pickerClub) {\r\n      payload.clubID = this._clubService.selectedClub.pickerModelId\r\n      payload.pickerClubID = this._clubService.selectedClub.id\r\n      payload.clubName = this._clubService.selectedClub.clubName\r\n    }\r\n\r\n    this.spinner.show();\r\n    this._authService.loginByEmail(payload).subscribe((res:ApiResponse<LoginResponse>) => {\r\n      if (!res.hasErrors()) {\r\n        if (res.data?.newUser) {\r\n          localStorage.setItem('newUser', 'true');\r\n        }\r\n        if (res.data?.user.admin) {\r\n          this.spinner.hide();\r\n          this.toastr.success(`You are logged in as ${res.data.user.fullName}.`, 'Welcome!');\r\n          this.router.navigateByUrl('/pages/dashboard').then(hjh=> {});\r\n        }\r\n        else {\r\n          this.spinner.hide();\r\n          this.toastr.error('Only admins can access this panel.', 'Access Denied!');\r\n          return\r\n        }\r\n      }\r\n      else {\r\n        this.spinner.hide();\r\n        if (res.errors) {\r\n          this.toastr.warning(res?.errors[0]?.error?.message, 'Invalid!');\r\n          return;\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  getAllClubs() {\r\n    if (this.isLoading) return\r\n    this.isLoading = true;\r\n    this._clubService.getAllClubs(this.page).subscribe((res: ApiResponse<BaseClub[]>) => {\r\n      if(!res.hasErrors()) {\r\n        this.allClubs = res.data;\r\n        this.tempClubs = res.data;\r\n        console.log(this.allClubs)\r\n        if(this.allClubs.find(club => club.id == this._clubService.selectedClub?.id)) {\r\n          if(this.showBackBtn)\r\n            this.onClubSelected(this._clubService.selectedClub);\r\n        }\r\n      }\r\n      this.isLoading = false;\r\n    }, (error) => {\r\n      this.toastr.error(error.message)\r\n    })\r\n  }\r\n\r\n  openVerticallyCentered(content) {\r\n    this.modalService.open(content, { centered: true, size: 'lg' });\r\n    this.noClubFound = false;\r\n    // this.searchString = \"\"\r\n    this.allClubs = this.tempClubs;\r\n\r\n  }\r\n\r\n  searchClub(searchString: string) {\r\n    if(this.isPickerClub) {\r\n      this.showBackBtn = true;\r\n      if (searchString.trim().length == 0 || searchString == \"\") {\r\n        this.noClubFound = false;\r\n        this.cf.detectChanges()\r\n        return\r\n      }\r\n      else {\r\n        this._clubService.searchClubByNameForPicker(searchString, this.offset, this.limit).subscribe((res: ApiResponse<BaseClub[]>) => {\r\n          \r\n          if (!res.hasErrors()) {\r\n            if (res.data.length == 0) {\r\n              this.noClubFound = true;\r\n              this.allClubs = res.data;\r\n              return;\r\n            }\r\n            else if (res.data.length > 0) {\r\n            \r\n              res.data.map(item => {\r\n                item.pickerClub = true;\r\n                item.baseURL = this._clubService.selectedClub.baseURL;\r\n                item.pickerModelId = this._clubService.selectedClub.id\r\n      \r\n              })\r\n              this.allClubs = res.data;\r\n              this.noClubFound = false\r\n              this.cf.detectChanges()\r\n            }\r\n            this.cf.detectChanges()\r\n          }\r\n        })\r\n      }\r\n    }\r\n     else  {\r\n      this.showBackBtn=false;\r\n      if (searchString.trim().length == 0 || searchString == \"\") {\r\n        this.noClubFound = false;\r\n        this.cf.detectChanges()\r\n        return\r\n      }\r\n      else {\r\n        this._clubService.searchClubByName(searchString, this.offset, this.limit).subscribe((res: ApiResponse<BaseClub[]>) => {\r\n          if (!res.hasErrors()) {\r\n            if (res.data.length == 0 && searchString.trim().length !== 0) {\r\n              this.noClubFound = true;\r\n              this.allClubs = res.data;\r\n            \r\n              return;\r\n            }\r\n            else if (res.data.length > 0) {\r\n              this.allClubs = res.data;\r\n              this.noClubFound = false\r\n              this.cf.detectChanges()\r\n            }\r\n            this.cf.detectChanges()\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n \r\n\r\n  onClubSelected(club) {\r\n    if (!club.isPicker) {\r\n      this.isPickerClub = false\r\n      this.modalService.dismissAll()\r\n    }\r\n    this._clubService.selectedClub = club;\r\n    constants.clubApiUrl = club.baseURL;\r\n    this.isPickerClub = true\r\n    if (this._clubService.selectedClub.isPicker) {\r\n      this.showBackBtn = true\r\n      this.getDividisClubs()\r\n    }\r\n    else {\r\n      return of(null)\r\n    }\r\n  }\r\n\r\n  loadMoreClubs() {\r\n    this.page++;\r\n    this.getAllClubs();\r\n  }\r\n\r\n  next() {\r\n    this.page++;\r\n    this.getDividisClubs();\r\n  }\r\n\r\n  getDividisClubs() {\r\n    this._clubService.getDividisClubs(this.page,).pipe(take(1)).subscribe((res: ApiResponse<BaseClub[]>) => {\r\n      if(!res.hasErrors()) {\r\n        if (res.data.length == 0) {\r\n          this.allClubs = []\r\n          this.noClubFound = true;\r\n          return;\r\n        }\r\n        res.data.map(item => {\r\n          item.pickerClub = true;\r\n          item.baseURL = this._clubService.selectedClub.baseURL;\r\n          item.pickerModelId = this._clubService.selectedClub.id\r\n        })\r\n        this.allClubs = res.data;\r\n        this.tempClubs = res.data;\r\n      }\r\n    }, error => {\r\n      this.toastr.error(error.message)\r\n    })\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.complete();\r\n    this.destroy$.unsubscribe();\r\n  }\r\n}\r\n","<!--begin::Signin-->\r\n\r\n<ngx-spinner bdColor=\"rgba(0, 0, 0, 0.8)\" size=\"default\" color=\"#fff\" type=\"ball-spin\" [fullScreen]=\"true\">\r\n  <p style=\"color: white\">Please wait..</p>\r\n</ngx-spinner>\r\n\r\n<div class=\"login-form login-signin\">\r\n  <h2 class=\"font-weight-bolder font-size-h2\" style=\"color: #000000; letter-spacing: 1px;\" >\r\n    Sign In\r\n  </h2>\r\n  <div class=\"example-preview\">\r\n    <ng-template #content6 let-c=\"close\" let-d=\"dismiss\">\r\n      <div class=\"modal-header d-flex justify-content-between\"\r\n        style=\"background-color: #1e1e2d; padding-bottom: 10px;\" >\r\n        <form>\r\n          <div class=\"form-group d-flex flex-row\" style=\"float: left;\">\r\n            <button *ngIf=\"showBackBtn\" type=\"button\" class=\"btn\" (click)=\"showPreviousClubs();\"  \r\n            data-toggle=\"tooltip\" title=\"back\" style=\"margin-left: -15px;\">\r\n            <i class=\"far fa-arrow-alt-circle-left\" style=\"color:rgba(255, 255, 255, 0.877)\"></i>\r\n          </button>\r\n            <!-- <button *ngIf=\"isPickerClub\" type=\"button\" class=\"btn\" (click)=\"previous();\"  \r\n            data-toggle=\"tooltip\" title=\"back\" style=\"margin-left: -15px;\">\r\n            <i class=\"far fa-arrow-alt-circle-left\" style=\"color:rgba(255, 255, 255, 0.877)\">Main Clubs</i>\r\n          </button> -->\r\n            <label for=\"exampleInputEmail1\" class=\" font-size-h2\" style=\"color: #fff;\" >Select club</label>\r\n          </div>\r\n           <div class=\"form-group d-flex flex-row-reverse responsive\">\r\n            <button type=\"button\" class=\"btn\" (click)=\"c('Close click');\"\r\n            data-toggle=\"tooltip\" title=\"close window\">\r\n            <i class=\"far fa-times-circle\" style=\"color:rgba(255, 255, 255, 0.877)\"></i>\r\n          </button>\r\n          <input class=\"form-control bg-primary-o-30\" \r\n          [formControl]=\"searchControl\" style=\"color: #fff;\"\r\n              id=\"exampleInputEmail1\" placeholder=\"search\">\r\n          </div>\r\n        </form>\r\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click') ;\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body d-flex justify-content-center\">\r\n        <perfect-scrollbar class=\"media\" style=\"height: 600px\">\r\n          <div *ngIf=\"noClubFound\" class=\"custom-height d-flex align-items-center justify-content-center\"\r\n            style=\"width: 100% \">\r\n            <div class=\"d-flex flex-column-auto flex-column \">\r\n              <a class=\"text-center\">\r\n                <img src=\"./assets/media/bg/app________app____.jpg\" alt=\"\" />\r\n              </a>\r\n              <h3 class=\"text-center\">\r\n                No record found\r\n              </h3>\r\n            </div>\r\n          </div>\r\n          <div class=\"row row-cols-1 row-cols-md-4 g-4\" id=\"items\" style=\"cursor: pointer;\">\r\n            <div class=\"col\" *ngFor=\"let club of allClubs\" id=\"items\">\r\n              <div class=\"card resp-card\" (click)=\"onClubSelected(club) \">\r\n                <img src=\"{{club.logoURL}} \"\r\n                  class=\"rounded mx-auto d-block card-img-top size d-flex justify-content-center\" alt=\"...\">\r\n                  <ul class=\"list-group list-group-flush\" style=\"width: 100%;\">\r\n                  <li class=\"list-group-item d-flex justify-content-center font-weight-bold text-center \" style=\"margin:auto;\">\r\n                    {{club.clubName}}</li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </perfect-scrollbar>\r\n      </div>\r\n      <div class=\"modal-footer d-flex justify-content-center\">\r\n        <button type=\"button\" class=\"btn btn-secondary\"\r\n          (click)=\"c('Close click');\">Close</button>\r\n          <ng-container *ngIf=\"!isPickerClub; else picker\">\r\n            <button type=\"button\" class=\"btn btn-light-primary\"\r\n            (click)=\"loadMoreClubs();\">Load more</button>\r\n          </ng-container>\r\n          <ng-template #picker>\r\n            <button type=\"button\" class=\"btn btn-light-primary\"\r\n            (click)=\"next();\">Load more Clubs</button>\r\n          </ng-template>\r\n          \r\n          \r\n      \r\n        </div>\r\n    </ng-template>\r\n\r\n    <div class=\"btn btn-icon btn-light w-auto btn-clean d-inline-flex align-items-center btn-lg px-2 mr-5\"\r\n      (click)=\"openVerticallyCentered(content6)\" data-toggle=\"tooltip\" title=\"select club before login\"\r\n      style=\"background-color: #1e1e2d;\">\r\n      <span class=\"svg-icon svg-icon-primary svg-icon-2x\">\r\n       <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"24px\" height=\"24px\"\r\n          viewBox=\"0 0 24 24\" version=\"1.1\">\r\n          <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\r\n            <polygon points=\"0 0 24 0 24 24 0 24\" />\r\n            <path\r\n              d=\"M18.5,8 C17.1192881,8 16,6.88071187 16,5.5 C16,4.11928813 17.1192881,3 18.5,3 C19.8807119,3 21,4.11928813 21,5.5 C21,6.88071187 19.8807119,8 18.5,8 Z M18.5,21 C17.1192881,21 16,19.8807119 16,18.5 C16,17.1192881 17.1192881,16 18.5,16 C19.8807119,16 21,17.1192881 21,18.5 C21,19.8807119 19.8807119,21 18.5,21 Z M5.5,21 C4.11928813,21 3,19.8807119 3,18.5 C3,17.1192881 4.11928813,16 5.5,16 C6.88071187,16 8,17.1192881 8,18.5 C8,19.8807119 6.88071187,21 5.5,21 Z\"\r\n              fill=\"#000000\" opacity=\"0.3\" />\r\n            <path\r\n              d=\"M5.5,8 C4.11928813,8 3,6.88071187 3,5.5 C3,4.11928813 4.11928813,3 5.5,3 C6.88071187,3 8,4.11928813 8,5.5 C8,6.88071187 6.88071187,8 5.5,8 Z M11,4 L13,4 C13.5522847,4 14,4.44771525 14,5 C14,5.55228475 13.5522847,6 13,6 L11,6 C10.4477153,6 10,5.55228475 10,5 C10,4.44771525 10.4477153,4 11,4 Z M11,18 L13,18 C13.5522847,18 14,18.4477153 14,19 C14,19.5522847 13.5522847,20 13,20 L11,20 C10.4477153,20 10,19.5522847 10,19 C10,18.4477153 10.4477153,18 11,18 Z M5,10 C5.55228475,10 6,10.4477153 6,11 L6,13 C6,13.5522847 5.55228475,14 5,14 C4.44771525,14 4,13.5522847 4,13 L4,11 C4,10.4477153 4.44771525,10 5,10 Z M19,10 C19.5522847,10 20,10.4477153 20,11 L20,13 C20,13.5522847 19.5522847,14 19,14 C18.4477153,14 18,13.5522847 18,13 L18,11 C18,10.4477153 18.4477153,10 19,10 Z\"\r\n              fill=\"#000000\" />\r\n          </g>\r\n        </svg>\r\n        <!--end::Svg Icon-->\r\n      </span>\r\n      <span class=\"text-light font-weight-bolder font-size-base mr-3\" joyrideStep=\"firstStep\" title=\"Select Club\" text=\"You need to select club first.\">&nbsp;&nbsp;Select club</span>\r\n\r\n    </div>\r\n  </div>\r\n\r\n\r\n\r\n\r\n  <!--begin::Form-->\r\n\r\n  <form class=\"form\" [formGroup]=\"loginForm\" novalidate=\"novalidate\"\r\n    (ngSubmit)=\"loginByEmail()\">\r\n    <!--begin::Title-->\r\n    <div class=\"pb-13 pt-lg-0 pt-5\">\r\n\r\n    </div>\r\n\r\n    <ng-container *ngIf=\"hasError\">\r\n      <div class=\"mb-10 alert alert-custom alert-light-danger alert-dismissible\">\r\n        <div class=\"alert-text\">The login details are incorrect</div>\r\n      </div>\r\n    </ng-container>\r\n    <!-- end::Alert error-->\r\n\r\n    <!--begin::Form group-->\r\n\r\n    <div class=\"alert alert-custom alert-white shadow-sm fade show\" role=\"alert\" *ngIf=\"selectedClub$ | async as selectedClub\">\r\n      <div class=\"alert-icon\"><img src=\"{{selectedClub.logoURL}}\" class=\"rounded mx-auto d-block card-img-top\"\r\n          style=\"width: 70px; height: 70px; object-fit: cover;\" alt=\"...\"></div>\r\n\r\n      <div class=\"alert-text\">\r\n        <h3><small>Selected club:&nbsp; </small> {{selectedClub.clubName}}</h3>\r\n      </div>\r\n\r\n    </div>\r\n\r\n\r\n    <div class=\"form-group\">\r\n      <label class=\"font-size-h6 font-weight-bolder text-dark\">Email</label>\r\n      <input class=\"form-control form-control-solid h-auto py-7 px-6 rounded-lg\" type=\"email\" name=\"email\" joyrideStep=\"secondStep\" title=\"Email\" text=\"Provide your valid email\"\r\n        formControlName=\"email\" autocomplete=\"off\" [ngClass]=\"{ 'is-in valid': loginForm.controls['email'].invalid }\"\r\n        placeholder=\"e.g johndoe@gmail.com\" />\r\n      <ng-container [ngTemplateOutlet]=\"formError\" [ngTemplateOutletContext]=\"{\r\n          validation: 'required',\r\n          message: 'Email is required',\r\n          control: loginForm.controls['email']\r\n        }\"></ng-container>\r\n      <ng-container [ngTemplateOutlet]=\"formError\" [ngTemplateOutletContext]=\"{\r\n          validation: 'email',\r\n          message: 'Email is invalid',\r\n          control: loginForm.controls['email']\r\n        }\"></ng-container>\r\n      <ng-container [ngTemplateOutlet]=\"formError\" [ngTemplateOutletContext]=\"{\r\n          validation: 'minLength',\r\n          message: 'Email should have at least 3 symbols',\r\n          control: loginForm.controls['email']\r\n        }\"></ng-container>\r\n      <ng-container [ngTemplateOutlet]=\"formError\" [ngTemplateOutletContext]=\"{\r\n          validation: 'maxLength',\r\n          message: 'Email should have maximum 360 symbols',\r\n          control: loginForm.controls['email']\r\n        }\"></ng-container>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <div class=\"d-flex justify-content-between mt-n5\">\r\n        <label class=\"font-size-h6 font-weight-bolder text-dark pt-5\">Password</label>\r\n\r\n      </div>\r\n\r\n      <input class=\"form-control form-control-solid h-auto py-7 px-6 rounded-lg\" type=\"password\" name=\"password\" joyrideStep=\"thirdStep\" title=\"Password\" text=\"Provide your valid password\"\r\n        autocomplete=\"off\" formControlName=\"password\"\r\n        [ngClass]=\"{ 'is-in valid': loginForm.controls['password'].invalid }\"\r\n        placeholder=\"&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;\" />\r\n      <ng-container [ngTemplateOutlet]=\"formError\" [ngTemplateOutletContext]=\"{\r\n          validation: 'required',\r\n          message: 'Password is required',\r\n          control: loginForm.controls['password']\r\n        }\"></ng-container>\r\n      <ng-container [ngTemplateOutlet]=\"formError\" [ngTemplateOutletContext]=\"{\r\n          validation: 'minlength',\r\n          message: 'Password should contain at least 8 characters',\r\n          control: loginForm.controls['password']\r\n        }\"></ng-container>\r\n      <ng-container [ngTemplateOutlet]=\"formError\" [ngTemplateOutletContext]=\"{\r\n          validation: 'maxLength',\r\n          message: 'Password should have maximum 100 symbols',\r\n          control: loginForm.controls['password']\r\n        }\"></ng-container>\r\n    </div>\r\n    <!--end::Form group-->\r\n\r\n    <!--begin::Action-->\r\n    <div class=\"pb-lg-0 pb-5\">\r\n      <button type=\"submit\" id=\"kt_login_signin_submit\" class=\"btn font-weight-bolder font-size-h6 px-8 py-4 my-3 mr-3\"\r\n        [disabled]=\"loginForm.invalid\" style=\"background-color: #1e1e2d; color: #fff;\" joyrideStep=\"fourthStep\" title=\"Sign In\" text=\"By clicking this button you'll be redirected to the dashboard screen.\">\r\n        Sign In\r\n      </button>\r\n\r\n\r\n\r\n      <ng-container *ngIf=\"isLoading$ | async\">\r\n        <span class=\"spinner spinner-primary ml-5\"></span>\r\n      </ng-container>\r\n    </div>\r\n    <!--end::Action-->\r\n  </form>\r\n  <!--end::Form-->\r\n</div>\r\n<!--end::Signin-->\r\n\r\n<ng-template #formError let-control=\"control\" let-message=\"message\" let-validation=\"validation\">\r\n  <ng-container *ngIf=\"control.hasError(validation) && (control.dirty || control.touched)\">\r\n    <div class=\"fv-plugins-message-container\">\r\n      <div class=\"fv-help-block\">\r\n        {{ message }}\r\n      </div>\r\n    </div>\r\n  </ng-container>\r\n</ng-template>","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-logout',\r\n  templateUrl: './logout.component.html',\r\n  styleUrls: ['./logout.component.scss'],\r\n})\r\nexport class LogoutComponent implements OnInit {\r\n  constructor(private authService: AuthService) {\r\n    this.authService.logout();\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<p>logout works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ClubService } from './../../core/services/club.service';\r\nimport { ApiResponse } from '@app/core/models/response.model';\r\nimport { BaseClub } from './../../core/models/base-club.model';\r\n\r\n@Component({\r\n  selector: 'app-auth',\r\n  templateUrl: './auth.component.html',\r\n  styleUrls: ['./auth.component.scss']\r\n})\r\nexport class AuthComponent implements OnInit {\r\n\r\n  today: Date = new Date();\r\n  allClubs : BaseClub[] = [];\r\n  page: number\r\n  constructor(private _clubService : ClubService) {\r\n    this.page = 1\r\n  }\r\n\r\n  ngOnInit(): void {\r\n   \r\n  }\r\n\r\n\r\n  getAllClubs() {\r\n    this._clubService.getAllClubs(this.page).subscribe((res: ApiResponse<BaseClub[]>) => {\r\n      if(!res.hasErrors()) {\r\n        this.allClubs = res.data;\r\n        this.setDefaultClub()\r\n      }\r\n    }, (error) => {\r\n    })\r\n  }\r\n\r\n  setDefaultClub() {\r\n    let localClub = this._clubService.selectedClub;\r\n    if (!localClub) {\r\n      this._clubService.selectedClub = this.allClubs[0];\r\n      return;\r\n    }\r\n  }\r\n}\r\n","<!-- <form >\r\n  <label for=\"cars\">Choose a car:</label>\r\n  <select name=\"cars\" id=\"cars\">\r\n    <option value=\"volvo\">Volvo</option>\r\n    <option value=\"saab\">Saab</option>\r\n    <option value=\"opel\">Opel</option>\r\n    <option value=\"audi\">Audi</option>\r\n  </select>\r\n  <br><br>\r\n  <input type=\"submit\" value=\"Submit\">\r\n</form> -->\r\n\r\n\r\n\r\n<div class=\"d-flex flex-column flex-root h-100 \" id=\"kt_login_wrapper\">\r\n  <!--begin::Login-->\r\n  <div class=\"login login-1 login-signin-on d-flex flex-column flex-lg-row flex-column-fluid bg-white\" id=\"kt_login\">\r\n    <!--begin::Aside-->\r\n    <div class=\"login-aside d-flex flex-column flex-row-auto\" style=\"background-color: #1e1e2d;\">\r\n      <!--begin::Aside Top-->\r\n      <div class=\"d-flex flex-column-auto flex-column pt-lg-40 pt-15\">\r\n        <!--begin::Aside header-->\r\n        <a href=\"#\" class=\"text-center mb-10\">\r\n          <img src=\"./assets/media/logos/icon-dividis.png\" class=\"max-h-150px\" alt=\"\" />\r\n        </a>\r\n        <!--end::Aside header-->\r\n\r\n        <!--begin::Aside title-->\r\n        <h2 class=\"font-weight-bolder text-center font-size-h1 display-3\" style=\"color: #ffffff; letter-spacing: 1px;\">\r\n          D I V I D I S\r\n        \r\n        </h2>\r\n       \r\n        <span class=\"text-muted font-weight-bold text-muted d-block d-flex justify-content-center\" style=\"letter-spacing: 4.5px\">Social Media Manager</span>\r\n        <!--end::Aside title-->\r\n      </div>\r\n      <!--end::Aside Top-->\r\n\r\n      <!--begin::Aside Bottom-->\r\n      <div class=\"bg aside-img d-flex flex-row-fluid bgi-no-repeat bgi-position-y-bottom bgi-position-x-center\"\r\n        style=\"background-image: url('./assets/media/svg/illustrations/login-visual-5.svg')\"></div>\r\n      <!--end::Aside Bottom-->\r\n    </div>\r\n    <!--begin::Aside-->\r\n\r\n    <!--begin::Content-->\r\n    <div\r\n      class=\"login-content flex-row-fluid d-flex flex-column justify-content-center position-relative overflow-hidden p-7 mx-auto\">\r\n      <!--begin::Content body-->\r\n      <div class=\"d-flex flex-column-fluid flex-center\">\r\n        <router-outlet></router-outlet>\r\n      </div>\r\n      <!--end::Content body-->\r\n\r\n      <!--begin::Content footer-->\r\n      <!-- <div class=\"d-flex justify-content-lg-start justify-content-center align-items-end py-7 py-lg-0\">\r\n        <a href=\"#\" class=\"text-primary font-weight-bolder font-size-h5\">Terms</a>\r\n        <a href=\"#\" class=\"text-primary ml-10 font-weight-bolder font-size-h5\">Plans</a>\r\n        <a href=\"#\" class=\"text-primary ml-10 font-weight-bolder font-size-h5\">Contact Us</a>\r\n      </div> -->\r\n      <!--end::Content footer-->\r\n    </div>\r\n    <!--end::Content-->\r\n  </div>\r\n  <!--end::Login-->\r\n</div>","import { AbstractControl } from '@angular/forms';\r\n\r\nexport class ConfirmPasswordValidator {\r\n  /**\r\n   * Check matching password with confirm password\r\n   * @param control AbstractControl\r\n   */\r\n  static MatchPassword(control: AbstractControl) {\r\n    const password = control.get('password').value;\r\n\r\n    const confirmPassword = control.get('cPassword').value;\r\n\r\n    if (password !== confirmPassword) {\r\n      control.get('cPassword').setErrors({ ConfirmPassword: true });\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { first } from 'rxjs/operators';\r\n\r\nenum ErrorStates {\r\n  NotSubmitted,\r\n  HasError,\r\n  NoError,\r\n}\r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.component.html',\r\n  styleUrls: ['./forgot-password.component.scss'],\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n  forgotPasswordForm: FormGroup;\r\n  errorState: ErrorStates = ErrorStates.NotSubmitted;\r\n  errorStates = ErrorStates;\r\n  isLoading$: Observable<boolean>;\r\n\r\n  // private fields\r\n  private unsubscribe: Subscription[] = []; // Read more: => https://brianflove.com/2016/12/11/anguar-2-unsubscribe-observables/\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private authService: AuthService\r\n  ) {\r\n    this.isLoading$ = this.authService.isLoading$;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() {\r\n    return this.forgotPasswordForm.controls;\r\n  }\r\n\r\n  initForm() {\r\n    this.forgotPasswordForm = this.fb.group({\r\n      email: [\r\n        'admin@demo.com',\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.email,\r\n          Validators.minLength(3),\r\n          Validators.maxLength(320), // https://stackoverflow.com/questions/386294/what-is-the-maximum-length-of-a-valid-email-address\r\n        ]),\r\n      ],\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    this.errorState = ErrorStates.NotSubmitted;\r\n    const forgotPasswordSubscr = this.authService\r\n      .forgotPassword(this.f.email.value)\r\n      .pipe(first())\r\n      .subscribe((result: boolean) => {\r\n        this.errorState = result ? ErrorStates.NoError : ErrorStates.HasError;\r\n      });\r\n    this.unsubscribe.push(forgotPasswordSubscr);\r\n  }\r\n}\r\n","<div class=\"login-form login-forgot\">\r\n  <!--begin::Form-->\r\n  <form\r\n    class=\"form fv-plugins-bootstrap fv-plugins-framework\"\r\n    novalidate=\"novalidate\"\r\n    [formGroup]=\"forgotPasswordForm\"\r\n    (ngSubmit)=\"submit()\"\r\n    id=\"kt_login_forgot_form\"\r\n    [ngStyle]=\"{\r\n      display: errorState === errorStates.NoError ? 'none' : 'block'\r\n    }\"\r\n  >\r\n    <!--begin::Title-->\r\n    <div class=\"pb-13 pt-lg-0 pt-5\">\r\n      <h3 class=\"font-weight-bolder text-dark font-size-h4 font-size-h1-lg\">\r\n        Forgotten Password ?\r\n      </h3>\r\n      <p class=\"text-muted font-weight-bold font-size-h4\">\r\n        Enter your email to reset your password\r\n      </p>\r\n    </div>\r\n    <!--end::Title-->\r\n\r\n    <!-- begin::Alert error-->\r\n    <ng-container *ngIf=\"errorState === errorStates.HasError\">\r\n      <div\r\n        class=\"mb-10 alert alert-custom alert-light-danger alert-dismissible\"\r\n      >\r\n        <div class=\"alert-text\">The email detail is incorrect</div>\r\n      </div>\r\n    </ng-container>\r\n    <!-- end::Alert error-->\r\n\r\n    <!--begin::Form group-->\r\n    <div class=\"form-group fv-plugins-icon-container has-danger\">\r\n      <input\r\n        class=\"form-control form-control-solid h-auto py-7 px-6 rounded-lg font-size-h6\"\r\n        type=\"email\"\r\n        formControlName=\"email\"\r\n        placeholder=\"Email\"\r\n        name=\"email\"\r\n        autocomplete=\"off\"\r\n        [ngClass]=\"{\r\n          'is-invalid': forgotPasswordForm.controls['email'].invalid\r\n        }\"\r\n      />\r\n\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'required',\r\n          message: 'Email is required',\r\n          control: forgotPasswordForm.controls['email']\r\n        }\"\r\n      ></ng-container>\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'email',\r\n          message: 'Email is invalid',\r\n          control: forgotPasswordForm.controls['email']\r\n        }\"\r\n      ></ng-container>\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'minLength',\r\n          message: 'Email should have at least 3 symbols',\r\n          control: forgotPasswordForm.controls['email']\r\n        }\"\r\n      ></ng-container>\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'maxLength',\r\n          message: 'Email should have maximum 360 symbols',\r\n          control: forgotPasswordForm.controls['email']\r\n        }\"\r\n      ></ng-container>\r\n    </div>\r\n    <!--end::Form group-->\r\n    <!--begin::Form group-->\r\n    <div class=\"form-group d-flex flex-wrap pb-lg-0\">\r\n      <button\r\n        type=\"submit\"\r\n        id=\"kt_login_forgot_submit\"\r\n        class=\"btn btn-primary font-weight-bolder font-size-h6 px-8 py-4 my-3 mr-4\"\r\n      >\r\n        Submit\r\n      </button>\r\n      <a\r\n        routerLink=\"/auth/login\"\r\n        id=\"kt_login_forgot_cancel\"\r\n        class=\"btn btn-light-primary font-weight-bolder font-size-h6 px-8 py-4 my-3\"\r\n      >\r\n        Cancel\r\n      </a>\r\n\r\n      <ng-container *ngIf=\"isLoading$ | async\">\r\n        <span class=\"spinner spinner-primary ml-5\"></span>\r\n      </ng-container>\r\n    </div>\r\n    <!--end::Form group-->\r\n    <div></div>\r\n  </form>\r\n  <!--end::Form-->\r\n\r\n  <ng-container *ngIf=\"errorState === errorStates.NoError\">\r\n    <div\r\n      class=\"card card-custom bgi-no-repeat gutter-b\"\r\n      style=\"\r\n        height: 175px;\r\n        background-color: #4ab58e;\r\n        background-position: calc(100% + 1rem) bottom;\r\n        background-size: 25% auto;\r\n        background-image: url(assets/media/svg/humans/custom-1.svg);\r\n      \"\r\n    >\r\n      <!--begin::Body-->\r\n      <div class=\"card-body d-flex align-items-center\">\r\n        <div class=\"py-2\">\r\n          <h3 class=\"text-white font-weight-bolder mb-3\">Email is correct!</h3>\r\n          <p class=\"text-white font-size-lg\">\r\n            Message with 'recovery' instruction<br />\r\n            has been sent<br />\r\n          </p>\r\n          <a\r\n            routerLink=\"/auth/login\"\r\n            class=\"swal2-confirm btn font-weight-bold btn-light-primary\"\r\n          >\r\n            Ok, got it!\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <!--end::Body-->\r\n    </div>\r\n  </ng-container>\r\n</div>\r\n\r\n<ng-template\r\n  #formError\r\n  let-control=\"control\"\r\n  let-message=\"message\"\r\n  let-validation=\"validation\"\r\n>\r\n  <ng-container\r\n    *ngIf=\"control.hasError(validation) && (control.dirty || control.touched)\"\r\n  >\r\n    <div class=\"fv-plugins-message-container\">\r\n      <div class=\"fv-help-block\">\r\n        {{ message }}\r\n      </div>\r\n    </div>\r\n  </ng-container>\r\n</ng-template>\r\n","import { Overlay, CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, EventEmitter, ChangeDetectorRef, NgZone, ElementRef, Optional, Inject, Self, Attribute, ViewChild, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, ContentChild, NgModule } from '@angular/core';\nimport { mixinDisableRipple, mixinTabIndex, mixinDisabled, mixinErrorState, ErrorStateMatcher, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MAT_OPTION_PARENT_COMPONENT, MatOption, MAT_OPTGROUP, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport { MatFormField, MAT_FORM_FIELD, MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nimport { ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { ActiveDescendantKeyManager, LiveAnnouncer } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW, ENTER, SPACE, hasModifierKey, A } from '@angular/cdk/keycodes';\nimport { NgForm, FormGroupDirective, NgControl } from '@angular/forms';\nimport { Subject, defer, merge } from 'rxjs';\nimport { startWith, switchMap, take, filter, map, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { trigger, transition, query, animateChild, state, style, animate } from '@angular/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/forms';\nimport * as ɵngcc5 from '@angular/cdk/a11y';\nimport * as ɵngcc6 from '@angular/material/form-field';\nimport * as ɵngcc7 from '@angular/cdk/overlay';\nimport * as ɵngcc8 from '@angular/common';\n\nconst _c0 = [\"trigger\"];\nconst _c1 = [\"panel\"];\nfunction MatSelect_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.placeholder);\n} }\nfunction MatSelect_span_5_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 12);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r5.triggerValue);\n} }\nfunction MatSelect_span_5_ng_content_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 0, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatSelect_span_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 9);\n    ɵngcc0.ɵɵtemplate(1, MatSelect_span_5_span_1_Template, 2, 1, \"span\", 10);\n    ɵngcc0.ɵɵtemplate(2, MatSelect_span_5_ng_content_2_Template, 1, 0, \"ng-content\", 11);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", !!ctx_r3.customTrigger);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n} }\nfunction MatSelect_ng_template_8_Template(rf, ctx) { if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 13);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14, 15);\n    ɵngcc0.ɵɵlistener(\"@transformPanel.done\", function MatSelect_ng_template_8_Template_div_animation_transformPanel_done_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8._panelDoneAnimatingStream.next($event.toState); })(\"keydown\", function MatSelect_ng_template_8_Template_div_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10._handleKeydown($event); });\n    ɵngcc0.ɵɵprojection(3, 1);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transformPanelWrap\", undefined);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"mat-select-panel \", ctx_r4._getPanelTheme(), \"\");\n    ɵngcc0.ɵɵstyleProp(\"transform-origin\", ctx_r4._transformOrigin)(\"font-size\", ctx_r4._triggerFontSize, \"px\");\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r4.panelClass)(\"@transformPanel\", ctx_r4.multiple ? \"showing-multiple\" : \"showing\");\n    ɵngcc0.ɵɵattribute(\"id\", ctx_r4.id + \"-panel\")(\"aria-multiselectable\", ctx_r4.multiple)(\"aria-label\", ctx_r4.ariaLabel || null)(\"aria-labelledby\", ctx_r4._getPanelAriaLabelledby());\n} }\nconst _c2 = [[[\"mat-select-trigger\"]], \"*\"];\nconst _c3 = [\"mat-select-trigger\", \"*\"];\nconst matSelectAnimations = {\n    /**\n     * This animation ensures the select's overlay panel animation (transformPanel) is called when\n     * closing the select.\n     * This is needed due to https://github.com/angular/angular/issues/23302\n     */\n    transformPanelWrap: trigger('transformPanelWrap', [\n        transition('* => void', query('@transformPanel', [animateChild()], { optional: true }))\n    ]),\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0.8)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        state('showing', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 32px)',\n            transform: 'scaleY(1)'\n        })),\n        state('showing-multiple', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 64px)',\n            transform: 'scaleY(1)'\n        })),\n        transition('void => *', animate('120ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nfunction getMatSelectDynamicMultipleError() {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nfunction getMatSelectNonArrayValueError() {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nfunction getMatSelectNonFunctionValueError() {\n    return Error('`compareWith` must be a function.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId = 0;\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the alignment of the selected option over\n * the trigger element.\n */\n/**\n * The max height of the select's overlay panel.\n * @deprecated To be turned into a private variable.\n * @breaking-change 12.0.0\n */\nconst SELECT_PANEL_MAX_HEIGHT = 256;\n/**\n * The panel's padding on the x-axis.\n * @deprecated To be turned into a private variable.\n * @breaking-change 12.0.0\n */\nconst SELECT_PANEL_PADDING_X = 16;\n/**\n * The panel's x axis padding if it is indented (e.g. there is an option group).\n * @deprecated To be turned into a private variable.\n * @breaking-change 12.0.0\n */\nconst SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n/**\n * The height of the select items in `em` units.\n * @deprecated To be turned into a private variable.\n * @breaking-change 12.0.0\n */\nconst SELECT_ITEM_HEIGHT_EM = 3;\n// TODO(josephperrott): Revert to a constant after 2018 spec updates are fully merged.\n/**\n * Distance between the panel edge and the option text in\n * multi-selection mode.\n *\n * Calculated as:\n * (SELECT_PANEL_PADDING_X * 1.5) + 16 = 40\n * The padding is multiplied by 1.5 because the checkbox's margin is half the padding.\n * The checkbox width is 16px.\n *\n * @deprecated To be turned into a private variable.\n * @breaking-change 12.0.0\n */\nconst SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.5 + 16;\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n *\n * @deprecated To be turned into a private variable.\n * @breaking-change 12.0.0\n */\nconst SELECT_PANEL_VIEWPORT_PADDING = 8;\n/** Injection token that determines the scroll handling while a select is open. */\nconst MAT_SELECT_SCROLL_STRATEGY = new InjectionToken('mat-select-scroll-strategy');\n/** @docs-private */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** Injection token that can be used to provide the default options the select module. */\nconst MAT_SELECT_CONFIG = new InjectionToken('MAT_SELECT_CONFIG');\n/** @docs-private */\nconst MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/** Change event object that is emitted when the select value has changed. */\nclass MatSelectChange {\n    constructor(\n    /** Reference to the select that emitted the change event. */\n    source, \n    /** Current value of the select that emitted the event. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n// Boilerplate for applying mixins to MatSelect.\n/** @docs-private */\nclass MatSelectBase {\n    constructor(_elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._elementRef = _elementRef;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nconst _MatSelectMixinBase = mixinDisableRipple(mixinTabIndex(mixinDisabled(mixinErrorState(MatSelectBase))));\n/**\n * Injection token that can be used to reference instances of `MatSelectTrigger`. It serves as\n * alternative token to the actual `MatSelectTrigger` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SELECT_TRIGGER = new InjectionToken('MatSelectTrigger');\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nclass MatSelectTrigger {\n}\nMatSelectTrigger.ɵfac = function MatSelectTrigger_Factory(t) { return new (t || MatSelectTrigger)(); };\nMatSelectTrigger.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSelectTrigger, selectors: [[\"mat-select-trigger\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_SELECT_TRIGGER, useExisting: MatSelectTrigger }])] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectTrigger, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-select-trigger',\n                providers: [{ provide: MAT_SELECT_TRIGGER, useExisting: MatSelectTrigger }]\n            }]\n    }], null, null); })();\n/** Base class with all of the `MatSelect` functionality. */\nclass _MatSelectBase extends _MatSelectMixinBase {\n    constructor(_viewportRuler, _changeDetectorRef, _ngZone, _defaultErrorStateMatcher, elementRef, _dir, _parentForm, _parentFormGroup, _parentFormField, ngControl, tabIndex, scrollStrategyFactory, _liveAnnouncer, _defaultOptions) {\n        var _a, _b, _c;\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._viewportRuler = _viewportRuler;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._ngZone = _ngZone;\n        this._dir = _dir;\n        this._parentFormField = _parentFormField;\n        this.ngControl = ngControl;\n        this._liveAnnouncer = _liveAnnouncer;\n        this._defaultOptions = _defaultOptions;\n        /** Whether or not the overlay panel is open. */\n        this._panelOpen = false;\n        /** Comparison function to specify which option is displayed. Defaults to object equality. */\n        this._compareWith = (o1, o2) => o1 === o2;\n        /** Unique id for this input. */\n        this._uid = `mat-select-${nextUniqueId++}`;\n        /** Current `ariar-labelledby` value for the select trigger. */\n        this._triggerAriaLabelledBy = null;\n        /** Emits whenever the component is destroyed. */\n        this._destroy = new Subject();\n        /** `View -> model callback called when value changes` */\n        this._onChange = () => { };\n        /** `View -> model callback called when select has been touched` */\n        this._onTouched = () => { };\n        /** ID for the DOM node containing the select's value. */\n        this._valueId = `mat-select-value-${nextUniqueId++}`;\n        /** Emits when the panel element is finished transforming in. */\n        this._panelDoneAnimatingStream = new Subject();\n        this._overlayPanelClass = ((_a = this._defaultOptions) === null || _a === void 0 ? void 0 : _a.overlayPanelClass) || '';\n        this._focused = false;\n        /** A name for this control that can be used by `mat-form-field`. */\n        this.controlType = 'mat-select';\n        this._required = false;\n        this._multiple = false;\n        this._disableOptionCentering = (_c = (_b = this._defaultOptions) === null || _b === void 0 ? void 0 : _b.disableOptionCentering) !== null && _c !== void 0 ? _c : false;\n        /** Aria label of the select. */\n        this.ariaLabel = '';\n        /** Combined stream of all of the child options' change events. */\n        this.optionSelectionChanges = defer(() => {\n            const options = this.options;\n            if (options) {\n                return options.changes.pipe(startWith(options), switchMap(() => merge(...options.map(option => option.onSelectionChange))));\n            }\n            return this._ngZone.onStable\n                .pipe(take(1), switchMap(() => this.optionSelectionChanges));\n        });\n        /** Event emitted when the select panel has been toggled. */\n        this.openedChange = new EventEmitter();\n        /** Event emitted when the select has been opened. */\n        this._openedStream = this.openedChange.pipe(filter(o => o), map(() => { }));\n        /** Event emitted when the select has been closed. */\n        this._closedStream = this.openedChange.pipe(filter(o => !o), map(() => { }));\n        /** Event emitted when the selected value has been changed by the user. */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the select changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n        // Note that we only want to set this when the defaults pass it in, otherwise it should\n        // stay as `undefined` so that it falls back to the default in the key manager.\n        if ((_defaultOptions === null || _defaultOptions === void 0 ? void 0 : _defaultOptions.typeaheadDebounceInterval) != null) {\n            this._typeaheadDebounceInterval = _defaultOptions.typeaheadDebounceInterval;\n        }\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this._scrollStrategy = this._scrollStrategyFactory();\n        this.tabIndex = parseInt(tabIndex) || 0;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n    /** Whether the select is focused. */\n    get focused() {\n        return this._focused || this._panelOpen;\n    }\n    /** Placeholder to be shown if no value has been selected. */\n    get placeholder() { return this._placeholder; }\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /** Whether the component is required. */\n    get required() { return this._required; }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /** Whether the user should be allowed to select multiple options. */\n    get multiple() { return this._multiple; }\n    set multiple(value) {\n        if (this._selectionModel && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatSelectDynamicMultipleError();\n        }\n        this._multiple = coerceBooleanProperty(value);\n    }\n    /** Whether to center the active option over the trigger. */\n    get disableOptionCentering() { return this._disableOptionCentering; }\n    set disableOptionCentering(value) {\n        this._disableOptionCentering = coerceBooleanProperty(value);\n    }\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    get compareWith() { return this._compareWith; }\n    set compareWith(fn) {\n        if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatSelectNonFunctionValueError();\n        }\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /** Value of the select control. */\n    get value() { return this._value; }\n    set value(newValue) {\n        // Always re-assign an array, because it might have been mutated.\n        if (newValue !== this._value || (this._multiple && Array.isArray(newValue))) {\n            if (this.options) {\n                this._setSelectionByValue(newValue);\n            }\n            this._value = newValue;\n        }\n    }\n    /** Time to wait in milliseconds after the last keystroke before moving focus to an item. */\n    get typeaheadDebounceInterval() { return this._typeaheadDebounceInterval; }\n    set typeaheadDebounceInterval(value) {\n        this._typeaheadDebounceInterval = coerceNumberProperty(value);\n    }\n    /** Unique id of the element. */\n    get id() { return this._id; }\n    set id(value) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple);\n        this.stateChanges.next();\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe(() => this._panelDoneAnimating(this.panelOpen));\n    }\n    ngAfterContentInit() {\n        this._initKeyManager();\n        this._selectionModel.changed.pipe(takeUntil(this._destroy)).subscribe(event => {\n            event.added.forEach(option => option.select());\n            event.removed.forEach(option => option.deselect());\n        });\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe(() => {\n            this._resetOptions();\n            this._initializeSelection();\n        });\n    }\n    ngDoCheck() {\n        const newAriaLabelledby = this._getTriggerAriaLabelledby();\n        // We have to manage setting the `aria-labelledby` ourselves, because part of its value\n        // is computed as a result of a content query which can cause this binding to trigger a\n        // \"changed after checked\" error.\n        if (newAriaLabelledby !== this._triggerAriaLabelledBy) {\n            const element = this._elementRef.nativeElement;\n            this._triggerAriaLabelledBy = newAriaLabelledby;\n            if (newAriaLabelledby) {\n                element.setAttribute('aria-labelledby', newAriaLabelledby);\n            }\n            else {\n                element.removeAttribute('aria-labelledby');\n            }\n        }\n        if (this.ngControl) {\n            this.updateErrorState();\n        }\n    }\n    ngOnChanges(changes) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes['disabled']) {\n            this.stateChanges.next();\n        }\n        if (changes['typeaheadDebounceInterval'] && this._keyManager) {\n            this._keyManager.withTypeAhead(this._typeaheadDebounceInterval);\n        }\n    }\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n    /** Toggles the overlay panel open or closed. */\n    toggle() {\n        this.panelOpen ? this.close() : this.open();\n    }\n    /** Opens the overlay panel. */\n    open() {\n        if (this._canOpen()) {\n            this._panelOpen = true;\n            this._keyManager.withHorizontalOrientation(null);\n            this._highlightCorrectOption();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Closes the overlay panel and focuses the host element. */\n    close() {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /** Whether or not the overlay panel is open. */\n    get panelOpen() {\n        return this._panelOpen;\n    }\n    /** The currently selected option. */\n    get selected() {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n    /** The value displayed in the trigger. */\n    get triggerValue() {\n        if (this.empty) {\n            return '';\n        }\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected.map(option => option.viewValue);\n            if (this._isRtl()) {\n                selectedOptions.reverse();\n            }\n            // TODO(crisbeto): delimiter should be configurable for proper localization.\n            return selectedOptions.join(', ');\n        }\n        return this._selectionModel.selected[0].viewValue;\n    }\n    /** Whether the element is in RTL mode. */\n    _isRtl() {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n    /** Handles all keydown events on the select. */\n    _handleKeydown(event) {\n        if (!this.disabled) {\n            this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n        }\n    }\n    /** Handles keyboard events while the select is closed. */\n    _handleClosedKeydown(event) {\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n        const manager = this._keyManager;\n        // Open the select on ALT + arrow key to match the native <select>\n        if (!manager.isTyping() && (isOpenKey && !hasModifierKey(event)) ||\n            ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        }\n        else if (!this.multiple) {\n            const previouslySelectedOption = this.selected;\n            manager.onKeydown(event);\n            const selectedOption = this.selected;\n            // Since the value has changed, we need to announce it ourselves.\n            if (selectedOption && previouslySelectedOption !== selectedOption) {\n                // We set a duration on the live announcement, because we want the live element to be\n                // cleared after a while so that users can't navigate to it using the arrow keys.\n                this._liveAnnouncer.announce(selectedOption.viewValue, 10000);\n            }\n        }\n    }\n    /** Handles keyboard events when the selected is open. */\n    _handleOpenKeydown(event) {\n        const manager = this._keyManager;\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        const isTyping = manager.isTyping();\n        if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n            // Don't do anything in this case if the user is typing,\n            // because the typing sequence can include the space key.\n        }\n        else if (!isTyping && (keyCode === ENTER || keyCode === SPACE) && manager.activeItem &&\n            !hasModifierKey(event)) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        }\n        else if (!isTyping && this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            const hasDeselectedOptions = this.options.some(opt => !opt.disabled && !opt.selected);\n            this.options.forEach(option => {\n                if (!option.disabled) {\n                    hasDeselectedOptions ? option.select() : option.deselect();\n                }\n            });\n        }\n        else {\n            const previouslyFocusedIndex = manager.activeItemIndex;\n            manager.onKeydown(event);\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    _onBlur() {\n        this._focused = false;\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     */\n    _onAttached() {\n        this.overlayDir.positionChange.pipe(take(1)).subscribe(() => {\n            this._changeDetectorRef.detectChanges();\n            this._positioningSettled();\n        });\n    }\n    /** Returns the theme to be used on the panel. */\n    _getPanelTheme() {\n        return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n    }\n    /** Whether the select has a value. */\n    get empty() {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n            this.stateChanges.next();\n        });\n    }\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    _setSelectionByValue(value) {\n        this._selectionModel.selected.forEach(option => option.setInactiveStyles());\n        this._selectionModel.clear();\n        if (this.multiple && value) {\n            if (!Array.isArray(value) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getMatSelectNonArrayValueError();\n            }\n            value.forEach((currentValue) => this._selectValue(currentValue));\n            this._sortValues();\n        }\n        else {\n            const correspondingOption = this._selectValue(value);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.updateActiveItem(correspondingOption);\n            }\n            else if (!this.panelOpen) {\n                // Otherwise reset the highlighted option. Note that we only want to do this while\n                // closed, because doing it while open can shift the user's focus unnecessarily.\n                this._keyManager.updateActiveItem(-1);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    _selectValue(value) {\n        const correspondingOption = this.options.find((option) => {\n            // Skip options that are already in the model. This allows us to handle cases\n            // where the same primitive value is selected multiple times.\n            if (this._selectionModel.isSelected(option)) {\n                return false;\n            }\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            }\n            catch (error) {\n                if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n                return false;\n            }\n        });\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n        return correspondingOption;\n    }\n    /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n    _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options)\n            .withTypeAhead(this._typeaheadDebounceInterval)\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')\n            .withHomeAndEnd()\n            .withAllowedModifierKeys(['shiftKey']);\n        this._keyManager.tabOut.pipe(takeUntil(this._destroy)).subscribe(() => {\n            if (this.panelOpen) {\n                // Select the active item when tabbing away. This is consistent with how the native\n                // select behaves. Note that we only want to do this in single selection mode.\n                if (!this.multiple && this._keyManager.activeItem) {\n                    this._keyManager.activeItem._selectViaInteraction();\n                }\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            }\n        });\n        this._keyManager.change.pipe(takeUntil(this._destroy)).subscribe(() => {\n            if (this._panelOpen && this.panel) {\n                this._scrollOptionIntoView(this._keyManager.activeItemIndex || 0);\n            }\n            else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n        });\n    }\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    _resetOptions() {\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n        this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe(event => {\n            this._onSelect(event.source, event.isUserInput);\n            if (event.isUserInput && !this.multiple && this._panelOpen) {\n                this.close();\n                this.focus();\n            }\n        });\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map(option => option._stateChanges))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe(() => {\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        });\n    }\n    /** Invoked when an option is clicked. */\n    _onSelect(option, isUserInput) {\n        const wasSelected = this._selectionModel.isSelected(option);\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            if (this.value != null) {\n                this._propagateChanges(option.value);\n            }\n        }\n        else {\n            if (wasSelected !== option.selected) {\n                option.selected ? this._selectionModel.select(option) :\n                    this._selectionModel.deselect(option);\n            }\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n            if (this.multiple) {\n                this._sortValues();\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mat-option`.\n                    this.focus();\n                }\n            }\n        }\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n        this.stateChanges.next();\n    }\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    _sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n            this._selectionModel.sort((a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            });\n            this.stateChanges.next();\n        }\n    }\n    /** Emits change event to set the model value. */\n    _propagateChanges(fallbackValue) {\n        let valueToEmit = null;\n        if (this.multiple) {\n            valueToEmit = this.selected.map(option => option.value);\n        }\n        else {\n            valueToEmit = this.selected ? this.selected.value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(this._getChangeEvent(valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     */\n    _highlightCorrectOption() {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            }\n            else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n    /** Whether the panel is allowed to open. */\n    _canOpen() {\n        var _a;\n        return !this._panelOpen && !this.disabled && ((_a = this.options) === null || _a === void 0 ? void 0 : _a.length) > 0;\n    }\n    /** Focuses the select element. */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /** Gets the aria-labelledby for the select panel. */\n    _getPanelAriaLabelledby() {\n        var _a;\n        if (this.ariaLabel) {\n            return null;\n        }\n        const labelId = (_a = this._parentFormField) === null || _a === void 0 ? void 0 : _a.getLabelId();\n        const labelExpression = (labelId ? labelId + ' ' : '');\n        return this.ariaLabelledby ? labelExpression + this.ariaLabelledby : labelId;\n    }\n    /** Determines the `aria-activedescendant` to be set on the host. */\n    _getAriaActiveDescendant() {\n        if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n            return this._keyManager.activeItem.id;\n        }\n        return null;\n    }\n    /** Gets the aria-labelledby of the select component trigger. */\n    _getTriggerAriaLabelledby() {\n        var _a;\n        if (this.ariaLabel) {\n            return null;\n        }\n        const labelId = (_a = this._parentFormField) === null || _a === void 0 ? void 0 : _a.getLabelId();\n        let value = (labelId ? labelId + ' ' : '') + this._valueId;\n        if (this.ariaLabelledby) {\n            value += ' ' + this.ariaLabelledby;\n        }\n        return value;\n    }\n    /** Called when the overlay panel is done animating. */\n    _panelDoneAnimating(isOpen) {\n        this.openedChange.emit(isOpen);\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n        return this._panelOpen || !this.empty || (this._focused && !!this._placeholder);\n    }\n}\n_MatSelectBase.ɵfac = function _MatSelectBase_Factory(t) { return new (t || _MatSelectBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgControl, 10), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.LiveAnnouncer), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_CONFIG, 8)); };\n_MatSelectBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatSelectBase, viewQuery: function _MatSelectBase_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(CdkConnectedOverlay, true);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.trigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.overlayDir = _t.first);\n    } }, inputs: { ariaLabel: [\"aria-label\", \"ariaLabel\"], id: \"id\", placeholder: \"placeholder\", required: \"required\", multiple: \"multiple\", disableOptionCentering: \"disableOptionCentering\", compareWith: \"compareWith\", value: \"value\", typeaheadDebounceInterval: \"typeaheadDebounceInterval\", panelClass: \"panelClass\", ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], errorStateMatcher: \"errorStateMatcher\", sortComparator: \"sortComparator\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", _closedStream: \"closed\", selectionChange: \"selectionChange\", valueChange: \"valueChange\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n_MatSelectBase.ctorParameters = () => [\n    { type: ViewportRuler },\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: ErrorStateMatcher },\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }] },\n    { type: NgControl, decorators: [{ type: Self }, { type: Optional }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SELECT_SCROLL_STRATEGY,] }] },\n    { type: LiveAnnouncer },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_SELECT_CONFIG,] }] }\n];\n_MatSelectBase.propDecorators = {\n    trigger: [{ type: ViewChild, args: ['trigger',] }],\n    panel: [{ type: ViewChild, args: ['panel',] }],\n    overlayDir: [{ type: ViewChild, args: [CdkConnectedOverlay,] }],\n    panelClass: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    multiple: [{ type: Input }],\n    disableOptionCentering: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    value: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    errorStateMatcher: [{ type: Input }],\n    typeaheadDebounceInterval: [{ type: Input }],\n    sortComparator: [{ type: Input }],\n    id: [{ type: Input }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    selectionChange: [{ type: Output }],\n    valueChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatSelectBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc1.ViewportRuler }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.ErrorStateMatcher }, { type: ɵngcc0.ElementRef }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc6.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }] }, { type: ɵngcc4.NgControl, decorators: [{\n                type: Self\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SELECT_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc5.LiveAnnouncer }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_SELECT_CONFIG]\n            }] }]; }, { ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], openedChange: [{\n            type: Output\n        }], _openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], _closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], selectionChange: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], id: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], disableOptionCentering: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], typeaheadDebounceInterval: [{\n            type: Input\n        }], trigger: [{\n            type: ViewChild,\n            args: ['trigger']\n        }], panel: [{\n            type: ViewChild,\n            args: ['panel']\n        }], overlayDir: [{\n            type: ViewChild,\n            args: [CdkConnectedOverlay]\n        }], panelClass: [{\n            type: Input\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], errorStateMatcher: [{\n            type: Input\n        }], sortComparator: [{\n            type: Input\n        }] }); })();\nclass MatSelect extends _MatSelectBase {\n    constructor() {\n        super(...arguments);\n        /** The scroll position of the overlay panel, calculated to center the selected option. */\n        this._scrollTop = 0;\n        /** The cached font-size of the trigger element. */\n        this._triggerFontSize = 0;\n        /** The value of the select panel's transform-origin property. */\n        this._transformOrigin = 'top';\n        /**\n         * The y-offset of the overlay panel in relation to the trigger's top start corner.\n         * This must be adjusted to align the selected option text over the trigger text.\n         * when the panel opens. Will change based on the y-position of the selected option.\n         */\n        this._offsetY = 0;\n        this._positions = [\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'top',\n            },\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'bottom',\n            },\n        ];\n    }\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     */\n    _calculateOverlayScroll(selectedIndex, scrollBuffer, maxScroll) {\n        const itemHeight = this._getItemHeight();\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n        const halfOptionHeight = itemHeight / 2;\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n    ngOnInit() {\n        super.ngOnInit();\n        this._viewportRuler.change().pipe(takeUntil(this._destroy)).subscribe(() => {\n            if (this.panelOpen) {\n                this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n                this._changeDetectorRef.markForCheck();\n            }\n        });\n    }\n    open() {\n        if (super._canOpen()) {\n            super.open();\n            this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n            // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n            // `parseInt` ignores the trailing 'px' and converts this to a number.\n            this._triggerFontSize =\n                parseInt(getComputedStyle(this.trigger.nativeElement).fontSize || '0');\n            this._calculateOverlayPosition();\n            // Set the font size on the panel element once it exists.\n            this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n                if (this._triggerFontSize && this.overlayDir.overlayRef &&\n                    this.overlayDir.overlayRef.overlayElement) {\n                    this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n                }\n            });\n        }\n    }\n    /** Scrolls the active option into view. */\n    _scrollOptionIntoView(index) {\n        const labelCount = _countGroupLabelsBeforeOption(index, this.options, this.optionGroups);\n        const itemHeight = this._getItemHeight();\n        this.panel.nativeElement.scrollTop = _getOptionScrollPosition((index + labelCount) * itemHeight, itemHeight, this.panel.nativeElement.scrollTop, SELECT_PANEL_MAX_HEIGHT);\n    }\n    _positioningSettled() {\n        this._calculateOverlayOffsetX();\n        this.panel.nativeElement.scrollTop = this._scrollTop;\n    }\n    _panelDoneAnimating(isOpen) {\n        if (this.panelOpen) {\n            this._scrollTop = 0;\n        }\n        else {\n            this.overlayDir.offsetX = 0;\n            this._changeDetectorRef.markForCheck();\n        }\n        super._panelDoneAnimating(isOpen);\n    }\n    _getChangeEvent(value) {\n        return new MatSelectChange(this, value);\n    }\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     */\n    _calculateOverlayOffsetX() {\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const isRtl = this._isRtl();\n        const paddingWidth = this.multiple ? SELECT_MULTIPLE_PANEL_PADDING_X + SELECT_PANEL_PADDING_X :\n            SELECT_PANEL_PADDING_X * 2;\n        let offsetX;\n        // Adjust the offset, depending on the option padding.\n        if (this.multiple) {\n            offsetX = SELECT_MULTIPLE_PANEL_PADDING_X;\n        }\n        else if (this.disableOptionCentering) {\n            offsetX = SELECT_PANEL_PADDING_X;\n        }\n        else {\n            let selected = this._selectionModel.selected[0] || this.options.first;\n            offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n        }\n        // Invert the offset in LTR.\n        if (!isRtl) {\n            offsetX *= -1;\n        }\n        // Determine how much the select overflows on each side.\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     */\n    _calculateOverlayOffsetY(selectedIndex, scrollBuffer, maxScroll) {\n        const itemHeight = this._getItemHeight();\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        const maxOptionsDisplayed = Math.floor(SELECT_PANEL_MAX_HEIGHT / itemHeight);\n        let optionOffsetFromPanelTop;\n        // Disable offset if requested by user by returning 0 as value to offset\n        if (this.disableOptionCentering) {\n            return 0;\n        }\n        if (this._scrollTop === 0) {\n            optionOffsetFromPanelTop = selectedIndex * itemHeight;\n        }\n        else if (this._scrollTop === maxScroll) {\n            const firstDisplayedIndex = this._getItemCount() - maxOptionsDisplayed;\n            const selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\n            // The first item is partially out of the viewport. Therefore we need to calculate what\n            // portion of it is shown in the viewport and account for it in our offset.\n            let partialItemHeight = itemHeight - (this._getItemCount() * itemHeight - SELECT_PANEL_MAX_HEIGHT) % itemHeight;\n            // Because the panel height is longer than the height of the options alone,\n            // there is always extra padding at the top or bottom of the panel. When\n            // scrolled to the very bottom, this padding is at the top of the panel and\n            // must be added to the offset.\n            optionOffsetFromPanelTop = selectedDisplayIndex * itemHeight + partialItemHeight;\n        }\n        else {\n            // If the option was scrolled to the middle of the panel using a scroll buffer,\n            // its offset will be the scroll buffer minus the half height that was added to\n            // center it.\n            optionOffsetFromPanelTop = scrollBuffer - itemHeight / 2;\n        }\n        // The final offset is the option's offset from the top, adjusted for the height difference,\n        // multiplied by -1 to ensure that the overlay moves in the correct direction up the page.\n        // The value is rounded to prevent some browsers from blurring the content.\n        return Math.round(optionOffsetFromPanelTop * -1 - optionHeightAdjustment);\n    }\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     */\n    _checkOverlayWithinViewport(maxScroll) {\n        const itemHeight = this._getItemHeight();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        const bottomSpaceAvailable = viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n        const panelHeightTop = Math.abs(this._offsetY);\n        const totalPanelHeight = Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        }\n        else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        }\n        else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n    /** Adjusts the overlay panel up to fit in the viewport. */\n    _adjustPanelUp(panelHeightBottom, bottomSpaceAvailable) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n    /** Adjusts the overlay panel down to fit in the viewport. */\n    _adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n            return;\n        }\n    }\n    /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n    _calculateOverlayPosition() {\n        const itemHeight = this._getItemHeight();\n        const items = this._getItemCount();\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const scrollContainerHeight = items * itemHeight;\n        // The farthest the panel can be scrolled before it hits the bottom\n        const maxScroll = scrollContainerHeight - panelHeight;\n        // If no value is selected we open the popup to the first item.\n        let selectedOptionOffset;\n        if (this.empty) {\n            selectedOptionOffset = 0;\n        }\n        else {\n            selectedOptionOffset =\n                Math.max(this.options.toArray().indexOf(this._selectionModel.selected[0]), 0);\n        }\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options, this.optionGroups);\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n    /** Sets the transform origin point based on the selected option. */\n    _getOriginBasedOnOption() {\n        const itemHeight = this._getItemHeight();\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n        return `50% ${originY}px 0px`;\n    }\n    /** Calculates the height of the select's options. */\n    _getItemHeight() {\n        return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n    /** Calculates the amount of items in the select. This includes options and group labels. */\n    _getItemCount() {\n        return this.options.length + this.optionGroups.length;\n    }\n}\nMatSelect.ɵfac = function MatSelect_Factory(t) { return ɵMatSelect_BaseFactory(t || MatSelect); };\nMatSelect.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSelect, selectors: [[\"mat-select\"]], contentQueries: function MatSelect_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_SELECT_TRIGGER, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOption, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_OPTGROUP, true);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.customTrigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n    } }, hostAttrs: [\"role\", \"combobox\", \"aria-autocomplete\", \"none\", \"aria-haspopup\", \"true\", 1, \"mat-select\"], hostVars: 20, hostBindings: function MatSelect_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatSelect_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"focus\", function MatSelect_focus_HostBindingHandler() { return ctx._onFocus(); })(\"blur\", function MatSelect_blur_HostBindingHandler() { return ctx._onBlur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"tabindex\", ctx.tabIndex)(\"aria-controls\", ctx.panelOpen ? ctx.id + \"-panel\" : null)(\"aria-expanded\", ctx.panelOpen)(\"aria-label\", ctx.ariaLabel || null)(\"aria-required\", ctx.required.toString())(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-activedescendant\", ctx._getAriaActiveDescendant());\n        ɵngcc0.ɵɵclassProp(\"mat-select-disabled\", ctx.disabled)(\"mat-select-invalid\", ctx.errorState)(\"mat-select-required\", ctx.required)(\"mat-select-empty\", ctx.empty)(\"mat-select-multiple\", ctx.multiple);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, exportAs: [\"matSelect\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatFormFieldControl, useExisting: MatSelect },\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c3, decls: 9, vars: 12, consts: [[\"cdk-overlay-origin\", \"\", 1, \"mat-select-trigger\", 3, \"click\"], [\"origin\", \"cdkOverlayOrigin\", \"trigger\", \"\"], [1, \"mat-select-value\", 3, \"ngSwitch\"], [\"class\", \"mat-select-placeholder mat-select-min-line\", 4, \"ngSwitchCase\"], [\"class\", \"mat-select-value-text\", 3, \"ngSwitch\", 4, \"ngSwitchCase\"], [1, \"mat-select-arrow-wrapper\"], [1, \"mat-select-arrow\"], [\"cdk-connected-overlay\", \"\", \"cdkConnectedOverlayLockPosition\", \"\", \"cdkConnectedOverlayHasBackdrop\", \"\", \"cdkConnectedOverlayBackdropClass\", \"cdk-overlay-transparent-backdrop\", 3, \"cdkConnectedOverlayPanelClass\", \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayOffsetY\", \"backdropClick\", \"attach\", \"detach\"], [1, \"mat-select-placeholder\", \"mat-select-min-line\"], [1, \"mat-select-value-text\", 3, \"ngSwitch\"], [\"class\", \"mat-select-min-line\", 4, \"ngSwitchDefault\"], [4, \"ngSwitchCase\"], [1, \"mat-select-min-line\"], [1, \"mat-select-panel-wrap\"], [\"role\", \"listbox\", \"tabindex\", \"-1\", 3, \"ngClass\", \"keydown\"], [\"panel\", \"\"]], template: function MatSelect_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatSelect_Template_div_click_0_listener() { return ctx.toggle(); });\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(4, MatSelect_span_4_Template, 2, 1, \"span\", 3);\n        ɵngcc0.ɵɵtemplate(5, MatSelect_span_5_Template, 3, 2, \"span\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 5);\n        ɵngcc0.ɵɵelement(7, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(8, MatSelect_ng_template_8_Template, 4, 14, \"ng-template\", 7);\n        ɵngcc0.ɵɵlistener(\"backdropClick\", function MatSelect_Template_ng_template_backdropClick_8_listener() { return ctx.close(); })(\"attach\", function MatSelect_Template_ng_template_attach_8_listener() { return ctx._onAttached(); })(\"detach\", function MatSelect_Template_ng_template_detach_8_listener() { return ctx.close(); });\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵattribute(\"aria-owns\", ctx.panelOpen ? ctx.id + \"-panel\" : null);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.empty);\n        ɵngcc0.ɵɵattribute(\"id\", ctx._valueId);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"cdkConnectedOverlayPanelClass\", ctx._overlayPanelClass)(\"cdkConnectedOverlayScrollStrategy\", ctx._scrollStrategy)(\"cdkConnectedOverlayOrigin\", _r0)(\"cdkConnectedOverlayOpen\", ctx.panelOpen)(\"cdkConnectedOverlayPositions\", ctx._positions)(\"cdkConnectedOverlayMinWidth\", ctx._triggerRect == null ? null : ctx._triggerRect.width)(\"cdkConnectedOverlayOffsetY\", ctx._offsetY);\n    } }, directives: [ɵngcc7.CdkOverlayOrigin, ɵngcc8.NgSwitch, ɵngcc8.NgSwitchCase, ɵngcc7.CdkConnectedOverlay, ɵngcc8.NgSwitchDefault, ɵngcc8.NgClass], styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px;outline:0}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}.mat-select-min-line:empty::before{content:\\\" \\\";white-space:pre;width:1px}\\n\"], encapsulation: 2, data: { animation: [\n            matSelectAnimations.transformPanelWrap,\n            matSelectAnimations.transformPanel\n        ] }, changeDetection: 0 });\nMatSelect.propDecorators = {\n    options: [{ type: ContentChildren, args: [MatOption, { descendants: true },] }],\n    optionGroups: [{ type: ContentChildren, args: [MAT_OPTGROUP, { descendants: true },] }],\n    customTrigger: [{ type: ContentChild, args: [MAT_SELECT_TRIGGER,] }]\n};\nconst ɵMatSelect_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatSelect);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelect, [{\n        type: Component,\n        args: [{\n                selector: 'mat-select',\n                exportAs: 'matSelect',\n                template: \"<!--\\n Note that the select trigger element specifies `aria-owns` pointing to the listbox overlay.\\n While aria-owns is not required for the ARIA 1.2 `role=\\\"combobox\\\"` interaction pattern,\\n it fixes an issue with VoiceOver when the select appears inside of an `aria-model=\\\"true\\\"`\\n element (e.g. a dialog). Without this `aria-owns`, the `aria-modal` on a dialog prevents\\n VoiceOver from \\\"seeing\\\" the select's listbox overlay for aria-activedescendant.\\n Using `aria-owns` re-parents the select overlay so that it works again.\\n See https://github.com/angular/components/issues/20694\\n-->\\n<div cdk-overlay-origin\\n     [attr.aria-owns]=\\\"panelOpen ? id + '-panel' : null\\\"\\n     class=\\\"mat-select-trigger\\\"\\n     (click)=\\\"toggle()\\\"\\n     #origin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n  <div class=\\\"mat-select-value\\\" [ngSwitch]=\\\"empty\\\" [attr.id]=\\\"_valueId\\\">\\n    <span class=\\\"mat-select-placeholder mat-select-min-line\\\" *ngSwitchCase=\\\"true\\\">{{placeholder}}</span>\\n    <span class=\\\"mat-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\">\\n      <span class=\\\"mat-select-min-line\\\" *ngSwitchDefault>{{triggerValue}}</span>\\n      <ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"mat-select-arrow-wrapper\\\"><div class=\\\"mat-select-arrow\\\"></div></div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayPanelClass]=\\\"_overlayPanelClass\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"origin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayMinWidth]=\\\"_triggerRect?.width!\\\"\\n  [cdkConnectedOverlayOffsetY]=\\\"_offsetY\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"close()\\\">\\n  <div class=\\\"mat-select-panel-wrap\\\" [@transformPanelWrap]>\\n    <div\\n      #panel\\n      role=\\\"listbox\\\"\\n      tabindex=\\\"-1\\\"\\n      class=\\\"mat-select-panel {{ _getPanelTheme() }}\\\"\\n      [attr.id]=\\\"id + '-panel'\\\"\\n      [attr.aria-multiselectable]=\\\"multiple\\\"\\n      [attr.aria-label]=\\\"ariaLabel || null\\\"\\n      [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby()\\\"\\n      [ngClass]=\\\"panelClass\\\"\\n      [@transformPanel]=\\\"multiple ? 'showing-multiple' : 'showing'\\\"\\n      (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\"\\n      [style.transformOrigin]=\\\"_transformOrigin\\\"\\n      [style.font-size.px]=\\\"_triggerFontSize\\\"\\n      (keydown)=\\\"_handleKeydown($event)\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\",\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'role': 'combobox',\n                    'aria-autocomplete': 'none',\n                    // TODO(crisbeto): the value for aria-haspopup should be `listbox`, but currently it's difficult\n                    // to sync into Google, because of an outdated automated a11y check which flags it as an invalid\n                    // value. At some point we should try to switch it back to being `listbox`.\n                    'aria-haspopup': 'true',\n                    'class': 'mat-select',\n                    '[attr.id]': 'id',\n                    '[attr.tabindex]': 'tabIndex',\n                    '[attr.aria-controls]': 'panelOpen ? id + \"-panel\" : null',\n                    '[attr.aria-expanded]': 'panelOpen',\n                    '[attr.aria-label]': 'ariaLabel || null',\n                    '[attr.aria-required]': 'required.toString()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n                    '[class.mat-select-disabled]': 'disabled',\n                    '[class.mat-select-invalid]': 'errorState',\n                    '[class.mat-select-required]': 'required',\n                    '[class.mat-select-empty]': 'empty',\n                    '[class.mat-select-multiple]': 'multiple',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onBlur()'\n                },\n                animations: [\n                    matSelectAnimations.transformPanelWrap,\n                    matSelectAnimations.transformPanel\n                ],\n                providers: [\n                    { provide: MatFormFieldControl, useExisting: MatSelect },\n                    { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n                ],\n                styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px;outline:0}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}.mat-select-min-line:empty::before{content:\\\" \\\";white-space:pre;width:1px}\\n\"]\n            }]\n    }], null, { options: [{\n            type: ContentChildren,\n            args: [MatOption, { descendants: true }]\n        }], optionGroups: [{\n            type: ContentChildren,\n            args: [MAT_OPTGROUP, { descendants: true }]\n        }], customTrigger: [{\n            type: ContentChild,\n            args: [MAT_SELECT_TRIGGER]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSelectModule {\n}\nMatSelectModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSelectModule });\nMatSelectModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSelectModule_Factory(t) { return new (t || MatSelectModule)(); }, providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER], imports: [[\n            CommonModule,\n            OverlayModule,\n            MatOptionModule,\n            MatCommonModule,\n        ], CdkScrollableModule,\n        MatFormFieldModule,\n        MatOptionModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSelectModule, { declarations: function () { return [MatSelect, MatSelectTrigger]; }, imports: function () { return [CommonModule,\n        OverlayModule,\n        MatOptionModule,\n        MatCommonModule]; }, exports: function () { return [CdkScrollableModule,\n        MatFormFieldModule, MatSelect, MatSelectTrigger, MatOptionModule,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    OverlayModule,\n                    MatOptionModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    CdkScrollableModule,\n                    MatFormFieldModule,\n                    MatSelect,\n                    MatSelectTrigger,\n                    MatOptionModule,\n                    MatCommonModule\n                ],\n                declarations: [MatSelect, MatSelectTrigger],\n                providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECT_CONFIG, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, MAT_SELECT_TRIGGER, MatSelect, MatSelectChange, MatSelectModule, MatSelectTrigger, SELECT_ITEM_HEIGHT_EM, SELECT_MULTIPLE_PANEL_PADDING_X, SELECT_PANEL_INDENT_PADDING_X, SELECT_PANEL_MAX_HEIGHT, SELECT_PANEL_PADDING_X, SELECT_PANEL_VIEWPORT_PADDING, _MatSelectBase, matSelectAnimations };\n\n//# sourceMappingURL=select.js.map","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {AuthComponent} from './auth.component';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {RegistrationComponent} from './registration/registration.component';\r\nimport {ForgotPasswordComponent} from './forgot-password/forgot-password.component';\r\nimport {LogoutComponent} from './logout/logout.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AuthComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'login',\r\n        pathMatch: 'full'\r\n      },\r\n      {\r\n        path: 'login',\r\n        component: LoginComponent,\r\n        data: {returnUrl: window.location.pathname}\r\n      },\r\n      {\r\n        path: 'registration',\r\n        component: RegistrationComponent\r\n      },\r\n      {\r\n        path: 'forgot-password',\r\n        component: ForgotPasswordComponent\r\n      },\r\n      {\r\n        path: 'logout',\r\n        component: LogoutComponent\r\n      },\r\n      // {path: '', redirectTo: 'login', pathMatch: 'full'},\r\n      // {path: '**', redirectTo: 'login', pathMatch: 'full'},\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [ RouterModule.forChild(routes) ],\r\n  exports: [ RouterModule ]\r\n})\r\nexport class AuthRoutingModule {}\r\n","import { AuthModel } from './auth.model';\r\nimport { AddressModel } from './address.model';\r\nimport { SocialNetworksModel } from './social-networks.model';\r\n\r\nexport class UserModel extends AuthModel {\r\n  id: number;\r\n  username: string;\r\n  password: string;\r\n  fullname: string;\r\n  email: string;\r\n  pic: string;\r\n  roles: number[];\r\n  occupation: string;\r\n  companyName: string;\r\n  phone: string;\r\n  address?: AddressModel;\r\n  socialNetworks?: SocialNetworksModel;\r\n  // personal information\r\n  firstname: string;\r\n  lastname: string;\r\n  website: string;\r\n  // account information\r\n  language: string;\r\n  timeZone: string;\r\n  communication: {\r\n    email: boolean,\r\n    sms: boolean,\r\n    phone: boolean\r\n  };\r\n  // email settings\r\n  emailSettings: {\r\n    emailNotification: boolean,\r\n    sendCopyToPersonalEmail: boolean,\r\n    activityRelatesEmail: {\r\n      youHaveNewNotifications: boolean,\r\n      youAreSentADirectMessage: boolean,\r\n      someoneAddsYouAsAsAConnection: boolean,\r\n      uponNewOrder: boolean,\r\n      newMembershipApproval: boolean,\r\n      memberRegistration: boolean\r\n    },\r\n    updatesFromKeenthemes: {\r\n      newsAboutKeenthemesProductsAndFeatureUpdates: boolean,\r\n      tipsOnGettingMoreOutOfKeen: boolean,\r\n      thingsYouMissedSindeYouLastLoggedIntoKeen: boolean,\r\n      newsAboutMetronicOnPartnerProductsAndOtherServices: boolean,\r\n      tipsOnMetronicBusinessProducts: boolean\r\n    }\r\n  };\r\n\r\n  setUser(user: any) {\r\n    this.id = user.id;\r\n    this.username = user.username || '';\r\n    this.password = user.password || '';\r\n    this.fullname = user.fullname || '';\r\n    this.email = user.email || '';\r\n    this.pic = user.pic || './assets/media/users/default.jpg';\r\n    this.roles = user.roles || [];\r\n    this.occupation = user.occupation || '';\r\n    this.companyName = user.companyName || '';\r\n    this.phone = user.phone || '';\r\n    this.address = user.address;\r\n    this.socialNetworks = user.socialNetworks;\r\n  }\r\n}\r\n"]}